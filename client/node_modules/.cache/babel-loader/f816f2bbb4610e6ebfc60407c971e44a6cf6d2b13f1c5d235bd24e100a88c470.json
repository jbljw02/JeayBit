{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst cr_name = createSlice({\n  name: 'cr_name',\n  initialState: [],\n  reducers: {\n    setCr_name: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_price = createSlice({\n  name: 'cr_price',\n  initialState: [],\n  reducers: {\n    setCr_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_market = createSlice({\n  name: 'cr_market',\n  initialState: [],\n  reducers: {\n    setCr_market: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change = createSlice({\n  name: 'cr_change',\n  initialState: [],\n  reducers: {\n    setCr_change: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change_rate = createSlice({\n  name: 'cr_change_rate',\n  initialState: [],\n  reducers: {\n    setCr_change_rate: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change_price = createSlice({\n  name: 'cr_change_price',\n  initialState: [],\n  reducers: {\n    setCr_change_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_trade_price = createSlice({\n  name: 'cr_trade_price',\n  initialState: [],\n  reducers: {\n    setCr_trade_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_trade_volume = createSlice({\n  name: 'cr_trade_volume',\n  initialState: [],\n  reducers: {\n    setCr_trade_volume: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_open_price = createSlice({\n  name: 'cr_open_price',\n  initialState: [],\n  reducers: {\n    setCr_open_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_high_price = createSlice({\n  name: 'cr_high_price',\n  initialState: [],\n  reducers: {\n    setCr_high_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_low_price = createSlice({\n  name: 'cr_low_price',\n  initialState: [],\n  reducers: {\n    setCr_low_price: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst star = createSlice({\n  name: 'star',\n  initialState: [],\n  reducers: {\n    setStar: (state, action) => {\n      const index = action.payload;\n\n      // 별의 on일 때 클릭하면 off로, off일 때 클릭하면 on으로 변경\n      state[index] = state[index] === 'starOn' ? 'starOff' : 'starOn';\n    }\n  }\n});\nconst filteredData = createSlice({\n  name: 'filteredData',\n  initialState: [],\n  reducers: {\n    setFilteredData: (state, action) => {\n      return action.payload;\n    }\n  }\n});\n\n// 테이블에서 선택된 화폐의 정보들에 대한 state\nconst cr_selected = createSlice({\n  name: 'cr_selected',\n  initialState: {},\n  reducers: {\n    setCr_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_name_selected = createSlice({\n  name: 'cr_selected',\n  initialState: '',\n  reducers: {\n    setCr_name_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_market_selected = createSlice({\n  name: 'cr_market_selected',\n  initialState: '',\n  reducers: {\n    setCr_market_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_price_selected = createSlice({\n  name: 'cr_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change_selected = createSlice({\n  name: 'cr_change_selected',\n  initialState: '',\n  reducers: {\n    setCr_change_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change_rate_selected = createSlice({\n  name: 'cr_change_rate_selected',\n  initialState: '',\n  reducers: {\n    setCr_change_rate_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_change_price_selected = createSlice({\n  name: 'cr_change_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_change_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_trade_price_selected = createSlice({\n  name: 'cr_trade_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_trade_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_trade_volume_selected = createSlice({\n  name: 'cr_trade_volume_selected',\n  initialState: '',\n  reducers: {\n    setCr_trade_volume_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_open_price_selected = createSlice({\n  name: 'cr_trade_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_open_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_high_price_selected = createSlice({\n  name: 'cr_high_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_high_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_low_price_selected = createSlice({\n  name: 'cr_low_price_selected',\n  initialState: '',\n  reducers: {\n    setCr_low_price_selected: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst sortedData = createSlice({\n  name: 'sortedData',\n  initialState: [],\n  reducers: {\n    setSortedData: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst delimitedTime = createSlice({\n  name: 'delimitedTime',\n  initialState: ['1분', '5분', '10분', '30분', '1시간', '4시간'],\n  reducers: {\n    setDelimitedTime: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst delimitedDate = createSlice({\n  name: 'delimitedDate',\n  initialState: ['1일', '1주', '1개월'],\n  reducers: {\n    setDelimitedDate: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst candle_per_minute = createSlice({\n  name: 'candle_per_minute',\n  initialState: [],\n  reducers: {\n    setCandle_per_minute: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst candle_per_date = createSlice({\n  name: 'candle_per_date',\n  initialState: [],\n  reducers: {\n    setCandle_per_date: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst candle_per_date_BTC = createSlice({\n  name: 'candle_per_date_BTC',\n  initialState: [],\n  reducers: {\n    setCandle_per_date_BTC: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst candle_per_week = createSlice({\n  name: 'candle_per_week',\n  initialState: [],\n  reducers: {\n    setCandle_per_week: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst candle_per_month = createSlice({\n  name: 'candle_per_month',\n  initialState: [],\n  reducers: {\n    setCandle_per_month: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst selectedChartSort = createSlice({\n  name: 'selectedChartSort',\n  initialState: '1일',\n  reducers: {\n    setSelectedChartSort: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst chartSortTime = createSlice({\n  name: 'chartSortTime',\n  initialState: '',\n  reducers: {\n    setChartSortTime: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst chartSortDate = createSlice({\n  name: 'chartSortDate',\n  initialState: '1일',\n  reducers: {\n    setChartSortDate: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst closed_data = createSlice({\n  name: 'closed_data',\n  initialState: [],\n  reducers: {\n    setClosed_data: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst asking_data = createSlice({\n  name: 'asking_data',\n  initialState: [],\n  reducers: {\n    setAsking_data: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst asking_dateTime = createSlice({\n  name: 'asking_dateTime',\n  initialState: '',\n  reducers: {\n    setAsking_dateTime: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst asking_totalAskSize = createSlice({\n  name: 'asking_totalAskSize',\n  initialState: '',\n  reducers: {\n    setAsking_totalAskSize: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst asking_totalBidSize = createSlice({\n  name: 'asking_totalBidSize',\n  initialState: '',\n  reducers: {\n    setAsking_totalBidSize: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst theme = createSlice({\n  name: 'theme',\n  initialState: false,\n  reducers: {\n    setTheme: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst logInUser = createSlice({\n  name: 'logInUser',\n  initialState: '',\n  reducers: {\n    setLogInUser: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst logInEmail = createSlice({\n  name: 'logInEmail',\n  initialState: '',\n  reducers: {\n    setLogInEmail: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst favoriteCrypto = createSlice({\n  name: 'favoriteCrypto',\n  initialState: '',\n  reducers: {\n    setFavoriteCrypto: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst isFavorited = createSlice({\n  name: 'isFavorited',\n  initialState: false,\n  reducers: {\n    setIsFavorited: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst ownedCrypto = createSlice({\n  name: 'ownedCrypto',\n  initialState: '',\n  reducers: {\n    setOwnedCrypto: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst isOwned = createSlice({\n  name: 'isOwned',\n  initialState: false,\n  reducers: {\n    setIsOwned: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst userWallet = createSlice({\n  name: 'userWallet',\n  initialState: 0,\n  reducers: {\n    setUserWallet: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst cr_clickedIndex = createSlice({\n  name: 'cr_clickedIndex',\n  initialState: 0,\n  reducers: {\n    setCr_clickedIndex: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst buyingPrice = createSlice({\n  name: 'buyingPrice',\n  initialState: 0,\n  reducers: {\n    setBuyingPrice: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst balanceUpdate = createSlice({\n  name: 'balanceUpdate',\n  initialState: false,\n  reducers: {\n    setBalanceUpdate: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst buyingCrypto = createSlice({\n  name: 'buyingCrypto',\n  initialState: '',\n  reducers: {\n    setBuyingCrypto: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst sellingPrice = createSlice({\n  name: 'sellingPrice',\n  initialState: 0,\n  reducers: {\n    setSellingPrice: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst sectionChange = createSlice({\n  name: 'sectionChange',\n  initialState: '매수',\n  reducers: {\n    setSectionChange: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst userTradeHistory = createSlice({\n  name: 'userTradeHisotry',\n  initialState: [],\n  reducers: {\n    setUserTradeHistory: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst userTradeHistory_unSigned = createSlice({\n  name: 'userTradeHistory_unSigned',\n  initialState: [],\n  reducers: {\n    setUserTradeHistory_unSigned: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst isBuying = createSlice({\n  name: 'isBuying',\n  initialState: '',\n  reducers: {\n    setIsBuying: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst isSelling = createSlice({\n  name: 'isSelling',\n  initialState: '',\n  reducers: {\n    setIsSelling: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nconst askingData_unSigned = createSlice({\n  name: 'askingData_unSigned',\n  initialState: {},\n  reducers: {\n    setAskingData_unSigned: (state, action) => {\n      state[action.payload.market] = action.payload.data;\n    }\n  }\n});\nconst transferSort = createSlice({\n  name: 'transferSort',\n  initialState: '입금',\n  reducers: {\n    setTransferSort: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport default configureStore({\n  reducer: {\n    cr_name: cr_name.reducer,\n    cr_price: cr_price.reducer,\n    cr_market: cr_market.reducer,\n    cr_change: cr_change.reducer,\n    cr_change_rate: cr_change_rate.reducer,\n    cr_change_price: cr_change_price.reducer,\n    cr_trade_price: cr_trade_price.reducer,\n    cr_trade_volume: cr_trade_volume.reducer,\n    cr_open_price: cr_open_price.reducer,\n    cr_high_price: cr_high_price.reducer,\n    cr_low_price: cr_low_price.reducer,\n    star: star.reducer,\n    filteredData: filteredData.reducer,\n    cr_selected: cr_selected.reducer,\n    cr_name_selected: cr_name_selected.reducer,\n    cr_market_selected: cr_market_selected.reducer,\n    cr_price_selected: cr_price_selected.reducer,\n    cr_change_selected: cr_change_selected.reducer,\n    cr_change_rate_selected: cr_change_rate_selected.reducer,\n    cr_change_price_selected: cr_change_price_selected.reducer,\n    cr_trade_price_selected: cr_trade_price_selected.reducer,\n    cr_trade_volume_selected: cr_trade_volume_selected.reducer,\n    cr_open_price_selected: cr_open_price_selected.reducer,\n    cr_high_price_selected: cr_high_price_selected.reducer,\n    cr_low_price_selected: cr_low_price_selected.reducer,\n    sortedData: sortedData.reducer,\n    delimitedTime: delimitedTime.reducer,\n    delimitedDate: delimitedDate.reducer,\n    candle_per_minute: candle_per_minute.reducer,\n    candle_per_date: candle_per_date.reducer,\n    candle_per_date_BTC: candle_per_date_BTC.reducer,\n    candle_per_week: candle_per_week.reducer,\n    candle_per_month: candle_per_month.reducer,\n    selectedChartSort: selectedChartSort.reducer,\n    chartSortTime: chartSortTime.reducer,\n    closed_data: closed_data.reducer,\n    asking_data: asking_data.reducer,\n    asking_dateTime: asking_dateTime.reducer,\n    chartSortDate: chartSortDate.reducer,\n    asking_totalAskSize: asking_totalAskSize.reducer,\n    asking_totalBidSize: asking_totalBidSize.reducer,\n    theme: theme.reducer,\n    logInUser: logInUser.reducer,\n    logInEmail: logInEmail.reducer,\n    favoriteCrypto: favoriteCrypto.reducer,\n    isFavorited: isFavorited.reducer,\n    ownedCrypto: ownedCrypto.reducer,\n    isOwned: isOwned.reducer,\n    userWallet: userWallet.reducer,\n    cr_clickedIndex: cr_clickedIndex.reducer,\n    buyingPrice: buyingPrice.reducer,\n    balanceUpdate: balanceUpdate.reducer,\n    buyingCrypto: buyingCrypto.reducer,\n    sellingPrice: sellingPrice.reducer,\n    sectionChange: sectionChange.reducer,\n    userTradeHistory: userTradeHistory.reducer,\n    userTradeHistory_unSigned: userTradeHistory_unSigned.reducer,\n    isBuying: isBuying.reducer,\n    isSelling: isSelling.reducer,\n    askingData_unSigned: askingData_unSigned.reducer,\n    transferSort: transferSort.reducer\n  }\n});\n\n// const rootReducer = {\n//   cr_name: cr_name.reducer,\n//   cr_price: cr_price.reducer,\n//   cr_market: cr_market.reducer,\n//   cr_change: cr_change.reducer,\n//   cr_change_rate: cr_change_rate.reducer,\n//   cr_change_price: cr_change_price.reducer,\n//   cr_trade_price: cr_trade_price.reducer,\n//   star: star.reducer,\n//   filteredData: filteredData.reducer,\n// };\n\n// const store = configureStore({\n//   reducer: rootReducer,\n// });\n\nexport const {\n  setCr_name\n} = cr_name.actions;\nexport const {\n  setCr_price\n} = cr_price.actions;\nexport const {\n  setCr_market\n} = cr_market.actions;\nexport const {\n  setCr_change\n} = cr_change.actions;\nexport const {\n  setCr_change_rate\n} = cr_change_rate.actions;\nexport const {\n  setCr_change_price\n} = cr_change_price.actions;\nexport const {\n  setCr_trade_price\n} = cr_trade_price.actions;\nexport const {\n  setCr_trade_volume\n} = cr_trade_volume.actions;\nexport const {\n  setCr_open_price\n} = cr_open_price.actions;\nexport const {\n  setCr_high_price\n} = cr_high_price.actions;\nexport const {\n  setCr_low_price\n} = cr_low_price.actions;\nexport const {\n  setStar\n} = star.actions;\nexport const {\n  setFilteredData\n} = filteredData.actions;\nexport const {\n  setCr_selected\n} = cr_selected.actions;\nexport const {\n  setCr_name_selected\n} = cr_name_selected.actions;\nexport const {\n  setCr_market_selected\n} = cr_market_selected.actions;\nexport const {\n  setCr_price_selected\n} = cr_price_selected.actions;\nexport const {\n  setCr_change_selected\n} = cr_change_selected.actions;\nexport const {\n  setCr_change_rate_selected\n} = cr_change_rate_selected.actions;\nexport const {\n  setCr_change_price_selected\n} = cr_change_price_selected.actions;\nexport const {\n  setCr_trade_price_selected\n} = cr_trade_price_selected.actions;\nexport const {\n  setCr_trade_volume_selected\n} = cr_trade_volume_selected.actions;\nexport const {\n  setCr_open_price_selected\n} = cr_open_price_selected.actions;\nexport const {\n  setCr_high_price_selected\n} = cr_high_price_selected.actions;\nexport const {\n  setCr_low_price_selected\n} = cr_low_price_selected.actions;\nexport const {\n  setSortedData\n} = sortedData.actions;\nexport const {\n  setDelimitedTime\n} = delimitedTime.actions;\nexport const {\n  setDelimitedDate\n} = delimitedDate.actions;\nexport const {\n  setCandle_per_minute\n} = candle_per_minute.actions;\nexport const {\n  setCandle_per_date\n} = candle_per_date.actions;\nexport const {\n  setCandle_per_date_BTC\n} = candle_per_date_BTC.actions;\nexport const {\n  setCandle_per_week\n} = candle_per_week.actions;\nexport const {\n  setCandle_per_month\n} = candle_per_month.actions;\nexport const {\n  setSelectedChartSort\n} = selectedChartSort.actions;\nexport const {\n  setClosed_data\n} = closed_data.actions;\nexport const {\n  setAsking_data\n} = asking_data.actions;\nexport const {\n  setAsking_dateTime\n} = asking_dateTime.actions;\nexport const {\n  setChartSortTime\n} = chartSortTime.actions;\nexport const {\n  setChartSortDate\n} = chartSortDate.actions;\nexport const {\n  setAsking_totalAskSize\n} = asking_totalAskSize.actions;\nexport const {\n  setAsking_totalBidSize\n} = asking_totalBidSize.actions;\nexport const {\n  setTheme\n} = theme.actions;\nexport const {\n  setLogInUser\n} = logInUser.actions;\nexport const {\n  setLogInEmail\n} = logInEmail.actions;\nexport const {\n  setFavoriteCrypto\n} = favoriteCrypto.actions;\nexport const {\n  setIsFavorited\n} = isFavorited.actions;\nexport const {\n  setOwnedCrypto\n} = ownedCrypto.actions;\nexport const {\n  setIsOwned\n} = isOwned.actions;\nexport const {\n  setUserWallet\n} = userWallet.actions;\nexport const {\n  setCr_clickedIndex\n} = cr_clickedIndex.actions;\nexport const {\n  setBuyingPrice\n} = buyingPrice.actions;\nexport const {\n  setBalanceUpdate\n} = balanceUpdate.actions;\nexport const {\n  setBuyingCrypto\n} = buyingCrypto.actions;\nexport const {\n  setSellingPrice\n} = sellingPrice.actions;\nexport const {\n  setSectionChange\n} = sectionChange.actions;\nexport const {\n  setUserTradeHistory\n} = userTradeHistory.actions;\nexport const {\n  setUserTradeHistory_unSigned\n} = userTradeHistory_unSigned.actions;\nexport const {\n  setIsBuying\n} = isBuying.actions;\nexport const {\n  setIsSelling\n} = isSelling.actions;\nexport const {\n  setAskingData_unSigned\n} = askingData_unSigned.actions;\nexport const {\n  setTransferSort\n} = transferSort.actions;\n\n// export default store;","map":{"version":3,"names":["configureStore","createSlice","cr_name","name","initialState","reducers","setCr_name","state","action","payload","cr_price","setCr_price","cr_market","setCr_market","cr_change","setCr_change","cr_change_rate","setCr_change_rate","cr_change_price","setCr_change_price","cr_trade_price","setCr_trade_price","cr_trade_volume","setCr_trade_volume","cr_open_price","setCr_open_price","cr_high_price","setCr_high_price","cr_low_price","setCr_low_price","star","setStar","index","filteredData","setFilteredData","cr_selected","setCr_selected","cr_name_selected","setCr_name_selected","cr_market_selected","setCr_market_selected","cr_price_selected","setCr_price_selected","cr_change_selected","setCr_change_selected","cr_change_rate_selected","setCr_change_rate_selected","cr_change_price_selected","setCr_change_price_selected","cr_trade_price_selected","setCr_trade_price_selected","cr_trade_volume_selected","setCr_trade_volume_selected","cr_open_price_selected","setCr_open_price_selected","cr_high_price_selected","setCr_high_price_selected","cr_low_price_selected","setCr_low_price_selected","sortedData","setSortedData","delimitedTime","setDelimitedTime","delimitedDate","setDelimitedDate","candle_per_minute","setCandle_per_minute","candle_per_date","setCandle_per_date","candle_per_date_BTC","setCandle_per_date_BTC","candle_per_week","setCandle_per_week","candle_per_month","setCandle_per_month","selectedChartSort","setSelectedChartSort","chartSortTime","setChartSortTime","chartSortDate","setChartSortDate","closed_data","setClosed_data","asking_data","setAsking_data","asking_dateTime","setAsking_dateTime","asking_totalAskSize","setAsking_totalAskSize","asking_totalBidSize","setAsking_totalBidSize","theme","setTheme","logInUser","setLogInUser","logInEmail","setLogInEmail","favoriteCrypto","setFavoriteCrypto","isFavorited","setIsFavorited","ownedCrypto","setOwnedCrypto","isOwned","setIsOwned","userWallet","setUserWallet","cr_clickedIndex","setCr_clickedIndex","buyingPrice","setBuyingPrice","balanceUpdate","setBalanceUpdate","buyingCrypto","setBuyingCrypto","sellingPrice","setSellingPrice","sectionChange","setSectionChange","userTradeHistory","setUserTradeHistory","userTradeHistory_unSigned","setUserTradeHistory_unSigned","isBuying","setIsBuying","isSelling","setIsSelling","askingData_unSigned","setAskingData_unSigned","market","data","transferSort","setTransferSort","reducer","actions"],"sources":["C:/VS_Project/JeayBit/client/src/store.ts"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\r\n\r\nexport type Crypto = {\r\n  name: string,\r\n  price: number,\r\n  market: string,\r\n  change: string,\r\n  change_rate: number,\r\n  change_price: number,\r\n  trade_price: number,\r\n  trade_volume: number,\r\n  open_price: number,\r\n  high_price: number,\r\n  low_price: number,\r\n  star: string,\r\n  isFavorited: boolean,\r\n}\r\n\r\nexport type ClosedData = {\r\n  trade_date_utc: string,\r\n  trade_time_utc: string,\r\n  trade_price: number,\r\n  trade_volume: number,\r\n  ask_bid: string,\r\n  timestamp: number,\r\n}\r\n\r\nexport type AskingData = {\r\n  ask_price: number,\r\n  ask_size: number,\r\n  bid_price: number,\r\n  bid_size: number,\r\n}\r\n\r\nexport type Market = {\r\n  market: string,\r\n  candle_date_time_utc: string,\r\n  candle_date_time_kst: string,\r\n  opening_price: number,\r\n  high_price: number,\r\n  low_price: number,\r\n  trade_price: number,\r\n}\r\n\r\nexport type FavoriteCrypto = {\r\n  crypto_name: string,\r\n  isFavorited: boolean\r\n}\r\n\r\nexport type OwnedCrypto = {\r\n  crypto_name: string,\r\n  isOwned: boolean,\r\n  quantity: number,\r\n}\r\n\r\nexport type UserTradeHistory = {\r\n  id: string,\r\n  crypto_market: string,\r\n  crypto_name: string,\r\n  crypto_price: number,\r\n  trade_amount: string,\r\n  trade_category: string,\r\n  trade_price: string,\r\n  trade_time: any,\r\n  user: string,\r\n  is_signed: boolean,\r\n}\r\n\r\nexport type UnsginedAskingData = {\r\n  ask_price: number,\r\n  bid_price: number,\r\n}\r\n\r\nexport type RootState = {\r\n  cr_name: string[],\r\n  cr_price: number[],\r\n  cr_market: string[],\r\n  cr_change: string[],\r\n  cr_change_rate: number[],\r\n  cr_change_price: number[],\r\n  cr_trade_price: number[],\r\n  cr_trade_volume: number[],\r\n  cr_open_price: number[],\r\n  cr_high_price: number[],\r\n  cr_low_price: number[],\r\n  star: string[],\r\n  filteredData: Crypto[],\r\n  cr_selected: Crypto,\r\n  cr_name_selected: string,\r\n  cr_market_selected: string,\r\n  cr_price_selected: number,\r\n  cr_change_selected: string,\r\n  cr_change_rate_selected: string,\r\n  cr_change_price_selected: string,\r\n  cr_trade_price_selected: number,\r\n  cr_trade_volume_selected: number,\r\n  cr_open_price_selected: number,\r\n  cr_high_price_selected: number,\r\n  cr_low_price_selected: number,\r\n  sortedData: Crypto[],\r\n  delimitedTime: string[],\r\n  delimitedDate: string[],\r\n  candle_per_minute: Market[],\r\n  candle_per_date: Market[],\r\n  candle_per_date_BTC: Market[],\r\n  candle_per_week: Market[],\r\n  candle_per_month: Market[],\r\n  selectedChartSort: string,\r\n  closed_data: ClosedData[],\r\n  asking_data: AskingData[],\r\n  asking_dateTime: string,\r\n  asking_totalAskSize: number,\r\n  asking_totalBidSize: number,\r\n  chartSortTime: string,\r\n  chartSortDate: string,\r\n  theme: boolean,\r\n  logInUser: string,\r\n  logInEmail: string,\r\n  favoriteCrypto: FavoriteCrypto[],\r\n  ownedCrypto: OwnedCrypto[],\r\n  isFavorited: boolean,\r\n  userWallet: number,\r\n  cr_clickedIndex: number,\r\n  buyingPrice: number,\r\n  balanceUpdate: boolean,\r\n  buyingCrypto: string,\r\n  sellingPrice: number,\r\n  sectionChange: string,\r\n  userTradeHistory: UserTradeHistory[],\r\n  userTradeHistory_unSigned: UserTradeHistory[],\r\n  isBuying: { [key: string]: boolean },\r\n  isSelling: { [key: string]: boolean },\r\n  // askingData_unSigned: UnsginedAskingData[],\r\n  askingData_unSigned: { [key: string]: UnsginedAskingData[] },\r\n  transferSort: string,\r\n  depositEmpty: boolean,\r\n  withdrawEmpty: boolean,\r\n}\r\n\r\nconst cr_name = createSlice({\r\n  name: 'cr_name',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_name: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_price = createSlice({\r\n  name: 'cr_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_market = createSlice({\r\n  name: 'cr_market',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_market: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change = createSlice({\r\n  name: 'cr_change',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_change: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change_rate = createSlice({\r\n  name: 'cr_change_rate',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_change_rate: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change_price = createSlice({\r\n  name: 'cr_change_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_change_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_trade_price = createSlice({\r\n  name: 'cr_trade_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_trade_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_trade_volume = createSlice({\r\n  name: 'cr_trade_volume',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_trade_volume: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_open_price = createSlice({\r\n  name: 'cr_open_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_open_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_high_price = createSlice({\r\n  name: 'cr_high_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_high_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_low_price = createSlice({\r\n  name: 'cr_low_price',\r\n  initialState: [],\r\n  reducers: {\r\n    setCr_low_price: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst star = createSlice({\r\n  name: 'star',\r\n  initialState: [] as string[],\r\n  reducers: {\r\n    setStar: (state, action) => {\r\n      const index = action.payload;\r\n\r\n      // 별의 on일 때 클릭하면 off로, off일 때 클릭하면 on으로 변경\r\n      state[index] = state[index] === 'starOn' ? 'starOff' : 'starOn';\r\n    }\r\n  }\r\n});\r\n\r\nconst filteredData = createSlice({\r\n  name: 'filteredData',\r\n  initialState: [] as Crypto[],\r\n  reducers: {\r\n    setFilteredData: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\n// 테이블에서 선택된 화폐의 정보들에 대한 state\r\nconst cr_selected = createSlice({\r\n  name: 'cr_selected',\r\n  initialState: {},\r\n  reducers: {\r\n    setCr_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_name_selected = createSlice({\r\n  name: 'cr_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_name_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_market_selected = createSlice({\r\n  name: 'cr_market_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_market_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_price_selected = createSlice({\r\n  name: 'cr_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change_selected = createSlice({\r\n  name: 'cr_change_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_change_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change_rate_selected = createSlice({\r\n  name: 'cr_change_rate_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_change_rate_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_change_price_selected = createSlice({\r\n  name: 'cr_change_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_change_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_trade_price_selected = createSlice({\r\n  name: 'cr_trade_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_trade_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_trade_volume_selected = createSlice({\r\n  name: 'cr_trade_volume_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_trade_volume_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_open_price_selected = createSlice({\r\n  name: 'cr_trade_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_open_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_high_price_selected = createSlice({\r\n  name: 'cr_high_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_high_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_low_price_selected = createSlice({\r\n  name: 'cr_low_price_selected',\r\n  initialState: '',\r\n  reducers: {\r\n    setCr_low_price_selected: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst sortedData = createSlice({\r\n  name: 'sortedData',\r\n  initialState: [] as Crypto[],\r\n  reducers: {\r\n    setSortedData: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst delimitedTime = createSlice({\r\n  name: 'delimitedTime',\r\n  initialState: ['1분', '5분', '10분', '30분', '1시간', '4시간'],\r\n  reducers: {\r\n    setDelimitedTime: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst delimitedDate = createSlice({\r\n  name: 'delimitedDate',\r\n  initialState: ['1일', '1주', '1개월'],\r\n  reducers: {\r\n    setDelimitedDate: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst candle_per_minute = createSlice({\r\n  name: 'candle_per_minute',\r\n  initialState: [],\r\n  reducers: {\r\n    setCandle_per_minute: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst candle_per_date = createSlice({\r\n  name: 'candle_per_date',\r\n  initialState: [] as Market[],\r\n  reducers: {\r\n    setCandle_per_date: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst candle_per_date_BTC = createSlice({\r\n  name: 'candle_per_date_BTC',\r\n  initialState: [] as Market[],\r\n  reducers: {\r\n    setCandle_per_date_BTC: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst candle_per_week = createSlice({\r\n  name: 'candle_per_week',\r\n  initialState: [],\r\n  reducers: {\r\n    setCandle_per_week: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst candle_per_month = createSlice({\r\n  name: 'candle_per_month',\r\n  initialState: [],\r\n  reducers: {\r\n    setCandle_per_month: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst selectedChartSort = createSlice({\r\n  name: 'selectedChartSort',\r\n  initialState: '1일',\r\n  reducers: {\r\n    setSelectedChartSort: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst chartSortTime = createSlice({\r\n  name: 'chartSortTime',\r\n  initialState: '',\r\n  reducers: {\r\n    setChartSortTime: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst chartSortDate = createSlice({\r\n  name: 'chartSortDate',\r\n  initialState: '1일',\r\n  reducers: {\r\n    setChartSortDate: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst closed_data = createSlice({\r\n  name: 'closed_data',\r\n  initialState: [] as ClosedData[],\r\n  reducers: {\r\n    setClosed_data: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst asking_data = createSlice({\r\n  name: 'asking_data',\r\n  initialState: [],\r\n  reducers: {\r\n    setAsking_data: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst asking_dateTime = createSlice({\r\n  name: 'asking_dateTime',\r\n  initialState: '',\r\n  reducers: {\r\n    setAsking_dateTime: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst asking_totalAskSize = createSlice({\r\n  name: 'asking_totalAskSize',\r\n  initialState: '',\r\n  reducers: {\r\n    setAsking_totalAskSize: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst asking_totalBidSize = createSlice({\r\n  name: 'asking_totalBidSize',\r\n  initialState: '',\r\n  reducers: {\r\n    setAsking_totalBidSize: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst theme = createSlice({\r\n  name: 'theme',\r\n  initialState: false,\r\n  reducers: {\r\n    setTheme: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst logInUser = createSlice({\r\n  name: 'logInUser',\r\n  initialState: '',\r\n  reducers: {\r\n    setLogInUser: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst logInEmail = createSlice({\r\n  name: 'logInEmail',\r\n  initialState: '',\r\n  reducers: {\r\n    setLogInEmail: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst favoriteCrypto = createSlice({\r\n  name: 'favoriteCrypto',\r\n  initialState: '',\r\n  reducers: {\r\n    setFavoriteCrypto: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst isFavorited = createSlice({\r\n  name: 'isFavorited',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsFavorited: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst ownedCrypto = createSlice({\r\n  name: 'ownedCrypto',\r\n  initialState: '',\r\n  reducers: {\r\n    setOwnedCrypto: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst isOwned = createSlice({\r\n  name: 'isOwned',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsOwned: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst userWallet = createSlice({\r\n  name: 'userWallet',\r\n  initialState: 0,\r\n  reducers: {\r\n    setUserWallet: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst cr_clickedIndex = createSlice({\r\n  name: 'cr_clickedIndex',\r\n  initialState: 0,\r\n  reducers: {\r\n    setCr_clickedIndex: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst buyingPrice = createSlice({\r\n  name: 'buyingPrice',\r\n  initialState: 0,\r\n  reducers: {\r\n    setBuyingPrice: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst balanceUpdate = createSlice({\r\n  name: 'balanceUpdate',\r\n  initialState: false,\r\n  reducers: {\r\n    setBalanceUpdate: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst buyingCrypto = createSlice({\r\n  name: 'buyingCrypto',\r\n  initialState: '',\r\n  reducers: {\r\n    setBuyingCrypto: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst sellingPrice = createSlice({\r\n  name: 'sellingPrice',\r\n  initialState: 0,\r\n  reducers: {\r\n    setSellingPrice: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst sectionChange = createSlice({\r\n  name: 'sectionChange',\r\n  initialState: '매수',\r\n  reducers: {\r\n    setSectionChange: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst userTradeHistory = createSlice({\r\n  name: 'userTradeHisotry',\r\n  initialState: [] as UserTradeHistory[],\r\n  reducers: {\r\n    setUserTradeHistory: (state, action) => {\r\n      return action.payload\r\n    }\r\n  }\r\n})\r\n\r\nconst userTradeHistory_unSigned = createSlice({\r\n  name: 'userTradeHistory_unSigned',\r\n  initialState: [] as UserTradeHistory[],\r\n  reducers: {\r\n    setUserTradeHistory_unSigned: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst isBuying = createSlice({\r\n  name: 'isBuying',\r\n  initialState: '',\r\n  reducers: {\r\n    setIsBuying: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst isSelling = createSlice({\r\n  name: 'isSelling',\r\n  initialState: '',\r\n  reducers: {\r\n    setIsSelling: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nconst askingData_unSigned = createSlice({\r\n  name: 'askingData_unSigned',\r\n  initialState: {} as { [key: string]: UnsginedAskingData[] },\r\n  reducers: {\r\n    setAskingData_unSigned: (state, action) => {\r\n      state[action.payload.market] = action.payload.data;\r\n    },\r\n  },\r\n});\r\n\r\nconst transferSort = createSlice({\r\n  name: 'transferSort',\r\n  initialState: '입금',\r\n  reducers: {\r\n    setTransferSort: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cr_name: cr_name.reducer,\r\n    cr_price: cr_price.reducer,\r\n    cr_market: cr_market.reducer,\r\n    cr_change: cr_change.reducer,\r\n    cr_change_rate: cr_change_rate.reducer,\r\n    cr_change_price: cr_change_price.reducer,\r\n    cr_trade_price: cr_trade_price.reducer,\r\n    cr_trade_volume: cr_trade_volume.reducer,\r\n    cr_open_price: cr_open_price.reducer,\r\n    cr_high_price: cr_high_price.reducer,\r\n    cr_low_price: cr_low_price.reducer,\r\n    star: star.reducer,\r\n    filteredData: filteredData.reducer,\r\n    cr_selected: cr_selected.reducer,\r\n    cr_name_selected: cr_name_selected.reducer,\r\n    cr_market_selected: cr_market_selected.reducer,\r\n    cr_price_selected: cr_price_selected.reducer,\r\n    cr_change_selected: cr_change_selected.reducer,\r\n    cr_change_rate_selected: cr_change_rate_selected.reducer,\r\n    cr_change_price_selected: cr_change_price_selected.reducer,\r\n    cr_trade_price_selected: cr_trade_price_selected.reducer,\r\n    cr_trade_volume_selected: cr_trade_volume_selected.reducer,\r\n    cr_open_price_selected: cr_open_price_selected.reducer,\r\n    cr_high_price_selected: cr_high_price_selected.reducer,\r\n    cr_low_price_selected: cr_low_price_selected.reducer,\r\n    sortedData: sortedData.reducer,\r\n    delimitedTime: delimitedTime.reducer,\r\n    delimitedDate: delimitedDate.reducer,\r\n    candle_per_minute: candle_per_minute.reducer,\r\n    candle_per_date: candle_per_date.reducer,\r\n    candle_per_date_BTC: candle_per_date_BTC.reducer,\r\n    candle_per_week: candle_per_week.reducer,\r\n    candle_per_month: candle_per_month.reducer,\r\n    selectedChartSort: selectedChartSort.reducer,\r\n    chartSortTime: chartSortTime.reducer,\r\n    closed_data: closed_data.reducer,\r\n    asking_data: asking_data.reducer,\r\n    asking_dateTime: asking_dateTime.reducer,\r\n    chartSortDate: chartSortDate.reducer,\r\n    asking_totalAskSize: asking_totalAskSize.reducer,\r\n    asking_totalBidSize: asking_totalBidSize.reducer,\r\n    theme: theme.reducer,\r\n    logInUser: logInUser.reducer,\r\n    logInEmail: logInEmail.reducer,\r\n    favoriteCrypto: favoriteCrypto.reducer,\r\n    isFavorited: isFavorited.reducer,\r\n    ownedCrypto: ownedCrypto.reducer,\r\n    isOwned: isOwned.reducer,\r\n    userWallet: userWallet.reducer,\r\n    cr_clickedIndex: cr_clickedIndex.reducer,\r\n    buyingPrice: buyingPrice.reducer,\r\n    balanceUpdate: balanceUpdate.reducer,\r\n    buyingCrypto: buyingCrypto.reducer,\r\n    sellingPrice: sellingPrice.reducer,\r\n    sectionChange: sectionChange.reducer,\r\n    userTradeHistory: userTradeHistory.reducer,\r\n    userTradeHistory_unSigned: userTradeHistory_unSigned.reducer,\r\n    isBuying: isBuying.reducer,\r\n    isSelling: isSelling.reducer,\r\n    askingData_unSigned: askingData_unSigned.reducer,\r\n    transferSort: transferSort.reducer,\r\n  }\r\n})\r\n\r\n// const rootReducer = {\r\n//   cr_name: cr_name.reducer,\r\n//   cr_price: cr_price.reducer,\r\n//   cr_market: cr_market.reducer,\r\n//   cr_change: cr_change.reducer,\r\n//   cr_change_rate: cr_change_rate.reducer,\r\n//   cr_change_price: cr_change_price.reducer,\r\n//   cr_trade_price: cr_trade_price.reducer,\r\n//   star: star.reducer,\r\n//   filteredData: filteredData.reducer,\r\n// };\r\n\r\n// const store = configureStore({\r\n//   reducer: rootReducer,\r\n// });\r\n\r\nexport const { setCr_name } = cr_name.actions;\r\nexport const { setCr_price } = cr_price.actions;\r\nexport const { setCr_market } = cr_market.actions;\r\nexport const { setCr_change } = cr_change.actions;\r\nexport const { setCr_change_rate } = cr_change_rate.actions;\r\nexport const { setCr_change_price } = cr_change_price.actions;\r\nexport const { setCr_trade_price } = cr_trade_price.actions;\r\nexport const { setCr_trade_volume } = cr_trade_volume.actions;\r\nexport const { setCr_open_price } = cr_open_price.actions;\r\nexport const { setCr_high_price } = cr_high_price.actions;\r\nexport const { setCr_low_price } = cr_low_price.actions;\r\nexport const { setStar } = star.actions;\r\nexport const { setFilteredData } = filteredData.actions;\r\nexport const { setCr_selected } = cr_selected.actions;\r\nexport const { setCr_name_selected } = cr_name_selected.actions;\r\nexport const { setCr_market_selected } = cr_market_selected.actions;\r\nexport const { setCr_price_selected } = cr_price_selected.actions;\r\nexport const { setCr_change_selected } = cr_change_selected.actions;\r\nexport const { setCr_change_rate_selected } = cr_change_rate_selected.actions;\r\nexport const { setCr_change_price_selected } = cr_change_price_selected.actions;\r\nexport const { setCr_trade_price_selected } = cr_trade_price_selected.actions;\r\nexport const { setCr_trade_volume_selected } = cr_trade_volume_selected.actions;\r\nexport const { setCr_open_price_selected } = cr_open_price_selected.actions;\r\nexport const { setCr_high_price_selected } = cr_high_price_selected.actions;\r\nexport const { setCr_low_price_selected } = cr_low_price_selected.actions;\r\nexport const { setSortedData } = sortedData.actions;\r\nexport const { setDelimitedTime } = delimitedTime.actions;\r\nexport const { setDelimitedDate } = delimitedDate.actions;\r\nexport const { setCandle_per_minute } = candle_per_minute.actions;\r\nexport const { setCandle_per_date } = candle_per_date.actions;\r\nexport const { setCandle_per_date_BTC } = candle_per_date_BTC.actions;\r\nexport const { setCandle_per_week } = candle_per_week.actions;\r\nexport const { setCandle_per_month } = candle_per_month.actions;\r\nexport const { setSelectedChartSort } = selectedChartSort.actions;\r\nexport const { setClosed_data } = closed_data.actions;\r\nexport const { setAsking_data } = asking_data.actions;\r\nexport const { setAsking_dateTime } = asking_dateTime.actions;\r\nexport const { setChartSortTime } = chartSortTime.actions;\r\nexport const { setChartSortDate } = chartSortDate.actions;\r\nexport const { setAsking_totalAskSize } = asking_totalAskSize.actions;\r\nexport const { setAsking_totalBidSize } = asking_totalBidSize.actions;\r\nexport const { setTheme } = theme.actions;\r\nexport const { setLogInUser } = logInUser.actions;\r\nexport const { setLogInEmail } = logInEmail.actions;\r\nexport const { setFavoriteCrypto } = favoriteCrypto.actions;\r\nexport const { setIsFavorited } = isFavorited.actions;\r\nexport const { setOwnedCrypto } = ownedCrypto.actions;\r\nexport const { setIsOwned } = isOwned.actions;\r\nexport const { setUserWallet } = userWallet.actions;\r\nexport const { setCr_clickedIndex } = cr_clickedIndex.actions;\r\nexport const { setBuyingPrice } = buyingPrice.actions;\r\nexport const { setBalanceUpdate } = balanceUpdate.actions;\r\nexport const { setBuyingCrypto } = buyingCrypto.actions;\r\nexport const { setSellingPrice } = sellingPrice.actions;\r\nexport const { setSectionChange } = sectionChange.actions;\r\nexport const { setUserTradeHistory } = userTradeHistory.actions;\r\nexport const { setUserTradeHistory_unSigned } = userTradeHistory_unSigned.actions;\r\nexport const { setIsBuying } = isBuying.actions;\r\nexport const { setIsSelling } = isSelling.actions;\r\nexport const { setAskingData_unSigned } = askingData_unSigned.actions;\r\nexport const { setTransferSort } = transferSort.actions;\r\n\r\n// export default store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}