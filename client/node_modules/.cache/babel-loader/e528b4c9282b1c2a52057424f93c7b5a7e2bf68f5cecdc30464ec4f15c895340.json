{"ast":null,"code":"import _toConsumableArray from\"C:/VS_Project/JeayBit/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/VS_Project/JeayBit/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/VS_Project/JeayBit/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/VS_Project/JeayBit/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useDispatch,useSelector}from\"react-redux\";import{setAsking_dateTime,setBuyingPrice,setIsBuying,setIsSelling,setSectionChange,setSellingPrice}from\"../store\";import{useEffect,useState}from\"react\";import{useNavigate}from'react-router-dom';import SimpleBar from'simplebar-react';import'simplebar/dist/simplebar.min.css';import axios from\"axios\";import useFunction from\"./useFuction\";import{Dialog,DialogTitle,DialogContent,DialogActions,Button,makeStyles}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PriceDetail=function PriceDetail(){var dispatch=useDispatch();var _useFunction=useFunction(),buyCrypto_unSigned=_useFunction.buyCrypto_unSigned,sellCrypto_unSigned=_useFunction.sellCrypto_unSigned,themeChange=_useFunction.themeChange;var theme=useSelector(function(state){return state.theme;});var sectionChange=useSelector(function(state){return state.sectionChange;});var askingData_unSigned=useSelector(function(state){return state.askingData_unSigned;});var logInEmail=useSelector(function(state){return state.logInEmail;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),completeModalOpen=_useState2[0],setCompleteModalOpen=_useState2[1];var completeToggleModal=function completeToggleModal(){setCompleteModalOpen(!completeModalOpen);};// 미체결 화폐 매수 - 구매 대기 상태에서 동작 \nuseEffect(function(){var localStorageItem=[];// 로컬 스토리지에 있는 key-value를 꺼냄\nfor(var i=0;i<localStorage.length;i++){var tempKey=localStorage.key(i);if(tempKey!==null){var valueItem=localStorage.getItem(tempKey);if(valueItem!==null){var tempValue=JSON.parse(valueItem);localStorageItem.push({id:tempKey,price:Number(tempValue.price),name:tempValue.name,trade_amount:tempValue.trade_amount,trade_price:tempValue.trade_price});}}}// console.log(\"로컬 스토리지 : \", localStorageItem);\n// console.log(\"미체결 : \", askingData_unSigned);\n// 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\nObject.keys(askingData_unSigned).forEach(function(cryptoName){// state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\nvar scheduledCrypto=[];for(var _i=0;_i<localStorageItem.length;_i++){if(cryptoName===localStorageItem[_i].name){scheduledCrypto.push(localStorageItem[_i]);}}// 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\nfor(var j=0;j<scheduledCrypto.length;j++){// 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\nfor(var k=0;k<askingData_unSigned[cryptoName].length;k++){// console.log(\"호가 : \", askingData_unSigned[cryptoName][k].ask_price);\n// 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\nif(scheduledCrypto[j].price===askingData_unSigned[cryptoName][k].ask_price){console.log(\"매수 - 일치\",scheduledCrypto[j].price);buyCrypto_unSigned(scheduledCrypto[j].id,logInEmail,scheduledCrypto[j].name,scheduledCrypto[j].trade_amount,scheduledCrypto[j].trade_price);completeToggleModal();}}}});},[askingData_unSigned]);// 미체결 화폐 매도 - 매도 대기 상태에서 동작 \nuseEffect(function(){var localStorageItem=[];// 로컬 스토리지에 있는 key-value를 꺼냄\nfor(var i=0;i<localStorage.length;i++){var tempKey=localStorage.key(i);if(tempKey!==null){var valueItem=localStorage.getItem(tempKey);if(valueItem!==null){var tempValue=JSON.parse(valueItem);localStorageItem.push({id:tempKey,price:Number(tempValue.price),name:tempValue.name,trade_amount:tempValue.trade_amount,trade_price:tempValue.trade_price});}}}// console.log(\"로컬 스토리지 : \", localStorageItem);\n// console.log(\"미체결 : \", askingData_unSigned);\n// 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\nObject.keys(askingData_unSigned).forEach(function(cryptoName){// state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\nvar scheduledCrypto=[];for(var _i2=0;_i2<localStorageItem.length;_i2++){if(cryptoName===localStorageItem[_i2].name){scheduledCrypto.push(localStorageItem[_i2]);}}// 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\nfor(var j=0;j<scheduledCrypto.length;j++){// 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\nfor(var k=0;k<askingData_unSigned[cryptoName].length;k++){// console.log(\"호가 : \", askingData_unSigned[cryptoName][k].bid_price);\n// 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\nif(scheduledCrypto[j].price===askingData_unSigned[cryptoName][k].bid_price){console.log(\"매도 - 일치\",scheduledCrypto[j].price);sellCrypto_unSigned(scheduledCrypto[j].id,logInEmail,scheduledCrypto[j].name,scheduledCrypto[j].trade_amount,scheduledCrypto[j].trade_price);completeToggleModal();}}}});},[askingData_unSigned]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalComplete,{completeModalOpen:completeModalOpen,setCompleteModalOpen:setCompleteModalOpen,completeToggleModal:completeToggleModal}),/*#__PURE__*/_jsxs(\"div\",{className:\"lightMode\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"priceDetail-title askingTitle lightMode\",children:\"\\uD638\\uAC00\\uB0B4\\uC5ED\"}),/*#__PURE__*/_jsx(AskingPrice,{}),/*#__PURE__*/_jsx(\"div\",{className:\"priceDetail-title closedTitle lightMode\",children:\"\\uCCB4\\uACB0\\uB0B4\\uC5ED\"}),/*#__PURE__*/_jsx(ClosedPrice,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"trading-section lightMode-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(sectionChange==='매수'?'buyingSection':''),onClick:function onClick(){return dispatch(setSectionChange('매수'));},children:\"\\uB9E4\\uC218\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(sectionChange==='매도'?'sellingSection':''),onClick:function onClick(){return dispatch(setSectionChange('매도'));},children:\"\\uB9E4\\uB3C4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(sectionChange==='거래내역'?'tradingHistorySection':''),onClick:function onClick(){return dispatch(setSectionChange('거래내역'));},children:\"\\uAC70\\uB798\\uB0B4\\uC5ED\"})]}),sectionChange==='매수'?/*#__PURE__*/_jsx(BuyingSection,{}):sectionChange==='매도'?/*#__PURE__*/_jsx(SellingSection,{}):/*#__PURE__*/_jsx(TradeHistory,{})]})]});};// bid = 매수, ask = 매도\nvar AskingPrice=function AskingPrice(){var dispatch=useDispatch();var asking_data=useSelector(function(state){return state.asking_data;});var cr_market_selected=useSelector(function(state){return state.cr_market_selected;});var asking_dateTime=useSelector(function(state){return state.asking_dateTime;});var asking_totalAskSize=useSelector(function(state){return state.asking_totalAskSize;});var asking_totalBidSize=useSelector(function(state){return state.asking_totalBidSize;});var cr_selected=useSelector(function(state){return state.cr_selected;});var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),prevData=_useState4[0],setPrevData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),differences_ask=_useState6[0],setDifferences_ask=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),differences_bid=_useState8[0],setDifferences_bid=_useState8[1];// 호가 수량의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\nuseEffect(function(){setPrevData(asking_data);// state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\nvar newDifferences_ask=[];var newDifferences_bid=[];if(prevData!==undefined){prevData.forEach(function(value,index){if(value.ask_size!==asking_data[index].ask_size){newDifferences_ask.push({new_ask_price:asking_data[index].ask_price,new_ask_size:asking_data[index].ask_size});}if(value.bid_size!==asking_data[index].bid_size){newDifferences_bid.push({new_bid_price:asking_data[index].bid_price,new_bid_size:asking_data[index].bid_size});}});}setDifferences_ask(newDifferences_ask);setDifferences_bid(newDifferences_bid);},[asking_data]);if(asking_dateTime){var date=new Date(asking_dateTime);if(!isNaN(date.getTime())){var newDateString=new Intl.DateTimeFormat('ko-KR',{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',hour12:false// 24시간 형식\n}).format(date);dispatch(setAsking_dateTime(newDateString.replace(\". \",\"/\").replace(\".\",\"\").replace(\"오전 \",\"\").replace(\"오후 \",\"\")));}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"table\",{className:\"askingPrice-table lightMode\",children:/*#__PURE__*/_jsx(\"thead\",{className:\"lightMode-title\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uB4F1\\uB85D\\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD638\\uAC00\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"\\uC218\\uB7C9\",/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",cr_market_selected.slice(4),\")\"]})]})]})})}),/*#__PURE__*/_jsx(SimpleBar,{className:\"scrollBar-askingPriceTable\",children:/*#__PURE__*/_jsx(\"table\",{className:\"askingPrice-table lightMode\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[asking_data.map(function(item,i){// 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\nvar isChanged_bid=differences_bid.some(function(value,index){return value.new_bid_size===item.bid_size;});var bidClass=isChanged_bid?'change-bid':'';var percentage=item.bid_size/asking_totalBidSize*100;// 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\nvar str_bid_size;// 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\nif(item.bid_size>9999999999999){str_bid_size=String(Math.floor(item.bid_size));}// 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\nelse{str_bid_size=String(item.bid_size);str_bid_size=str_bid_size.substring(0,14);}// 문자열의 끝이 '.'로 끝난다면 .을 제거\nif(str_bid_size.endsWith('.')){str_bid_size=str_bid_size.slice(0,-1);}return/*#__PURE__*/_jsxs(\"tr\",{style:{background:\"linear-gradient(270deg, rgba(34,171,148, .2) \".concat(percentage,\"%, transparent \").concat(percentage,\"%)\")},children:[/*#__PURE__*/_jsx(\"td\",{children:asking_dateTime}),/*#__PURE__*/_jsx(\"td\",{children:item.bid_price.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:bidClass,children:str_bid_size})]},i);}),asking_data.map(function(item,i){// 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\nvar isChange_ask=differences_ask.some(function(value,index){return value.new_ask_size===item.ask_size;});var askClass=isChange_ask?'change-ask':'';var percentage=item.ask_size/asking_totalAskSize*100;// 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\nvar str_ask_size;// 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\nif(item.ask_size>9999999999999){str_ask_size=String(Math.floor(item.ask_size));}// 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\nelse{str_ask_size=String(item.ask_size);str_ask_size=str_ask_size.substring(0,14);}// 문자열의 끝이 '.'로 끝난다면 .을 제거\nif(str_ask_size.endsWith('.')){str_ask_size=str_ask_size.slice(0,-1);}return/*#__PURE__*/_jsxs(\"tr\",{style:{background:\"linear-gradient(270deg, rgba(242,54,69, .2) \".concat(percentage,\"%, transparent \").concat(percentage,\"%)\")},children:[/*#__PURE__*/_jsx(\"td\",{children:asking_dateTime}),/*#__PURE__*/_jsx(\"td\",{children:item.ask_price.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:askClass,children:str_ask_size})]},i);})]})})})]});};var ClosedPrice=function ClosedPrice(){var closed_data=useSelector(function(state){return state.closed_data;});var cr_market_selected=useSelector(function(state){return state.cr_market_selected;});var cr_selected=useSelector(function(state){return state.cr_selected;});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"table\",{className:\"closedPrice-table lightMode-title\",children:/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uCCB4\\uACB0\\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uCCB4\\uACB0\\uAC00\\uACA9\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"\\uCCB4\\uACB0\\uB7C9\",/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",cr_market_selected.slice(4),\")\"]})]})]})})}),/*#__PURE__*/_jsx(SimpleBar,{className:\"scrollBar-closedPriceTable\",children:/*#__PURE__*/_jsx(\"table\",{className:\"closedPrice-table\",children:/*#__PURE__*/_jsx(\"tbody\",{children:closed_data.map(function(item,i){var date=new Date(item.timestamp);var trade_time=new Intl.DateTimeFormat('ko-KR',{month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',hour12:false// 24시간 형식\n}).format(date);trade_time=trade_time.replace(\". \",\"/\").replace(\".\",\"\").replace(\"오전 \",\"\").replace(\"오후 \",\"\");var str_trade_volume;// 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\nif(item.trade_volume>9999999999999){str_trade_volume=String(Math.floor(item.trade_volume));}// 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\nelse{str_trade_volume=String(item.trade_volume);str_trade_volume=str_trade_volume.substring(0,14);}// 문자열의 끝이 '.'로 끝난다면 .을 제거\nif(str_trade_volume.endsWith('.')){str_trade_volume=str_trade_volume.slice(0,-1);}return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:trade_time}),/*#__PURE__*/_jsx(\"td\",{children:item.trade_price.toLocaleString()}),item.ask_bid==='BID'?/*#__PURE__*/_jsx(\"td\",{className:\"td-rise\",children:str_trade_volume}):/*#__PURE__*/_jsx(\"td\",{className:\"td-fall\",children:str_trade_volume})]},i);})})})})]});};var BuyingSection=function BuyingSection(){var navigate=useNavigate();var dispatch=useDispatch();var cr_selected=useSelector(function(state){return state.cr_selected;});var cr_name_selected=useSelector(function(state){return state.cr_name_selected;});var cr_market_selected=useSelector(function(state){return state.cr_market_selected;});var logInEmail=useSelector(function(state){return state.logInEmail;});var userWallet=useSelector(function(state){return state.userWallet;});var asking_data=useSelector(function(state){return state.asking_data;});// bid = 매수, ask = 매도\nvar askingData_unSigned=useSelector(function(state){return state.askingData_unSigned;});var filteredData=useSelector(function(state){return state.filteredData;});var theme=useSelector(function(state){return state.theme;});var buyingPrice=useSelector(function(state){return state.buyingPrice;});var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),selectedPercentage=_useState10[0],setSelectedPercentage=_useState10[1];var _useState11=useState('지정가'),_useState12=_slicedToArray(_useState11,2),bidSort=_useState12[0],setBidSort=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),buyTotal=_useState14[0],setBuyTotal=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),buyQuantity=_useState16[0],setBuyQuantity=_useState16[1];var _useState17=useState('0'),_useState18=_slicedToArray(_useState17,2),quantityInputValue=_useState18[0],setQuantityInputValue=_useState18[1];var _useState19=useState('0'),_useState20=_slicedToArray(_useState19,2),totalInputValue=_useState20[0],setTotalInputvalue=_useState20[1];var _useState21=useState('0'),_useState22=_slicedToArray(_useState21,2),buyingInputValue=_useState22[0],setBuyingInputValue=_useState22[1];// 구매하려는 화폐의 가격과 호가 사이의 일치 여부\nvar _useState23=useState(null),_useState24=_slicedToArray(_useState23,2),matchedItem=_useState24[0],setMatchedItem=_useState24[1];// 화폐를 구매하기 위해 대기중인지 여부\nvar isBuying=useSelector(function(state){return state.isBuying;});var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),modalOpen=_useState26[0],setModalOpen=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),completeModalOpen=_useState28[0],setCompleteModalOpen=_useState28[1];// 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\nvar _useState29=useState('매수'),_useState30=_slicedToArray(_useState29,2),tradeCategory=_useState30[0],setTradeCategory=_useState30[1];// 현재 시간을 저장하는 state\nvar _useState31=useState(new Date()),_useState32=_slicedToArray(_useState31,2),time=_useState32[0],setTime=_useState32[1];var _useState33=useState(),_useState34=_slicedToArray(_useState33,2),isMatch=_useState34[0],setIsMatch=_useState34[1];var _useState35=useState([]),_useState36=_slicedToArray(_useState35,2),key=_useState36[0],setKey=_useState36[1];var toggleModal=function toggleModal(){setModalOpen(!modalOpen);};var completeToggleModal=function completeToggleModal(){setCompleteModalOpen(!completeModalOpen);};var _useFunction2=useFunction(),getBalance=_useFunction2.getBalance,getOwnedCrypto=_useFunction2.getOwnedCrypto,addTradeHistory=_useFunction2.addTradeHistory,getTradeHistory=_useFunction2.getTradeHistory,getCryptoName=_useFunction2.getCryptoName,buyCrypto_unSigned=_useFunction2.buyCrypto_unSigned;// 매수가가 바뀌면 그에 따라 입력값도 변경\nuseEffect(function(){setBuyingInputValue(buyingPrice.toString());},[buyingPrice]);// 선택 화폐가 바뀔 때마다 매수 가격을 해당 화폐의 가격으로 변경하고, 주문 수량 및 총액을 초기화\nuseEffect(function(){// 주문 수량\nsetBuyQuantity(0);setQuantityInputValue('0');// 주문 총액\nsetBuyTotal(0);setTotalInputvalue('0');},[cr_name_selected]);// 호가와 구매가가 일치할 때\nvar buyCrypto=function buyCrypto(email,cryptoName,cryptoQuantity,buyTotal){(function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(email,cryptoName,cryptoQuantity,buyTotal){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"http://127.0.0.1:8000/buy_crypto/\",{email:email,crypto_name:cryptoName,crypto_quantity:cryptoQuantity,buy_total:buyTotal});case 3:response=_context.sent;console.log(\"구매 화폐 전송 성공\",response.data);getBalance(logInEmail);// 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\ngetOwnedCrypto(logInEmail);// 소유 화폐가 새로 추가될 수 있으니 업데이트\ngetTradeHistory(logInEmail);// 매수에 성공했으니 거래내역 업데이트\ncompleteToggleModal();_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(\"구매 화폐 전송 실패: \",_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};})()(email,cryptoName,cryptoQuantity,buyTotal);};var selectPercentage=function selectPercentage(percentage){setSelectedPercentage(percentage);// 매수가격이 0이면 주문수량/주문총액은 의미가 없으므로 \nif(buyingInputValue!=='0'){// 현재 잔고 기준 퍼센테이지를 '주문총액'에 할당하고, 주문총액이 구매하려는 화폐 가격에 대해 어느 정도의 비율을 가지는지 계산\nif(percentage==='10%'){var dividedTotal=userWallet*0.1;setBuyTotal(Math.floor(dividedTotal));setTotalInputvalue(Math.floor(dividedTotal).toString());var dividedQuantity=dividedTotal/buyingPrice;// 소수점 아래 8자리로 제한\nif((dividedQuantity.toString().split('.')[1]||'').length>8){dividedQuantity=parseFloat(dividedQuantity.toFixed(8));}setBuyQuantity(dividedQuantity);setQuantityInputValue(dividedQuantity.toString());}if(percentage==='25%'){var _dividedTotal=userWallet*0.25;setBuyTotal(Math.floor(_dividedTotal));setTotalInputvalue(Math.floor(_dividedTotal).toString());var _dividedQuantity=_dividedTotal/buyingPrice;// 소수점 아래 8자리로 제한\nif((_dividedQuantity.toString().split('.')[1]||'').length>8){_dividedQuantity=parseFloat(_dividedQuantity.toFixed(8));}setBuyQuantity(_dividedQuantity);setQuantityInputValue(_dividedQuantity.toString());}if(percentage==='50%'){var _dividedTotal2=userWallet*0.50;setBuyTotal(Math.floor(_dividedTotal2));setTotalInputvalue(Math.floor(_dividedTotal2).toString());var _dividedQuantity2=_dividedTotal2/buyingPrice;// 소수점 아래 8자리로 제한\nif((_dividedQuantity2.toString().split('.')[1]||'').length>8){_dividedQuantity2=parseFloat(_dividedQuantity2.toFixed(8));}setBuyQuantity(_dividedQuantity2);setQuantityInputValue(_dividedQuantity2.toString());}if(percentage==='75%'){var _dividedTotal3=userWallet*0.75;setBuyTotal(Math.floor(_dividedTotal3));setTotalInputvalue(Math.floor(_dividedTotal3).toString());var _dividedQuantity3=_dividedTotal3/buyingPrice;// 소수점 아래 8자리로 제한\nif((_dividedQuantity3.toString().split('.')[1]||'').length>8){_dividedQuantity3=parseFloat(_dividedQuantity3.toFixed(8));}setBuyQuantity(_dividedQuantity3);setQuantityInputValue(_dividedQuantity3.toString());}if(percentage==='100%'){var _dividedTotal4=userWallet;setBuyTotal(Math.floor(_dividedTotal4));setTotalInputvalue(Math.floor(_dividedTotal4).toString());var _dividedQuantity4=_dividedTotal4/buyingPrice;// 소수점 아래 8자리로 제한\nif((_dividedQuantity4.toString().split('.')[1]||'').length>8){_dividedQuantity4=parseFloat(_dividedQuantity4.toFixed(8));}setBuyQuantity(_dividedQuantity4);setQuantityInputValue(_dividedQuantity4.toString());}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalSumbit,{modalOpen:modalOpen,setModalOpen:setModalOpen,toggleModal:toggleModal}),/*#__PURE__*/_jsx(ModalComplete,{completeModalOpen:completeModalOpen,setCompleteModalOpen:setCompleteModalOpen,completeToggleModal:completeToggleModal}),/*#__PURE__*/_jsx(\"table\",{className:\"trading-headTable\",children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"trading-choice\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"radio \".concat(theme?'darkMode-title':'lightMode-title'),children:\"\\uC8FC\\uBB38\\uAD6C\\uBD84\"}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio1\",className:\"radio-input\",onChange:function onChange(){return setBidSort('지정가');},checked:bidSort==='지정가'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-designate radio-label \".concat(theme?'darkMode-title':'lightMode-title'),htmlFor:\"radio1\",children:\"\\uC9C0\\uC815\\uAC00\"})]}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio2\",className:\"radio-input\",onChange:function onChange(){return setBidSort('시장가');},checked:bidSort==='시장가'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-market radio-label \".concat(theme?'darkMode-title':'lightMode-title'),htmlFor:\"radio2\",children:\"\\uC2DC\\uC7A5\\uAC00\"})]})]})})}),// 매수 - 지정가 영역\nbidSort==='지정가'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"table\",{className:\"trading-table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[Number(userWallet).toLocaleString(),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uB9E4\\uC218\\uAC00\\uACA9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:buyingInputValue,onChange:function onChange(e){var value=e.target.value;// 매수가격을 변경했음에도 구매 대기 여부가 true이면 의도치 않게 매수가 완료될 수 있으니, 매수가를 변경했을 때는 구매 대기 여부를 false로 처리\n// let updatedIsBuying = { ...isBuying };\n// updatedIsBuying[cr_name_selected] = false;\n// dispatch(setIsBuying(updatedIsBuying));\n// 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\nvalue=value.replace(/(\\..*)\\./g,\"$1\");// 숫자와 \".\" 외의 문자를 제거\nvalue=value.replace(/[^0-9.]/g,\"\");// \".\"이 맨 처음에 오지 않도록 함\nif(value[0]==='.'){value='0'+value;}// value값이 비게 되면 '0'으로 설정(NaN값 방지)\nif(value===''){value='0';}dispatch(setBuyingPrice(Number(value)));setBuyingInputValue(value);setBuyTotal(Math.floor(parseFloat(value)*buyQuantity));setTotalInputvalue(Math.floor(parseFloat(value)*buyQuantity).toString());}}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:buyingPrice,className:\"slider buy\",onChange:function onChange(e){return dispatch(setBuyingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uC218\\uB7C9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:quantityInputValue,onChange:function onChange(e){var value=e.target.value;// 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\nvalue=value.replace(/(\\..*)\\./g,\"$1\");// 숫자와 \".\" 외의 문자를 제거\nvalue=value.replace(/[^0-9.]/g,\"\");// \".\"이 맨 처음에 오지 않도록 함\nif(value[0]==='.'){value='0'+value;}// value값이 비게 되면 '0'으로 설정(NaN값 방지)\nif(value===''){value='0';}var decimalPart=(value.split('.')[1]||'').length;// 소수점 자릿수가 8자리 이하인 경우만\nif(decimalPart<=8){setQuantityInputValue(value);setBuyQuantity(parseFloat(value));}setBuyTotal(Math.floor(buyingPrice*parseFloat(value)));setTotalInputvalue(Math.floor(buyingPrice*parseFloat(value)).toString());}}),/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category \".concat(theme?'darkMode-title':'lightMode-title'),children:\"\\uC8FC\\uBB38\\uCD1D\\uC561\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"\".concat(theme?'darkMode-title':'lightMode-title'),value:totalInputValue,onChange:function onChange(e){var value=e.target.value;// 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\nvar isNumber=/^[0-9]*$/.test(value);if(value===''){value='0';}if(buyingInputValue!=='0'){if(isNumber){setTotalInputvalue(value);setBuyTotal(parseFloat(value));var dividiedQuantity=Number(value)/buyingPrice;// 소수점 아래 8자리로 제한\nif((dividiedQuantity.toString().split('.')[1]||'').length>8){dividiedQuantity=parseFloat(dividiedQuantity.toFixed(8));}setBuyQuantity(dividiedQuantity);setQuantityInputValue(dividiedQuantity.toString());}}}}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})})]})]})}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-buy designate\",children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){// 호가와 구매가가 일치하는지 확인\nvar item=asking_data.find(function(item){return item.ask_price===buyingPrice;});if(item!==undefined){// 일치한다면 바로 매수 요청을 전송\nbuyCrypto(logInEmail,cr_selected.name,buyQuantity,buyTotal);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,buyingPrice,buyTotal,buyQuantity,true);// getTradeHistory(logInEmail);\n}else{// 선택한 화폐에 대한 구매 대기 여부를 true로 설정\nvar temp=localStorage.getItem(\"\".concat(logInEmail,\"_IsBuying\"));if(temp!==null){var localStorage_isBuying=JSON.parse(temp);localStorage_isBuying[cr_name_selected]=true;localStorage.setItem(\"\".concat(logInEmail,\"_IsBuying\"),JSON.stringify(localStorage_isBuying));dispatch(setIsBuying(localStorage_isBuying));}// 일치하지 않는다면 대기 모달 팝업\ntoggleModal();setModalOpen(!modalOpen);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,buyingPrice,buyTotal,buyQuantity,false);// getTradeHistory(logInEmail);\n}},children:\"\\uB9E4\\uC218\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-buy designate\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]}):// 매수 - 시장가 영역\nbidSort==='시장가'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"trading-table\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category \".concat(theme?'darkMode-title':'lightMode-title'),children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[Number(userWallet).toLocaleString(),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category \".concat(theme?'darkMode-title':'lightMode-title'),children:\"\\uC8FC\\uBB38\\uCD1D\\uC561\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:buyTotal}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]})]}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-buy market\",children:/*#__PURE__*/_jsx(\"span\",{onClick:// 호가와의 일치 여부를 확인하지 않음\nfunction onClick(){buyCrypto(logInEmail,cr_selected.name,buyQuantity,buyTotal);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,buyingPrice,buyTotal,buyQuantity,true);},children:\"\\uB9E4\\uC218\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-buy market\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]}):/*#__PURE__*/ // 매수 - 예약가 영역\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"trading-table\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[userWallet,/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uAC10\\uC2DC\\uAC00\\uACA9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return dispatch(setBuyingPrice(Number(e.target.value)));},value:buyingPrice}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:buyingPrice,className:\"slider buy\",onChange:function onChange(e){return dispatch(setBuyingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uB9E4\\uC218\\uAC00\\uACA9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return dispatch(setBuyingPrice(Number(e.target.value)));},value:buyingPrice}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:buyingPrice,className:\"slider buy\",onChange:function onChange(e){return dispatch(setBuyingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uC218\\uB7C9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{}),/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'buy-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uCD1D\\uC561\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]})]}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-buy reserve\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uC608\\uC57D\\uB9E4\\uC218\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-buy reserve\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]})]});};var SellingSection=function SellingSection(){var _ownedCrypto$find2,_ownedCrypto$find3;var dispatch=useDispatch();var navigate=useNavigate();var cr_selected=useSelector(function(state){return state.cr_selected;});var cr_market_selected=useSelector(function(state){return state.cr_market_selected;});var cr_name_selected=useSelector(function(state){return state.cr_name_selected;});var logInEmail=useSelector(function(state){return state.logInEmail;});var userWallet=useSelector(function(state){return state.userWallet;});var asking_data=useSelector(function(state){return state.asking_data;});// bid = 매수, ask = 매도\nvar ownedCrypto=useSelector(function(state){return state.ownedCrypto;});var askingData_unSigned=useSelector(function(state){return state.askingData_unSigned;});var theme=useSelector(function(state){return state.theme;});var _useState37=useState(''),_useState38=_slicedToArray(_useState37,2),selectedPercentage=_useState38[0],setSelectedPercentage=_useState38[1];var _useState39=useState('지정가'),_useState40=_slicedToArray(_useState39,2),bidSort=_useState40[0],setBidSort=_useState40[1];// const [availableQuantity, setAvailableQuantity] = useState<any>(0);\nvar sellingPrice=useSelector(function(state){return state.sellingPrice;});var _useState41=useState(0),_useState42=_slicedToArray(_useState41,2),sellTotal=_useState42[0],setSellTotal=_useState42[1];var _useState43=useState(0),_useState44=_slicedToArray(_useState43,2),sellQuantity=_useState44[0],setSellQuantity=_useState44[1];var _useState45=useState('0'),_useState46=_slicedToArray(_useState45,2),quantityInputValue=_useState46[0],setQuantityInputValue=_useState46[1];var _useState47=useState('0'),_useState48=_slicedToArray(_useState47,2),totalInputValue=_useState48[0],setTotalInputvalue=_useState48[1];var _useState49=useState('0'),_useState50=_slicedToArray(_useState49,2),sellingInputValue=_useState50[0],setSellingInputValue=_useState50[1];// 매도하려는 화폐의 가격과 호가 사이의 일치 여부\nvar _useState51=useState(null),_useState52=_slicedToArray(_useState51,2),matchedItem=_useState52[0],setMatchedItem=_useState52[1];// 화폐를 매도하기 위해 대기중인지 여부\n// const [isSelling, setIsSelling] = useState<boolean>(false);\nvar _useState53=useState(false),_useState54=_slicedToArray(_useState53,2),modalOpen=_useState54[0],setModalOpen=_useState54[1];var _useState55=useState(false),_useState56=_slicedToArray(_useState55,2),completeModalOpen=_useState56[0],setCompleteModalOpen=_useState56[1];// 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\nvar _useState57=useState('매도'),_useState58=_slicedToArray(_useState57,2),tradeCategory=_useState58[0],setTradeCategory=_useState58[1];// 현재 시간을 저장하는 state\nvar _useState59=useState(new Date()),_useState60=_slicedToArray(_useState59,2),time=_useState60[0],setTime=_useState60[1];var toggleModal=function toggleModal(){setModalOpen(!modalOpen);};var completeToggleModal=function completeToggleModal(){setCompleteModalOpen(!completeModalOpen);};var _useFunction3=useFunction(),getBalance=_useFunction3.getBalance,getOwnedCrypto=_useFunction3.getOwnedCrypto,addTradeHistory=_useFunction3.addTradeHistory,getTradeHistory=_useFunction3.getTradeHistory;// 매도가가 바뀌면 그에 따라 입력값도 변경\nuseEffect(function(){setSellingInputValue(sellingPrice.toString());},[sellingPrice]);// 선택 화폐가 바뀔 때마다 주문 가능한 보유 화폐량을 변경하고, 주문 수량 및 총액을 초기화\nuseEffect(function(){// 주문 수량\nsetSellQuantity(0);setQuantityInputValue('0');// 주문 총액\nsetSellTotal(0);setTotalInputvalue('0');},[cr_name_selected]);// 호가와 매도가가 일치할 때\nvar sellCrypto=function sellCrypto(email,cryptoName,cryptoQuantity,sellTotal){(function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email,cryptoName,cryptoQuantity,sellTotal){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.post(\"http://127.0.0.1:8000/sell_crypto/\",{email:email,crypto_name:cryptoName,crypto_quantity:cryptoQuantity,sell_total:sellTotal});case 3:response=_context2.sent;console.log(\"매도 화폐 전송 성공\",response.data);getBalance(logInEmail);// 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\ngetOwnedCrypto(logInEmail);// 소유 화폐가 새로 추가될 수 있으니 업데이트\ngetTradeHistory(logInEmail);// 매도했으니 업데이트 됐을 거래내역을 가져옴 \ncompleteToggleModal();_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(\"매도 화폐 전송 실패: \",_context2.t0);case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,11]]);}));return function(_x5,_x6,_x7,_x8){return _ref2.apply(this,arguments);};})()(email,cryptoName,cryptoQuantity,sellTotal);};var selectPercentage=function selectPercentage(percentage){var _ownedCrypto$find;setSelectedPercentage(percentage);// 선택된 화폐의 보유 수량\nvar availableQuantity=(_ownedCrypto$find=ownedCrypto.find(function(item){return item.crypto_name===cr_name_selected;}))===null||_ownedCrypto$find===void 0?void 0:_ownedCrypto$find.quantity;// 매수가격이 0이면 주문수량/주문총액은 의미가 없고, 보유 화폐량이 undefined이면 연산이 불가능 \nif(sellingInputValue!=='0'&&availableQuantity!==undefined){// 현재 화폐 보유량 기준 퍼센테이지를 '주문수량'에 할당하고, 주문수량이 매도 가격의 어느 정도 비율을 차지하는지를 계산하여 '주문총액'에 할당\nif(percentage==='10%'){var dividedQuantity=availableQuantity*0.10;// 소수점 아래 8자리로 제한\nif((dividedQuantity.toString().split('.')[1]||'').length>8){dividedQuantity=parseFloat(dividedQuantity.toFixed(8));}var dividedTotal=sellingPrice*dividedQuantity;dividedTotal=Math.ceil(dividedTotal);// 주문 수량\nsetSellQuantity(dividedQuantity);setQuantityInputValue(dividedQuantity.toString());// 주문 총액\nsetSellTotal(Math.floor(dividedTotal));setTotalInputvalue(Math.floor(dividedTotal).toString());}if(percentage==='25%'){var _dividedQuantity5=availableQuantity*0.25;// 소수점 아래 8자리로 제한\nif((_dividedQuantity5.toString().split('.')[1]||'').length>8){_dividedQuantity5=parseFloat(_dividedQuantity5.toFixed(8));}var _dividedTotal5=sellingPrice*_dividedQuantity5;_dividedTotal5=Math.ceil(_dividedTotal5);// 주문 수량\nsetSellQuantity(_dividedQuantity5);setQuantityInputValue(_dividedQuantity5.toString());// 주문 총액\nsetSellTotal(Math.floor(_dividedTotal5));setTotalInputvalue(Math.floor(_dividedTotal5).toString());}if(percentage==='50%'){var _dividedQuantity6=availableQuantity*0.50;// 소수점 아래 8자리로 제한\nif((_dividedQuantity6.toString().split('.')[1]||'').length>8){_dividedQuantity6=parseFloat(_dividedQuantity6.toFixed(8));}var _dividedTotal6=sellingPrice*_dividedQuantity6;_dividedTotal6=Math.ceil(_dividedTotal6);// 주문 수량\nsetSellQuantity(_dividedQuantity6);setQuantityInputValue(_dividedQuantity6.toString());// 주문 총액\nsetSellTotal(Math.floor(_dividedTotal6));setTotalInputvalue(Math.floor(_dividedTotal6).toString());}if(percentage==='75%'){var _dividedQuantity7=availableQuantity*0.75;// 소수점 아래 8자리로 제한\nif((_dividedQuantity7.toString().split('.')[1]||'').length>8){_dividedQuantity7=parseFloat(_dividedQuantity7.toFixed(8));}var _dividedTotal7=sellingPrice*_dividedQuantity7;_dividedTotal7=Math.ceil(_dividedTotal7);// 주문 수량\nsetSellQuantity(_dividedQuantity7);setQuantityInputValue(_dividedQuantity7.toString());// 주문 총액\nsetSellTotal(Math.floor(_dividedTotal7));setTotalInputvalue(Math.floor(_dividedTotal7).toString());}if(percentage==='100%'){var _dividedQuantity8=availableQuantity;// 소수점 아래 8자리로 제한\nif((_dividedQuantity8.toString().split('.')[1]||'').length>8){_dividedQuantity8=parseFloat(_dividedQuantity8.toFixed(8));}var _dividedTotal8=sellingPrice*_dividedQuantity8;_dividedTotal8=Math.ceil(_dividedTotal8);// 주문 수량\nsetSellQuantity(_dividedQuantity8);setQuantityInputValue(_dividedQuantity8.toString());// 주문 총액\nsetSellTotal(Math.floor(_dividedTotal8));setTotalInputvalue(Math.floor(_dividedTotal8).toString());}}else if(availableQuantity===undefined){// 주문 수량\nsetSellQuantity(0);setQuantityInputValue('0');// 주문 총액\nsetSellTotal(0);setTotalInputvalue('0');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalSumbit,{modalOpen:modalOpen,setModalOpen:setModalOpen,toggleModal:toggleModal}),/*#__PURE__*/_jsx(ModalComplete,{completeModalOpen:completeModalOpen,setCompleteModalOpen:setCompleteModalOpen,completeToggleModal:completeToggleModal}),/*#__PURE__*/_jsx(\"table\",{className:\"trading-headTable\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"trading-choice\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"radio\",children:\"\\uC8FC\\uBB38\\uAD6C\\uBD84\"}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio1\",className:\"radio-input\",onClick:function onClick(){return setBidSort('지정가');},checked:bidSort==='지정가'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-designate radio-label\",htmlFor:\"radio1\",children:\"\\uC9C0\\uC815\\uAC00\"})]}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio2\",className:\"radio-input\",onClick:function onClick(){return setBidSort('시장가');},checked:bidSort==='시장가'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-market radio-label\",htmlFor:\"radio2\",children:\"\\uC2DC\\uC7A5\\uAC00\"})]})]})}),// 매도 - 지정가 영역\nbidSort==='지정가'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"trading-table\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[// 보유수량이 undefined 또는 null일 때 0 반환\nArray.isArray(ownedCrypto)&&((_ownedCrypto$find2=ownedCrypto.find(function(item){return item.crypto_name===cr_name_selected;}))===null||_ownedCrypto$find2===void 0?void 0:_ownedCrypto$find2.quantity)||'0',/*#__PURE__*/_jsx(\"span\",{children:cr_market_selected.slice(4)})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uB9E4\\uB3C4\\uAC00\\uACA9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:sellingInputValue,onChange:function onChange(e){var value=e.target.value;// 매도가격을 변경했음에도 매도 대기 여부가 true이면 의도치 않게 매도가 완료될 수 있으니, 매도가를 변경했을 때는 매도 대기 여부를 false로 처리\nsetIsSelling(false);// 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\nvalue=value.replace(/(\\..*)\\./g,\"$1\");// 숫자와 \".\" 외의 문자를 제거\nvalue=value.replace(/[^0-9.]/g,\"\");// \".\"이 맨 처음에 오지 않도록 함\nif(value[0]==='.'){value='0'+value;}// value값이 비게 되면 '0'으로 설정(NaN값 방지)\nif(value===''){value='0';}dispatch(setSellingPrice(Number(value)));setSellingInputValue(value);setSellTotal(Math.floor(parseFloat(value)*sellQuantity));setTotalInputvalue(Math.floor(parseFloat(value)*sellQuantity).toString());}}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:sellingPrice,className:\"slider sell\",onChange:function onChange(e){return dispatch(setSellingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uC218\\uB7C9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:quantityInputValue,onChange:function onChange(e){var value=e.target.value;// 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\nvalue=value.replace(/(\\..*)\\./g,\"$1\");// 숫자와 \".\" 외의 문자를 제거\nvalue=value.replace(/[^0-9.]/g,\"\");// \".\"이 맨 처음에 오지 않도록 함\nif(value[0]==='.'){value='0'+value;}// value값이 비게 되면 '0'으로 설정(NaN값 방지)\nif(value===''){value='0';}var decimalPart=(value.split('.')[1]||'').length;// 소수점 자릿수가 8자리 이하인 경우만\nif(decimalPart<=8){setQuantityInputValue(value);setSellQuantity(parseFloat(value));}setSellTotal(Math.floor(sellingPrice*parseFloat(value)));setTotalInputvalue(Math.floor(sellingPrice*parseFloat(value)).toString());}}),/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uCD1D\\uC561\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:totalInputValue,onChange:function onChange(e){var value=e.target.value;// 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\nvar isNumber=/^[0-9]*$/.test(value);if(value===''){value='0';}if(sellingInputValue!=='0'){if(isNumber){setTotalInputvalue(value);setSellTotal(parseFloat(value));var dividiedQuantity=Number(value)/sellingPrice;// 소수점 아래 8자리로 제한\nif((dividiedQuantity.toString().split('.')[1]||'').length>8){dividiedQuantity=parseFloat(dividiedQuantity.toFixed(8));}setSellQuantity(dividiedQuantity);setQuantityInputValue(dividiedQuantity.toString());}}}}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})})]})]}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-sell designate\",children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){// 호가와 매도가가 일치하는지 확인\nvar item=asking_data.find(function(item){return item.bid_price===sellingPrice;});if(item!==undefined){// 일치한다면 바로 매수 요청을 전송\nsellCrypto(logInEmail,cr_selected.name,sellQuantity,sellTotal);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,sellingPrice,sellTotal,sellQuantity,true);// getTradeHistory(logInEmail);\n}else{// 선택한 화폐에 대한 매도 대기 여부를 true로 설정\nvar temp=localStorage.getItem(\"\".concat(logInEmail,\"_IsSelling\"));if(temp!==null){var localStorage_isSelling=JSON.parse(temp);localStorage_isSelling[cr_name_selected]=true;localStorage.setItem(\"\".concat(logInEmail,\"_IsSelling\"),JSON.stringify(localStorage_isSelling));dispatch(setIsSelling(localStorage_isSelling));}// 일치하지 않는다면 대기 모달 팝업\ntoggleModal();setModalOpen(!modalOpen);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,sellingPrice,sellTotal,sellQuantity,false);// getTradeHistory(logInEmail);\n}},children:\"\\uB9E4\\uB3C4\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-sell designate\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]}):// 매도 - 시장가 영역\nbidSort==='시장가'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"trading-table\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[// 보유수량이 undefined 또는 null일 때 0 반환\nArray.isArray(ownedCrypto)&&((_ownedCrypto$find3=ownedCrypto.find(function(item){return item.crypto_name===cr_name_selected;}))===null||_ownedCrypto$find3===void 0?void 0:_ownedCrypto$find3.quantity)||'0',/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uC218\\uB7C9\"}),/*#__PURE__*/_jsx(\"td\",{className:\"td-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:quantityInputValue,onChange:function onChange(e){var value=e.target.value;// 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\nif(value[0]==='0'&&value.length>1){if(value[1]==='0'||value[1]>='1'&&value[1]<='9'){value=value.substring(1);}}// 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\nvalue=value.replace(/(\\..*)\\./g,\"$1\");// 숫자와 \".\" 외의 문자를 제거\nvalue=value.replace(/[^0-9.]/g,\"\");// \".\"이 맨 처음에 오지 않도록 함\nif(value[0]==='.'){value='0'+value;}// value값이 비게 되면 '0'으로 설정(NaN값 방지)\nif(value===''){value='0';}var decimalPart=(value.split('.')[1]||'').length;// 소수점 자릿수가 8자리 이하인 경우만\nif(decimalPart<=8){setQuantityInputValue(value);setSellQuantity(parseFloat(value));}setSellTotal(Math.floor(sellingPrice*parseFloat(value)));setTotalInputvalue(Math.floor(sellingPrice*parseFloat(value)).toString());}}),/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]})]}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-sell market\",children:/*#__PURE__*/_jsx(\"span\",{onClick:// 호가와의 일치 여부를 확인하지 않음\nfunction onClick(){sellCrypto(logInEmail,cr_selected.name,sellQuantity,sellTotal);addTradeHistory(logInEmail,cr_selected.name,tradeCategory,time,cr_selected.market,sellingPrice,sellTotal,sellQuantity,true);},children:\"\\uB9E4\\uB3C4\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-sell market\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]}):/*#__PURE__*/ // 매도 - 예약가 영역\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"trading-table\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uAC00\\uB2A5\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"trading-availableTrade\",children:[\"0\",/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uAC10\\uC2DC\\uAC00\\uACA9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return dispatch(setSellingPrice(Number(e.target.value)));},value:sellingPrice}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:sellingPrice,className:\"slider sell\",onChange:function onChange(e){return dispatch(setSellingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uB9E4\\uB3C4\\uAC00\\uACA9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return dispatch(setSellingPrice(Number(e.target.value)));},value:sellingPrice}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"50000000\",step:1,value:sellingPrice,className:\"slider sell\",onChange:function onChange(e){return dispatch(setSellingPrice(Number(e.target.value)));}})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uC218\\uB7C9\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{}),/*#__PURE__*/_jsx(\"span\",{children:cr_selected&&cr_selected.market?cr_selected.market.slice(4):null})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{className:\"count-percentage\",children:[/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='10%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('10%');},children:\"10%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='25%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('25%');},children:\"25%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='50%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('50%');},children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='75%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('75%');},children:\"75%\"}),/*#__PURE__*/_jsx(\"span\",{className:selectedPercentage==='100%'?'sell-percentage':'nonSelected-percentage',onClick:function onClick(){return selectPercentage('100%');},children:\"100%\"})]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"trading-category\",children:\"\\uC8FC\\uBB38\\uCD1D\\uC561\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"td-input\",children:[/*#__PURE__*/_jsx(\"input\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"KRW\"})]})]})]}),logInEmail!==''?/*#__PURE__*/_jsx(\"div\",{className:\"trading-submit-sell reserve\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uC608\\uC57D\\uB9E4\\uB3C4\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"trading-submit-nonLogIn-sell reserve\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/logIn');},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){navigate('/signUp');},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]})]});};var TradeHistory=function TradeHistory(){var _useFunction4=useFunction(),getBalance=_useFunction4.getBalance,getOwnedCrypto=_useFunction4.getOwnedCrypto,addTradeHistory=_useFunction4.addTradeHistory,getTradeHistory=_useFunction4.getTradeHistory,getCryptoName=_useFunction4.getCryptoName;var logInEmail=useSelector(function(state){return state.logInEmail;});var userTradeHistory=useSelector(function(state){return state.userTradeHistory;});var userTradeHistory_unSigned=useSelector(function(state){return state.userTradeHistory_unSigned;});var _useState61=useState(false),_useState62=_slicedToArray(_useState61,2),completeModalOpen=_useState62[0],setCompleteModalOpen=_useState62[1];var _useState63=useState('체결'),_useState64=_slicedToArray(_useState63,2),historySort=_useState64[0],setHistorySort=_useState64[1];var _useState65=useState([]),_useState66=_slicedToArray(_useState65,2),scheduledCancel=_useState66[0],setScheduledCancel=_useState66[1];var completeToggleModal=function completeToggleModal(){setCompleteModalOpen(!completeModalOpen);};// 주문을 취소할 화폐를 서버로 전송\nvar cancelOrder=function cancelOrder(email,ids){(function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(email,ids){var response,localStorageKeys,i,key,intersection;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.post(\"http://127.0.0.1:8000/cancel_order/\",{ids:ids,email:email});case 3:response=_context3.sent;console.log(\"주문 취소 정보 전송 성공\",response.data);getTradeHistory(logInEmail);setScheduledCancel([]);completeToggleModal();localStorageKeys=[];for(i=0;i<localStorage.length;i++){key=localStorage.key(i);if(key!==null){console.log(\"dd \",key);localStorageKeys.push(key);}}// ids와 로컬 스토리지에 있는 값 사이 id가 겹치는 것\nintersection=ids.filter(function(item){return localStorageKeys.includes(item);});// 교집합 배열의 특정 요소와 같은 로컬 스토리지의 키를 삭제(주문 취소 요청된 로컬 스토리지 삭제)\nintersection.forEach(function(item){localStorage.removeItem(item);});_context3.next=17;break;case 14:_context3.prev=14;_context3.t0=_context3[\"catch\"](0);console.log(\"주문 취소 정보 전송 실패\");case 17:case\"end\":return _context3.stop();}},_callee3,null,[[0,14]]);}));return function(_x9,_x10){return _ref3.apply(this,arguments);};})()(email,ids);};var clickUnSigned=function clickUnSigned(id,i){// 기존 state에 인덱스가 일치하는 속성이 있는지 확인\nif(scheduledCancel.some(function(item){return item.index===i;})){// 있다면, 인덱스가 다른 부분만을 구분하여 새 배열 생성(인덱스를 제거한다는 의미)\nsetScheduledCancel(scheduledCancel.filter(function(item){return item.index!==i;}));}else{// 기존 state에 일치하는 인덱스가 없다면 할당\nsetScheduledCancel([].concat(_toConsumableArray(scheduledCancel),[{id:id,index:i}]));}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"table\",{className:\"trading-headTable\",children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"trading-choice\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"radio\",children:\"\\uCCB4\\uACB0\\uAD6C\\uBD84\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio1\",className:\"radio-input\",onChange:function onChange(){return setHistorySort('체결');},checked:historySort==='체결'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-designate radio-label\",htmlFor:\"radio1\",children:\"\\uCCB4\\uACB0\"})]}),/*#__PURE__*/_jsxs(\"td\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"radio2\",className:\"radio-input\",onChange:function onChange(){return setHistorySort('미체결');},checked:historySort==='미체결'}),/*#__PURE__*/_jsx(\"label\",{className:\"radio-market radio-label\",htmlFor:\"radio2\",children:\"\\uBBF8\\uCCB4\\uACB0\"})]}),/*#__PURE__*/_jsx(\"td\",{id:\"trading-history-cancel\",style:{visibility:historySort==='미체결'?'visible':'hidden'},onClick:function onClick(){var ids=scheduledCancel.map(function(item){return item.id;});if(ids.length>0){cancelOrder(logInEmail,ids);}},children:\"\\uC8FC\\uBB38 \\uCDE8\\uC18C\"})]})})}),/*#__PURE__*/_jsx(\"table\",{className:\"table-tradingHistory historyHead\",id:\"historyHead\",children:/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC8FC\\uBB38\\uC2DC\\uAC04\"}),/*#__PURE__*/_jsxs(\"th\",{children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uB9C8\\uCF13\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uAD6C\\uBD84\"})]}),/*#__PURE__*/_jsxs(\"th\",{children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\uCCB4\\uACB0\\uAC00\\uACA9\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uCCB4\\uACB0\\uAE08\\uC561\"})]}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC218\\uB7C9\"})]})})}),/*#__PURE__*/_jsx(SimpleBar,{className:\"scrollBar-tradingHistoryTable\",children:/*#__PURE__*/_jsx(\"table\",{className:\"table-tradingHistory\",id:\"historyBody\",children:/*#__PURE__*/_jsx(\"tbody\",{children:// 체결된 화폐들의 거래내역\nhistorySort==='체결'?userTradeHistory.map(function(item,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[item.trade_time.slice(0,10),\" \",/*#__PURE__*/_jsx(\"br\",{}),item.trade_time.slice(10)]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"tradingHistory-market\",children:item.crypto_market}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"tradingHistory-category \".concat(item.trade_category==='BUY'?'asking-buy':'asking-sell'),children:item.trade_category==='BUY'?'매수':'매도'})]}),/*#__PURE__*/_jsxs(\"td\",{children:[item.crypto_price.toLocaleString(),\" \",/*#__PURE__*/_jsx(\"br\",{}),Number(item.trade_price).toLocaleString()]}),/*#__PURE__*/_jsx(\"td\",{children:item.trade_amount.length<=10?item.trade_amount:item.trade_amount[9]==='.'?item.trade_amount.substring(0,9):item.trade_amount.substring(0,10)})]},i);}):// 체결되지 않은 화폐들의 거래내역\nuserTradeHistory_unSigned!==undefined&&Array.isArray(userTradeHistory_unSigned)?userTradeHistory_unSigned.map(function(item,i){return/*#__PURE__*/_jsxs(\"tr\",{className:\"tr-unSigned \".concat(scheduledCancel.some(function(item){return item.index===i;})?'unSigned-clicked':''),onClick:function onClick(){return clickUnSigned(item.id,i);},children:[/*#__PURE__*/_jsxs(\"td\",{children:[item.trade_time!==undefined?item.trade_time.slice(0,10):null,/*#__PURE__*/_jsx(\"br\",{}),item.trade_time!==undefined?item.trade_time.slice(10):null]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"tradingHistory-market\",children:item.crypto_market!==undefined?item.crypto_market:null}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"tradingHistory-category \".concat(item.trade_category==='BUY'?'asking-buy':'asking-sell'),children:item.trade_category!==undefined?item.trade_category==='BUY'?'매수':'매도':null})]}),/*#__PURE__*/_jsxs(\"td\",{children:[item.crypto_price!==undefined?item.crypto_price.toLocaleString():null,/*#__PURE__*/_jsx(\"br\",{}),item.trade_price!==undefined?Number(item.trade_price).toLocaleString():null]}),/*#__PURE__*/_jsx(\"td\",{children:item.trade_amount!==undefined?String(item.trade_amount).length<=10?item.trade_amount:String(item.trade_amount)[9]==='.'?String(item.trade_amount).substring(0,9):String(item.trade_amount).substring(0,10):null})]},i);}):null})})})]});};var useStyles=makeStyles({dialog:{'& .MuiDialog-paper':{width:'600px',height:'200px'},'& .MuiDialogTitle-root .MuiTypography-root':{marginTop:'10px',marginLeft:'10px',fontWeight:'bold'},'& .MuiDialogContent-root':{marginTop:'-10px',marginLeft:'10px'},'& .MuiDialogActions-root':{marginBottom:'10px'},'& .MuiDialogActions-root .MuiButton-root':{fontWeight:'bold',fontSize:'14.5px'}}});var ModalSumbit=function ModalSumbit(_ref4){var modalOpen=_ref4.modalOpen,setModalOpen=_ref4.setModalOpen,toggleModal=_ref4.toggleModal;var classes=useStyles();var sectionChange=useSelector(function(state){return state.sectionChange;});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{open:modalOpen,onClose:toggleModal,className:classes.dialog,maxWidth:false,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\uC548\\uB0B4\"}),/*#__PURE__*/_jsx(DialogContent,{children:// JSX에서는 +등으로 문자열을 묶을 수 없으므로 하나의 배열로 반환\nsectionChange==='매수'?[\"매수 요청이 정상적으로 완료되었습니다.\",/*#__PURE__*/_jsx(\"br\",{},\"buy\"),\"요청하신 매수 가격과 일치하는 매수 요청이 발생하면 거래가 완료됩니다.\"]:[\"매도 요청이 정상적으로 완료되었습니다.\",/*#__PURE__*/_jsx(\"br\",{},\"sell\"),\"요청하신 매도 가격과 일치하는 매도 요청이 발생하면 거래가 완료됩니다.\"]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:toggleModal,color:\"primary\",children:\"\\uD655\\uC778\"})})]})});};var ModalComplete=function ModalComplete(_ref5){var completeModalOpen=_ref5.completeModalOpen,setCompleteModalOpen=_ref5.setCompleteModalOpen,completeToggleModal=_ref5.completeToggleModal;var classes=useStyles();var sectionChange=useSelector(function(state){return state.sectionChange;});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{open:completeModalOpen,onClose:completeToggleModal,className:classes.dialog,maxWidth:false,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\uC548\\uB0B4\"}),/*#__PURE__*/_jsx(DialogContent,{children:sectionChange==='매수'?\"성공적으로 화폐를 매수했습니다.\":\"성공적으로 화폐를 매도했습니다.\"}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:completeToggleModal,color:\"primary\",children:\"\\uD655\\uC778\"})})]})});};export{PriceDetail};","map":{"version":3,"names":["useDispatch","useSelector","setAsking_dateTime","setBuyingPrice","setIsBuying","setIsSelling","setSectionChange","setSellingPrice","useEffect","useState","useNavigate","SimpleBar","axios","useFunction","Dialog","DialogTitle","DialogContent","DialogActions","Button","makeStyles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PriceDetail","dispatch","_useFunction","buyCrypto_unSigned","sellCrypto_unSigned","themeChange","theme","state","sectionChange","askingData_unSigned","logInEmail","_useState","_useState2","_slicedToArray","completeModalOpen","setCompleteModalOpen","completeToggleModal","localStorageItem","i","localStorage","length","tempKey","key","valueItem","getItem","tempValue","JSON","parse","push","id","price","Number","name","trade_amount","trade_price","Object","keys","forEach","cryptoName","scheduledCrypto","j","k","ask_price","console","log","bid_price","children","ModalComplete","className","AskingPrice","ClosedPrice","concat","onClick","BuyingSection","SellingSection","TradeHistory","asking_data","cr_market_selected","asking_dateTime","asking_totalAskSize","asking_totalBidSize","cr_selected","_useState3","_useState4","prevData","setPrevData","_useState5","_useState6","differences_ask","setDifferences_ask","_useState7","_useState8","differences_bid","setDifferences_bid","newDifferences_ask","newDifferences_bid","undefined","value","index","ask_size","new_ask_price","new_ask_size","bid_size","new_bid_price","new_bid_size","date","Date","isNaN","getTime","newDateString","Intl","DateTimeFormat","month","day","hour","minute","hour12","format","replace","slice","map","item","isChanged_bid","some","bidClass","percentage","str_bid_size","String","Math","floor","substring","endsWith","style","background","toLocaleString","isChange_ask","askClass","str_ask_size","closed_data","timestamp","trade_time","str_trade_volume","trade_volume","ask_bid","navigate","cr_name_selected","userWallet","filteredData","buyingPrice","_useState9","_useState10","selectedPercentage","setSelectedPercentage","_useState11","_useState12","bidSort","setBidSort","_useState13","_useState14","buyTotal","setBuyTotal","_useState15","_useState16","buyQuantity","setBuyQuantity","_useState17","_useState18","quantityInputValue","setQuantityInputValue","_useState19","_useState20","totalInputValue","setTotalInputvalue","_useState21","_useState22","buyingInputValue","setBuyingInputValue","_useState23","_useState24","matchedItem","setMatchedItem","isBuying","_useState25","_useState26","modalOpen","setModalOpen","_useState27","_useState28","_useState29","_useState30","tradeCategory","setTradeCategory","_useState31","_useState32","time","setTime","_useState33","_useState34","isMatch","setIsMatch","_useState35","_useState36","setKey","toggleModal","_useFunction2","getBalance","getOwnedCrypto","addTradeHistory","getTradeHistory","getCryptoName","toString","buyCrypto","email","cryptoQuantity","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","crypto_name","crypto_quantity","buy_total","sent","data","t0","stop","_x","_x2","_x3","_x4","apply","arguments","selectPercentage","dividedTotal","dividedQuantity","split","parseFloat","toFixed","ModalSumbit","type","onChange","checked","htmlFor","e","target","min","max","step","decimalPart","market","isNumber","test","dividiedQuantity","find","temp","localStorage_isBuying","setItem","stringify","_ownedCrypto$find2","_ownedCrypto$find3","ownedCrypto","_useState37","_useState38","_useState39","_useState40","sellingPrice","_useState41","_useState42","sellTotal","setSellTotal","_useState43","_useState44","sellQuantity","setSellQuantity","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","sellingInputValue","setSellingInputValue","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useFunction3","sellCrypto","_ref2","_callee2","_callee2$","_context2","sell_total","_x5","_x6","_x7","_x8","_ownedCrypto$find","availableQuantity","quantity","ceil","Array","isArray","localStorage_isSelling","_useFunction4","userTradeHistory","userTradeHistory_unSigned","_useState61","_useState62","_useState63","_useState64","historySort","setHistorySort","_useState65","_useState66","scheduledCancel","setScheduledCancel","cancelOrder","ids","_ref3","_callee3","localStorageKeys","intersection","_callee3$","_context3","filter","includes","removeItem","_x9","_x10","clickUnSigned","_toConsumableArray","visibility","crypto_market","trade_category","crypto_price","useStyles","dialog","width","height","marginTop","marginLeft","fontWeight","marginBottom","fontSize","_ref4","classes","open","onClose","maxWidth","color","_ref5"],"sources":["C:/VS_Project/JeayBit/client/src/components/PriceDetail.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { AskingData, RootState, setAsking_data, setAsking_dateTime, setBuyingCrypto, setBuyingPrice, setIsBuying, setIsSelling, setSectionChange, setSellingPrice, setTheme } from \"../store\";\r\nimport { SetStateAction, useEffect, useState, useRef } from \"react\";\r\nimport { Routes, Route, Link, useNavigate, Outlet } from 'react-router-dom'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport axios from \"axios\";\r\nimport useFunction from \"./useFuction\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, makeStyles } from '@material-ui/core';\r\nimport { UnsginedAskingData } from \"../store\";\r\n\r\nconst PriceDetail = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { buyCrypto_unSigned, sellCrypto_unSigned, themeChange } = useFunction();\r\n\r\n  const theme = useSelector((state: RootState) => state.theme);\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n  const askingData_unSigned = useSelector((state: RootState) => state.askingData_unSigned);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  // 미체결 화폐 매수 - 구매 대기 상태에서 동작 \r\n  useEffect(() => {\r\n\r\n    let localStorageItem: {\r\n      id: string,\r\n      price: number,\r\n      name: string,\r\n      trade_amount: number,\r\n      trade_price: number,\r\n    }[] = [];\r\n\r\n    // 로컬 스토리지에 있는 key-value를 꺼냄\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let tempKey = localStorage.key(i);\r\n\r\n      if (tempKey !== null) {\r\n        let valueItem = localStorage.getItem(tempKey);\r\n\r\n        if (valueItem !== null) {\r\n          let tempValue = JSON.parse(valueItem);\r\n          localStorageItem.push({\r\n            id: tempKey,\r\n            price: Number(tempValue.price),\r\n            name: tempValue.name,\r\n            trade_amount: tempValue.trade_amount,\r\n            trade_price: tempValue.trade_price,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\r\n    // console.log(\"미체결 : \", askingData_unSigned);\r\n\r\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\r\n    Object.keys(askingData_unSigned).forEach((cryptoName) => {\r\n\r\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\r\n      let scheduledCrypto = [];\r\n      for (let i = 0; i < localStorageItem.length; i++) {\r\n        if (cryptoName === localStorageItem[i].name) {\r\n          scheduledCrypto.push(localStorageItem[i]);\r\n        }\r\n      }\r\n\r\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\r\n      for (let j = 0; j < scheduledCrypto.length; j++) {\r\n\r\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\r\n        for (let k = 0; k < (askingData_unSigned[cryptoName]).length; k++) {\r\n\r\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].ask_price);\r\n\r\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\r\n          if (scheduledCrypto[j].price === (askingData_unSigned[cryptoName])[k].ask_price) {\r\n\r\n            console.log(\"매수 - 일치\", scheduledCrypto[j].price);\r\n            buyCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\r\n            completeToggleModal();\r\n          }\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }, [askingData_unSigned])\r\n\r\n  // 미체결 화폐 매도 - 매도 대기 상태에서 동작 \r\n  useEffect(() => {\r\n\r\n    let localStorageItem: {\r\n      id: string,\r\n      price: number,\r\n      name: string,\r\n      trade_amount: number,\r\n      trade_price: number,\r\n    }[] = [];\r\n\r\n    // 로컬 스토리지에 있는 key-value를 꺼냄\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let tempKey = localStorage.key(i);\r\n\r\n      if (tempKey !== null) {\r\n        let valueItem = localStorage.getItem(tempKey);\r\n\r\n        if (valueItem !== null) {\r\n          let tempValue = JSON.parse(valueItem);\r\n          localStorageItem.push({\r\n            id: tempKey,\r\n            price: Number(tempValue.price),\r\n            name: tempValue.name,\r\n            trade_amount: tempValue.trade_amount,\r\n            trade_price: tempValue.trade_price,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\r\n    // console.log(\"미체결 : \", askingData_unSigned);\r\n\r\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\r\n    Object.keys(askingData_unSigned).forEach((cryptoName) => {\r\n\r\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\r\n      let scheduledCrypto = [];\r\n      for (let i = 0; i < localStorageItem.length; i++) {\r\n        if (cryptoName === localStorageItem[i].name) {\r\n          scheduledCrypto.push(localStorageItem[i]);\r\n        }\r\n      }\r\n\r\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\r\n      for (let j = 0; j < scheduledCrypto.length; j++) {\r\n\r\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\r\n        for (let k = 0; k < (askingData_unSigned[cryptoName]).length; k++) {\r\n\r\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].bid_price);\r\n\r\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\r\n          if (scheduledCrypto[j].price === (askingData_unSigned[cryptoName])[k].bid_price) {\r\n\r\n            console.log(\"매도 - 일치\", scheduledCrypto[j].price);\r\n            sellCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\r\n            completeToggleModal();\r\n          }\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }, [askingData_unSigned])\r\n\r\n  return (\r\n    <>\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <div className=\"lightMode\">\r\n        <div className=\"priceDetail-title askingTitle lightMode\">호가내역</div>\r\n        <AskingPrice />\r\n        <div className=\"priceDetail-title closedTitle lightMode\">체결내역</div>\r\n        <ClosedPrice />\r\n        <div className=\"trading-section lightMode-title\">\r\n          <span className={`${sectionChange === '매수' ?\r\n            'buyingSection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('매수'))}>매수</span>\r\n          <span className={`${sectionChange === '매도' ?\r\n            'sellingSection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('매도'))}>매도</span>\r\n          <span className={`${sectionChange === '거래내역' ?\r\n            'tradingHistorySection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('거래내역'))}>거래내역</span>\r\n        </div>\r\n        {\r\n          sectionChange === '매수' ?\r\n            <BuyingSection /> :\r\n            (\r\n              sectionChange === '매도' ?\r\n                <SellingSection /> :\r\n                <TradeHistory />\r\n            )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// bid = 매수, ask = 매도\r\nconst AskingPrice = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const asking_dateTime = useSelector((state: RootState) => state.asking_dateTime);\r\n  const asking_totalAskSize = useSelector((state: RootState) => state.asking_totalAskSize);\r\n  const asking_totalBidSize = useSelector((state: RootState) => state.asking_totalBidSize);\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n\r\n  const [prevData, setPrevData] = useState<AskingData[]>();\r\n\r\n  const [differences_ask, setDifferences_ask] = useState<{\r\n    new_ask_price: number,\r\n    new_ask_size: number\r\n  }[]>([]);\r\n\r\n  const [differences_bid, setDifferences_bid] = useState<{\r\n    new_bid_price: number,\r\n    new_bid_size: number,\r\n  }[]>([]);\r\n\r\n  // 호가 수량의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\r\n  useEffect(() => {\r\n    setPrevData(asking_data);  // state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\r\n\r\n    let newDifferences_ask: {\r\n      new_ask_price: number,\r\n      new_ask_size: number,\r\n    }[] = [];\r\n    let newDifferences_bid: {\r\n      new_bid_price: number,\r\n      new_bid_size: number,\r\n    }[] = [];\r\n\r\n    if (prevData !== undefined) {\r\n      prevData.forEach((value, index) => {\r\n        if (value.ask_size !== asking_data[index].ask_size) {\r\n          newDifferences_ask.push({ new_ask_price: asking_data[index].ask_price, new_ask_size: asking_data[index].ask_size });\r\n        }\r\n        if (value.bid_size !== asking_data[index].bid_size) {\r\n          newDifferences_bid.push({ new_bid_price: asking_data[index].bid_price, new_bid_size: asking_data[index].bid_size });\r\n        }\r\n      })\r\n    }\r\n\r\n    setDifferences_ask(newDifferences_ask)\r\n    setDifferences_bid(newDifferences_bid);\r\n  }, [asking_data])\r\n\r\n  if (asking_dateTime) {\r\n    const date = new Date(asking_dateTime);\r\n    if (!isNaN(date.getTime())) {\r\n      let newDateString = new Intl.DateTimeFormat('ko-KR', {\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: false,  // 24시간 형식\r\n      }).format(date);\r\n\r\n      dispatch(setAsking_dateTime(\r\n        newDateString.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\")\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"askingPrice-table lightMode\">\r\n        <thead className=\"lightMode-title\">\r\n          <tr>\r\n            <th>등록시간</th>\r\n            <th>호가</th>\r\n            <th>\r\n              수량<span>({(cr_market_selected).slice(4)})</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-askingPriceTable\">\r\n        <table className=\"askingPrice-table lightMode\">\r\n          <tbody>\r\n            {\r\n              asking_data.map((item, i) => {\r\n                // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\r\n                let isChanged_bid = differences_bid.some((value, index) => {\r\n                  return value.new_bid_size === item.bid_size;\r\n                })\r\n                let bidClass = isChanged_bid ? 'change-bid' : '';\r\n                const percentage = (item.bid_size / asking_totalBidSize) * 100;  // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\r\n\r\n                let str_bid_size;\r\n\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.bid_size > 9999999999999) {\r\n                  str_bid_size = String(Math.floor(item.bid_size));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_bid_size = String(item.bid_size);\r\n                  str_bid_size = str_bid_size.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_bid_size.endsWith('.')) {\r\n                  str_bid_size = str_bid_size.slice(0, -1);\r\n                }\r\n\r\n                return (\r\n                  <tr\r\n                    key={i}\r\n                    style={{ background: `linear-gradient(270deg, rgba(34,171,148, .2) ${percentage}%, transparent ${percentage}%)` }}>\r\n                    <td>{asking_dateTime}</td>\r\n                    <td>{(item.bid_price).toLocaleString()}</td>\r\n                    <td className={bidClass}>{str_bid_size}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            {\r\n              asking_data.map((item, i) => {\r\n                // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\r\n                let isChange_ask = differences_ask.some((value, index) => {\r\n                  return value.new_ask_size === item.ask_size;\r\n                })\r\n                let askClass = isChange_ask ? 'change-ask' : '';\r\n                const percentage = (item.ask_size / asking_totalAskSize) * 100;  // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\r\n\r\n                let str_ask_size;\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.ask_size > 9999999999999) {\r\n                  str_ask_size = String(Math.floor(item.ask_size));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_ask_size = String(item.ask_size);\r\n                  str_ask_size = str_ask_size.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_ask_size.endsWith('.')) {\r\n                  str_ask_size = str_ask_size.slice(0, -1)\r\n                }\r\n\r\n                return (\r\n                  <tr\r\n                    key={i}\r\n                    style={{ background: `linear-gradient(270deg, rgba(242,54,69, .2) ${percentage}%, transparent ${percentage}%)` }}>\r\n                    <td>{asking_dateTime}</td>\r\n                    <td>{(item.ask_price).toLocaleString()}</td>\r\n                    <td className={askClass}>{str_ask_size}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ClosedPrice = () => {\r\n\r\n  const closed_data = useSelector((state: RootState) => state.closed_data);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n\r\n  return (\r\n    <>\r\n      {/* 스크롤바를 넣기 위해 테이블을 두 개로 구성 */}\r\n      <table className=\"closedPrice-table lightMode-title\">\r\n        <thead>\r\n          <tr>\r\n            <th>체결시간</th>\r\n            <th>체결가격</th>\r\n            <th>\r\n              체결량<span>({(cr_market_selected).slice(4)})</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-closedPriceTable\">\r\n        <table className=\"closedPrice-table\">\r\n          <tbody>\r\n            {\r\n              closed_data.map((item, i) => {\r\n                const date = new Date(item.timestamp);\r\n                let trade_time = new Intl.DateTimeFormat('ko-KR', {\r\n                  month: '2-digit',\r\n                  day: '2-digit',\r\n                  hour: '2-digit',\r\n                  minute: '2-digit',\r\n                  hour12: false,  // 24시간 형식\r\n                }).format(date);\r\n                trade_time = trade_time.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\")\r\n\r\n                let str_trade_volume;\r\n\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.trade_volume > 9999999999999) {\r\n                  str_trade_volume = String(Math.floor(item.trade_volume));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_trade_volume = String(item.trade_volume);\r\n                  str_trade_volume = str_trade_volume.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_trade_volume.endsWith('.')) {\r\n                  str_trade_volume = str_trade_volume.slice(0, -1)\r\n                }\r\n\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{trade_time}</td>\r\n                    <td>{(item.trade_price).toLocaleString()}</td>\r\n                    {\r\n                      item.ask_bid === 'BID' ?\r\n                        <td className=\"td-rise\">{str_trade_volume}</td> :\r\n                        <td className=\"td-fall\">{str_trade_volume}</td>\r\n                    }\r\n                  </tr>\r\n                )\r\n              }\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BuyingSection = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n  const cr_name_selected = useSelector((state: RootState) => state.cr_name_selected);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const userWallet = useSelector((state: RootState) => state.userWallet);\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);  // bid = 매수, ask = 매도\r\n  const askingData_unSigned = useSelector((state: RootState) => state.askingData_unSigned);\r\n  const filteredData = useSelector((state: RootState) => state.filteredData);\r\n  const theme = useSelector((state: RootState) => state.theme);\r\n\r\n\r\n  const buyingPrice = useSelector((state: RootState) => state.buyingPrice);\r\n  const [selectedPercentage, setSelectedPercentage] = useState<string>('');\r\n  const [bidSort, setBidSort] = useState<string>('지정가');\r\n\r\n  const [buyTotal, setBuyTotal] = useState<number>(0);\r\n  const [buyQuantity, setBuyQuantity] = useState<number>(0);\r\n\r\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\r\n  const [totalInputValue, setTotalInputvalue] = useState('0');\r\n  const [buyingInputValue, setBuyingInputValue] = useState('0');\r\n\r\n  // 구매하려는 화폐의 가격과 호가 사이의 일치 여부\r\n  const [matchedItem, setMatchedItem] = useState<AskingData | null>(null);\r\n\r\n  // 화폐를 구매하기 위해 대기중인지 여부\r\n  const isBuying = useSelector((state: RootState) => state.isBuying);\r\n\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\r\n  const [tradeCategory, setTradeCategory] = useState<string>('매수');\r\n\r\n  // 현재 시간을 저장하는 state\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const [isMatch, setIsMatch] = useState<[{\r\n    id: string,\r\n    price: number,\r\n    name: string,\r\n  }]>();\r\n\r\n  const [key, setKey] = useState<{\r\n    id: string,\r\n    price: number,\r\n    name: string,\r\n  }[]>([]);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  const { getBalance, getOwnedCrypto, addTradeHistory, getTradeHistory, getCryptoName, buyCrypto_unSigned } = useFunction();\r\n\r\n  // 매수가가 바뀌면 그에 따라 입력값도 변경\r\n  useEffect(() => {\r\n    setBuyingInputValue(buyingPrice.toString())\r\n  }, [buyingPrice])\r\n\r\n  // 선택 화폐가 바뀔 때마다 매수 가격을 해당 화폐의 가격으로 변경하고, 주문 수량 및 총액을 초기화\r\n  useEffect(() => {\r\n    // 주문 수량\r\n    setBuyQuantity(0);\r\n    setQuantityInputValue('0');\r\n\r\n    // 주문 총액\r\n    setBuyTotal(0);\r\n    setTotalInputvalue('0');\r\n  }, [cr_name_selected])\r\n\r\n  // 호가와 구매가가 일치할 때\r\n  const buyCrypto = (email: string, cryptoName: string, cryptoQuantity: number, buyTotal: number) => {\r\n    (async (email, cryptoName, cryptoQuantity, buyTotal) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/buy_crypto/\", {\r\n          email: email,\r\n          crypto_name: cryptoName,\r\n          crypto_quantity: cryptoQuantity,\r\n          buy_total: buyTotal,\r\n        });\r\n        console.log(\"구매 화폐 전송 성공\", response.data);\r\n        getBalance(logInEmail);  // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\r\n        getOwnedCrypto(logInEmail);  // 소유 화폐가 새로 추가될 수 있으니 업데이트\r\n        getTradeHistory(logInEmail)  // 매수에 성공했으니 거래내역 업데이트\r\n        completeToggleModal();\r\n      } catch (error) {\r\n        console.log(\"구매 화폐 전송 실패: \", error)\r\n      }\r\n    })(email, cryptoName, cryptoQuantity, buyTotal);\r\n  }\r\n\r\n  const selectPercentage = (percentage: string) => {\r\n    setSelectedPercentage(percentage)\r\n\r\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없으므로 \r\n    if (buyingInputValue !== '0') {\r\n\r\n      // 현재 잔고 기준 퍼센테이지를 '주문총액'에 할당하고, 주문총액이 구매하려는 화폐 가격에 대해 어느 정도의 비율을 가지는지 계산\r\n      if (percentage === '10%') {\r\n        let dividedTotal = userWallet * 0.1;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '25%') {\r\n        let dividedTotal = userWallet * 0.25;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '50%') {\r\n        let dividedTotal = userWallet * 0.50;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '75%') {\r\n        let dividedTotal = userWallet * 0.75;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '100%') {\r\n        let dividedTotal = userWallet;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSumbit modalOpen={modalOpen} setModalOpen={setModalOpen} toggleModal={toggleModal} />\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <table className=\"trading-headTable\">\r\n        <tbody>\r\n          <tr className=\"trading-choice\">\r\n            <td className={`radio ${theme ? 'darkMode-title' : 'lightMode-title'}`}>\r\n              주문구분\r\n            </td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onChange={() => (setBidSort('지정가'))} checked={bidSort === '지정가'}></input>\r\n              <label className={`radio-designate radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`} htmlFor=\"radio1\">\r\n                지정가\r\n              </label>\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onChange={() => (setBidSort('시장가'))} checked={bidSort === '시장가'}></input>\r\n              <label className={`radio-market radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`} htmlFor=\"radio2\">\r\n                시장가\r\n              </label>\r\n            </td>\r\n            {/* <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio3\" className=\"radio-input\" onChange={() => (setBidSort('예약가'))} checked={bidSort === '예약가'}></input>\r\n              <label className=\"radio-reserve radio-label\" htmlFor=\"radio3\">\r\n                예약/지정가\r\n              </label>\r\n            </td> */}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {\r\n        // 매수 - 지정가 영역\r\n        bidSort === '지정가' ?\r\n          <>\r\n            <table className=\"trading-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"trading-category\">주문가능</td>\r\n                  <td className=\"trading-availableTrade\">{(Number(userWallet).toLocaleString())}\r\n                    <span>KRW</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"trading-category\">매수가격</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={buyingInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 매수가격을 변경했음에도 구매 대기 여부가 true이면 의도치 않게 매수가 완료될 수 있으니, 매수가를 변경했을 때는 구매 대기 여부를 false로 처리\r\n                          // let updatedIsBuying = { ...isBuying };\r\n                          // updatedIsBuying[cr_name_selected] = false;\r\n                          // dispatch(setIsBuying(updatedIsBuying));\r\n\r\n                          // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                          value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                          // 숫자와 \".\" 외의 문자를 제거\r\n                          value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                          // \".\"이 맨 처음에 오지 않도록 함\r\n                          if (value[0] === '.') {\r\n                            value = '0' + value;\r\n                          }\r\n\r\n                          // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          dispatch(setBuyingPrice(Number(value)));\r\n                          setBuyingInputValue(value);\r\n                          setBuyTotal(Math.floor(parseFloat(value) * buyQuantity));\r\n                          setTotalInputvalue((Math.floor(parseFloat(value) * buyQuantity)).toString());\r\n                        }} />\r\n                      <span>KRW</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td>\r\n                    <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"trading-category\">주문수량</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={quantityInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                          value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                          // 숫자와 \".\" 외의 문자를 제거\r\n                          value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                          // \".\"이 맨 처음에 오지 않도록 함\r\n                          if (value[0] === '.') {\r\n                            value = '0' + value;\r\n                          }\r\n\r\n                          // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                          // 소수점 자릿수가 8자리 이하인 경우만\r\n                          if (decimalPart <= 8) {\r\n                            setQuantityInputValue(value);\r\n                            setBuyQuantity(parseFloat(value));\r\n                          }\r\n                          setBuyTotal(Math.floor(buyingPrice * parseFloat(value)));\r\n                          setTotalInputvalue((Math.floor(buyingPrice * parseFloat(value))).toString());\r\n                        }}\r\n                      />\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td className=\"count-percentage\">\r\n                    <span className={\r\n                      selectedPercentage === '10%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                    <span className={\r\n                      selectedPercentage === '25%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                    <span className={\r\n                      selectedPercentage === '50%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                    <span className={\r\n                      selectedPercentage === '75%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                    <span className={\r\n                      selectedPercentage === '100%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문총액</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`${theme ? 'darkMode-title' : 'lightMode-title'}`}\r\n                        value={totalInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\r\n                          const isNumber = /^[0-9]*$/.test(value);\r\n\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          if (buyingInputValue !== '0') {\r\n\r\n                            if (isNumber) {\r\n                              setTotalInputvalue(value);\r\n                              setBuyTotal(parseFloat(value));\r\n\r\n                              let dividiedQuantity = Number(value) / buyingPrice;\r\n\r\n                              // 소수점 아래 8자리로 제한\r\n                              if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\r\n                                dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\r\n                              }\r\n\r\n                              setBuyQuantity(dividiedQuantity);\r\n                              setQuantityInputValue(dividiedQuantity.toString());\r\n                            }\r\n                          }\r\n                        }} />\r\n                      <span>KRW</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {\r\n              logInEmail !== '' ?\r\n                <div className=\"trading-submit-buy designate\">\r\n                  <span onClick={() => {\r\n                    // 호가와 구매가가 일치하는지 확인\r\n                    let item = asking_data.find(item => item.ask_price === buyingPrice);\r\n                    if (item !== undefined) {\r\n                      // 일치한다면 바로 매수 요청을 전송\r\n                      buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal);\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                    else {\r\n                      // 선택한 화폐에 대한 구매 대기 여부를 true로 설정\r\n                      let temp = localStorage.getItem(`${logInEmail}_IsBuying`)\r\n                      if (temp !== null) {\r\n                        let localStorage_isBuying = JSON.parse(temp);\r\n                        localStorage_isBuying[cr_name_selected] = true;\r\n                        localStorage.setItem(`${logInEmail}_IsBuying`, JSON.stringify(localStorage_isBuying));\r\n\r\n                        dispatch(setIsBuying(localStorage_isBuying))\r\n                      }\r\n\r\n                      // 일치하지 않는다면 대기 모달 팝업\r\n                      toggleModal();\r\n                      setModalOpen(!modalOpen);\r\n\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, false);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                  }}>매수</span>\r\n                </div> :\r\n                <div className=\"trading-submit-nonLogIn-buy designate\">\r\n                  <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                  <span onClick={() => { navigate('/signUp') }} >회원가입</span>\r\n                </div>\r\n            }\r\n          </> :\r\n          (\r\n            // 매수 - 시장가 영역\r\n            bidSort === '시장가' ?\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문가능</td>\r\n                    <td className=\"trading-availableTrade\">{(Number(userWallet).toLocaleString())}\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <div>\r\n                        <input value={buyTotal}>\r\n                        </input>\r\n                        <span>KRW</span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-buy market\">\r\n                      <span onClick={\r\n                        // 호가와의 일치 여부를 확인하지 않음\r\n                        () => {\r\n                          buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal)\r\n                          addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\r\n                        }\r\n                      }>\r\n                        매수\r\n                      </span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-buy market\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </> :\r\n              // 매수 - 예약가 영역\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문가능</td>\r\n                    <td className=\"trading-availableTrade\">{userWallet}\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td className=\"trading-category\">감시가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} value={buyingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">매수가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} value={buyingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-buy reserve\">\r\n                      <span>예약매수</span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-buy reserve\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </>\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst SellingSection = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const cr_name_selected = useSelector((state: RootState) => state.cr_name_selected);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const userWallet = useSelector((state: RootState) => state.userWallet);\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);  // bid = 매수, ask = 매도\r\n  const ownedCrypto = useSelector((state: RootState) => state.ownedCrypto);\r\n  const askingData_unSigned = useSelector((state: RootState) => state.askingData_unSigned);\r\n  const theme = useSelector((state: RootState) => state.theme);\r\n\r\n  const [selectedPercentage, setSelectedPercentage] = useState<string>('');\r\n  const [bidSort, setBidSort] = useState<string>('지정가');\r\n  // const [availableQuantity, setAvailableQuantity] = useState<any>(0);\r\n\r\n  const sellingPrice = useSelector((state: RootState) => state.sellingPrice);\r\n  const [sellTotal, setSellTotal] = useState<number>(0);\r\n  const [sellQuantity, setSellQuantity] = useState<number>(0);\r\n\r\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\r\n  const [totalInputValue, setTotalInputvalue] = useState('0');\r\n  const [sellingInputValue, setSellingInputValue] = useState('0');\r\n\r\n  // 매도하려는 화폐의 가격과 호가 사이의 일치 여부\r\n  const [matchedItem, setMatchedItem] = useState<AskingData | null>(null);\r\n\r\n  // 화폐를 매도하기 위해 대기중인지 여부\r\n  // const [isSelling, setIsSelling] = useState<boolean>(false);\r\n\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\r\n  const [tradeCategory, setTradeCategory] = useState<string>('매도');\r\n\r\n  // 현재 시간을 저장하는 state\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  const { getBalance, getOwnedCrypto, addTradeHistory, getTradeHistory } = useFunction();\r\n\r\n  // 매도가가 바뀌면 그에 따라 입력값도 변경\r\n  useEffect(() => {\r\n    setSellingInputValue(sellingPrice.toString());\r\n  }, [sellingPrice])\r\n\r\n  // 선택 화폐가 바뀔 때마다 주문 가능한 보유 화폐량을 변경하고, 주문 수량 및 총액을 초기화\r\n  useEffect(() => {\r\n    // 주문 수량\r\n    setSellQuantity(0);\r\n    setQuantityInputValue('0');\r\n\r\n    // 주문 총액\r\n    setSellTotal(0);\r\n    setTotalInputvalue('0');\r\n  }, [cr_name_selected])\r\n\r\n  // 호가와 매도가가 일치할 때\r\n  const sellCrypto = (email: string, cryptoName: string, cryptoQuantity: number, sellTotal: number) => {\r\n    (async (email, cryptoName, cryptoQuantity, sellTotal) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/sell_crypto/\", {\r\n          email: email,\r\n          crypto_name: cryptoName,\r\n          crypto_quantity: cryptoQuantity,\r\n          sell_total: sellTotal,\r\n        });\r\n        console.log(\"매도 화폐 전송 성공\", response.data);\r\n        getBalance(logInEmail);  // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\r\n        getOwnedCrypto(logInEmail);  // 소유 화폐가 새로 추가될 수 있으니 업데이트\r\n        getTradeHistory(logInEmail);  // 매도했으니 업데이트 됐을 거래내역을 가져옴 \r\n        completeToggleModal();\r\n      } catch (error) {\r\n        console.log(\"매도 화폐 전송 실패: \", error);\r\n      }\r\n    })(email, cryptoName, cryptoQuantity, sellTotal);\r\n  }\r\n\r\n  const selectPercentage = (percentage: string) => {\r\n    setSelectedPercentage(percentage)\r\n\r\n    // 선택된 화폐의 보유 수량\r\n    let availableQuantity = ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity\r\n\r\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없고, 보유 화폐량이 undefined이면 연산이 불가능 \r\n    if (sellingInputValue !== '0' && availableQuantity !== undefined) {\r\n\r\n      // 현재 화폐 보유량 기준 퍼센테이지를 '주문수량'에 할당하고, 주문수량이 매도 가격의 어느 정도 비율을 차지하는지를 계산하여 '주문총액'에 할당\r\n      if (percentage === '10%') {\r\n        let dividedQuantity = availableQuantity * 0.10;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '25%') {\r\n        let dividedQuantity = availableQuantity * 0.25;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '50%') {\r\n        let dividedQuantity = availableQuantity * 0.50;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '75%') {\r\n        let dividedQuantity = availableQuantity * 0.75;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '100%') {\r\n        let dividedQuantity = availableQuantity;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n    }\r\n    else if (availableQuantity === undefined) {\r\n      // 주문 수량\r\n      setSellQuantity(0);\r\n      setQuantityInputValue('0');\r\n\r\n      // 주문 총액\r\n      setSellTotal(0);\r\n      setTotalInputvalue('0');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSumbit modalOpen={modalOpen} setModalOpen={setModalOpen} toggleModal={toggleModal} />\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <table className=\"trading-headTable\">\r\n        <tr className=\"trading-choice\">\r\n          <td className='radio'>\r\n            주문구분\r\n          </td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onClick={() => (setBidSort('지정가'))} checked={bidSort === '지정가'}></input>\r\n            <label className='radio-designate radio-label' htmlFor=\"radio1\">\r\n              지정가\r\n            </label>\r\n          </td>\r\n          <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onClick={() => (setBidSort('시장가'))} checked={bidSort === '시장가'}></input>\r\n            <label className='radio-market radio-label' htmlFor=\"radio2\">\r\n              시장가\r\n            </label>\r\n          </td>\r\n          {/* <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio3\" className=\"radio-input\" onClick={() => (setBidSort('예약가'))} checked={bidSort === '예약가'}></input>\r\n            <label className=\"radio-reserve radio-label\" htmlFor=\"radio3\">\r\n              예약/지정가\r\n            </label>\r\n          </td> */}\r\n        </tr>\r\n      </table>\r\n      {\r\n        // 매도 - 지정가 영역\r\n        bidSort === '지정가' ?\r\n          <>\r\n            <table className=\"trading-table\">\r\n              <tr>\r\n                <td className='trading-category'>주문가능</td>\r\n                <td className=\"trading-availableTrade\">\r\n                  {\r\n                    // 보유수량이 undefined 또는 null일 때 0 반환\r\n                    (Array.isArray(ownedCrypto) && ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity) || '0'\r\n                  }\r\n                  <span>{(cr_market_selected).slice(4)}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>매도가격</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={sellingInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 매도가격을 변경했음에도 매도 대기 여부가 true이면 의도치 않게 매도가 완료될 수 있으니, 매도가를 변경했을 때는 매도 대기 여부를 false로 처리\r\n                        setIsSelling(false);\r\n\r\n                        // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                        value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                        // 숫자와 \".\" 외의 문자를 제거\r\n                        value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                        // \".\"이 맨 처음에 오지 않도록 함\r\n                        if (value[0] === '.') {\r\n                          value = '0' + value;\r\n                        }\r\n\r\n                        // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        dispatch(setSellingPrice(Number(value)));\r\n                        setSellingInputValue(value);\r\n                        setSellTotal(Math.floor(parseFloat(value) * sellQuantity));\r\n                        setTotalInputvalue((Math.floor(parseFloat(value) * sellQuantity)).toString());\r\n                      }}\r\n                    />\r\n                    <span>KRW</span>\r\n                  </div>\r\n\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>주문수량</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={quantityInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                        value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                        // 숫자와 \".\" 외의 문자를 제거\r\n                        value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                        // \".\"이 맨 처음에 오지 않도록 함\r\n                        if (value[0] === '.') {\r\n                          value = '0' + value;\r\n                        }\r\n\r\n                        // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                        // 소수점 자릿수가 8자리 이하인 경우만\r\n                        if (decimalPart <= 8) {\r\n                          setQuantityInputValue(value);\r\n                          setSellQuantity(parseFloat(value));\r\n                        }\r\n\r\n                        setSellTotal(Math.floor(sellingPrice * parseFloat(value)))\r\n                        setTotalInputvalue((Math.floor(sellingPrice * parseFloat(value))).toString())\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      {\r\n                        cr_selected && cr_selected.market ?\r\n                          (cr_selected.market).slice(4) :\r\n                          null\r\n                      }\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td className=\"count-percentage\">\r\n                  <span className={\r\n                    selectedPercentage === '10%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                  <span className={\r\n                    selectedPercentage === '25%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                  <span className={\r\n                    selectedPercentage === '50%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                  <span className={\r\n                    selectedPercentage === '75%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                  <span className={\r\n                    selectedPercentage === '100%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>주문총액</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={totalInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\r\n                        const isNumber = /^[0-9]*$/.test(value);\r\n\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        if (sellingInputValue !== '0') {\r\n\r\n                          if (isNumber) {\r\n                            setTotalInputvalue(value);\r\n                            setSellTotal(parseFloat(value));\r\n\r\n                            let dividiedQuantity = Number(value) / sellingPrice;\r\n\r\n                            // 소수점 아래 8자리로 제한\r\n                            if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\r\n                              dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\r\n                            }\r\n\r\n                            setSellQuantity(dividiedQuantity);\r\n                            setQuantityInputValue(dividiedQuantity.toString());\r\n                          }\r\n                        }\r\n\r\n                      }}\r\n                    />\r\n                    <span>KRW</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n            {\r\n              logInEmail !== '' ?\r\n                <div className=\"trading-submit-sell designate\">\r\n                  <span onClick={() => {\r\n                    // 호가와 매도가가 일치하는지 확인\r\n                    let item = asking_data.find(item => item.bid_price === sellingPrice);\r\n                    if (item !== undefined) {\r\n                      // 일치한다면 바로 매수 요청을 전송\r\n                      sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal);\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                    else {\r\n                      // 선택한 화폐에 대한 매도 대기 여부를 true로 설정\r\n                      let temp = localStorage.getItem(`${logInEmail}_IsSelling`)\r\n                      if (temp !== null) {\r\n                        let localStorage_isSelling = JSON.parse(temp);\r\n                        localStorage_isSelling[cr_name_selected] = true;\r\n                        localStorage.setItem(`${logInEmail}_IsSelling`, JSON.stringify(localStorage_isSelling));\r\n\r\n                        dispatch(setIsSelling(localStorage_isSelling))\r\n                      }\r\n\r\n                      // 일치하지 않는다면 대기 모달 팝업\r\n                      toggleModal();\r\n                      setModalOpen(!modalOpen);\r\n\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, false);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                  }}>매도</span>\r\n                </div> :\r\n                <div className=\"trading-submit-nonLogIn-sell designate\">\r\n                  <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                  <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                </div>\r\n            }\r\n          </> :\r\n          (\r\n            // 매도 - 시장가 영역\r\n            bidSort === '시장가' ?\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className='trading-category'>주문가능</td>\r\n                    <td className=\"trading-availableTrade\">\r\n                      {\r\n                        // 보유수량이 undefined 또는 null일 때 0 반환\r\n                        (Array.isArray(ownedCrypto) && ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity) || '0'\r\n                      }\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='trading-category'>주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <div>\r\n                        <input type=\"text\"\r\n                          value={quantityInputValue}\r\n                          onChange={(e) => {\r\n                            let value = e.target.value;\r\n\r\n                            // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                            if (value[0] === '0' && value.length > 1) {\r\n                              if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                                value = value.substring(1);\r\n                              }\r\n                            }\r\n\r\n                            // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                            value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                            // 숫자와 \".\" 외의 문자를 제거\r\n                            value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                            // \".\"이 맨 처음에 오지 않도록 함\r\n                            if (value[0] === '.') {\r\n                              value = '0' + value;\r\n                            }\r\n\r\n                            // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                            if (value === '') {\r\n                              value = '0';\r\n                            }\r\n\r\n                            const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                            // 소수점 자릿수가 8자리 이하인 경우만\r\n                            if (decimalPart <= 8) {\r\n                              setQuantityInputValue(value);\r\n                              setSellQuantity(parseFloat(value));\r\n                            }\r\n\r\n                            setSellTotal(Math.floor(sellingPrice * parseFloat(value)))\r\n                            setTotalInputvalue((Math.floor(sellingPrice * parseFloat(value))).toString())\r\n                          }}\r\n                        />\r\n                        <span>\r\n                          {\r\n                            cr_selected && cr_selected.market ?\r\n                              (cr_selected.market).slice(4) :\r\n                              null\r\n                          }\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-sell market\">\r\n                      <span onClick={\r\n                        // 호가와의 일치 여부를 확인하지 않음\r\n                        () => {\r\n                          sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal)\r\n                          addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\r\n                        }}>\r\n                        매도\r\n                      </span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-sell market\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </> :\r\n              // 매도 - 예약가 영역\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문가능</td>\r\n                    <td className=\"trading-availableTrade\">0\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">감시가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} value={sellingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">매도가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} value={sellingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-sell reserve\">\r\n                      <span>예약매도</span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-sell reserve\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </>\r\n\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst TradeHistory = () => {\r\n\r\n  const { getBalance, getOwnedCrypto, addTradeHistory, getTradeHistory, getCryptoName } = useFunction();\r\n\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const userTradeHistory = useSelector((state: RootState) => state.userTradeHistory)\r\n  const userTradeHistory_unSigned = useSelector((state: RootState) => state.userTradeHistory_unSigned)\r\n\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  const [historySort, setHistorySort] = useState<string>('체결');\r\n  const [scheduledCancel, setScheduledCancel] = useState<\r\n    {\r\n      id: string,\r\n      index: number,\r\n    }[]>([]);\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  // 주문을 취소할 화폐를 서버로 전송\r\n  const cancelOrder = (email: string, ids: string[]) => {\r\n    (async (email, ids) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/cancel_order/\", {\r\n          ids: ids,\r\n          email: email,\r\n        });\r\n        console.log(\"주문 취소 정보 전송 성공\", response.data);\r\n        getTradeHistory(logInEmail);\r\n        setScheduledCancel([]);\r\n        completeToggleModal();\r\n\r\n        let localStorageKeys: string[] = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          let key = localStorage.key(i);\r\n          if (key !== null) {\r\n            console.log(\"dd \", key);\r\n            localStorageKeys.push(key);\r\n          }\r\n        }\r\n\r\n        // ids와 로컬 스토리지에 있는 값 사이 id가 겹치는 것\r\n        let intersection = ids.filter(item => localStorageKeys.includes(item));\r\n\r\n        // 교집합 배열의 특정 요소와 같은 로컬 스토리지의 키를 삭제(주문 취소 요청된 로컬 스토리지 삭제)\r\n        intersection.forEach((item) => {\r\n          localStorage.removeItem(item);\r\n        })\r\n\r\n      } catch (error) {\r\n        console.log(\"주문 취소 정보 전송 실패\");\r\n      }\r\n    })(email, ids);\r\n  }\r\n\r\n  const clickUnSigned = (id: string, i: number) => {\r\n    // 기존 state에 인덱스가 일치하는 속성이 있는지 확인\r\n    if (scheduledCancel.some(item => item.index === i)) {\r\n      // 있다면, 인덱스가 다른 부분만을 구분하여 새 배열 생성(인덱스를 제거한다는 의미)\r\n      setScheduledCancel(scheduledCancel.filter(item => item.index !== i));\r\n    }\r\n    else {\r\n      // 기존 state에 일치하는 인덱스가 없다면 할당\r\n      setScheduledCancel([...scheduledCancel, { id: id, index: i }]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"trading-headTable\">\r\n        <tbody>\r\n          <tr className=\"trading-choice\">\r\n            <td className=\"radio\">\r\n              체결구분\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onChange={() => (setHistorySort('체결'))} checked={historySort === '체결'}></input>\r\n              <label className=\"radio-designate radio-label\" htmlFor=\"radio1\">\r\n                체결\r\n              </label>\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onChange={() => (setHistorySort('미체결'))} checked={historySort === '미체결'}></input>\r\n              <label className=\"radio-market radio-label\" htmlFor=\"radio2\">\r\n                미체결\r\n              </label>\r\n            </td>\r\n            <td id=\"trading-history-cancel\" style={{ visibility: historySort === '미체결' ? 'visible' : 'hidden' }} onClick={() => {\r\n              let ids: string[] = scheduledCancel.map(item => item.id);\r\n              if (ids.length > 0) {\r\n                cancelOrder(logInEmail, ids);\r\n              }\r\n            }}>\r\n              주문 취소\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <table className=\"table-tradingHistory historyHead\" id=\"historyHead\">\r\n        {/* <colgroup>\r\n          <col width={75} />\r\n          <col width={75} />\r\n          <col width={80} />\r\n          <col width={85} />\r\n        </colgroup> */}\r\n        <thead>\r\n          <tr>\r\n            <th>주문시간</th>\r\n            <th>\r\n              <div>마켓</div>\r\n              <div>구분</div>\r\n            </th>\r\n            <th>\r\n              <div>체결가격</div>\r\n              <div>체결금액</div>\r\n            </th>\r\n            <th>수량</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-tradingHistoryTable\">\r\n        <table className=\"table-tradingHistory\" id=\"historyBody\">\r\n          {/* <colgroup>\r\n            <col width={75} />\r\n            <col width={75} />\r\n            <col width={80} />\r\n            <col width={85} />\r\n          </colgroup> */}\r\n          <tbody>\r\n            {\r\n              // 체결된 화폐들의 거래내역\r\n              historySort === '체결' ?\r\n                userTradeHistory.map((item, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>\r\n                        {(item.trade_time).slice(0, 10)} <br />\r\n                        {(item.trade_time).slice(10)}\r\n                      </td>\r\n                      <td>\r\n                        <span className=\"tradingHistory-market\">\r\n                          {item.crypto_market}\r\n                        </span>\r\n                        <br />\r\n                        <span className={`tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`}>\r\n\r\n                          {\r\n                            item.trade_category === 'BUY' ?\r\n                              '매수' :\r\n                              '매도'\r\n                          }\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        {(item.crypto_price).toLocaleString()} <br />\r\n                        {(Number(item.trade_price)).toLocaleString()}\r\n                      </td>\r\n                      <td>\r\n                        {\r\n                          (item.trade_amount).length <= 10 ?\r\n                            item.trade_amount :\r\n                            (\r\n                              item.trade_amount[9] === '.' ?\r\n                                (item.trade_amount).substring(0, 9) :\r\n                                (item.trade_amount).substring(0, 10)\r\n                            )\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }) :\r\n                // 체결되지 않은 화폐들의 거래내역\r\n                userTradeHistory_unSigned !== undefined && Array.isArray(userTradeHistory_unSigned) ?\r\n                  (\r\n                    userTradeHistory_unSigned.map((item, i) => {\r\n                      return (\r\n                        <tr className={`tr-unSigned ${scheduledCancel.some(item => item.index === i) ?\r\n                          'unSigned-clicked' : ''\r\n                          }`}\r\n                          key={i}\r\n                          onClick={() => clickUnSigned(item.id, i)}>\r\n                          <td>\r\n                            {\r\n                              item.trade_time !== undefined ?\r\n                                (item.trade_time).slice(0, 10) :\r\n                                null\r\n                            }\r\n                            <br />\r\n                            {\r\n                              item.trade_time !== undefined ?\r\n                                (item.trade_time).slice(10) :\r\n                                null\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            <span className=\"tradingHistory-market\">\r\n                              {\r\n                                item.crypto_market !== undefined ?\r\n                                  item.crypto_market :\r\n                                  null\r\n                              }\r\n                            </span>\r\n                            <br />\r\n                            <span className={`tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`}>\r\n\r\n                              {\r\n                                item.trade_category !== undefined ? (\r\n\r\n                                  item.trade_category === 'BUY' ?\r\n                                    '매수' :\r\n                                    '매도'\r\n                                ) :\r\n                                  null\r\n                              }\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            {\r\n                              item.crypto_price !== undefined ?\r\n                                (item.crypto_price).toLocaleString() :\r\n                                null\r\n                            }\r\n                            <br />\r\n                            {\r\n                              item.trade_price !== undefined ?\r\n                                (Number(item.trade_price)).toLocaleString() :\r\n                                null\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            {\r\n                              item.trade_amount !== undefined ?\r\n                                (\r\n                                  (String(item.trade_amount)).length <= 10 ?\r\n                                    item.trade_amount :\r\n                                    (\r\n                                      String(item.trade_amount)[9] === '.' ?\r\n                                        (String(item.trade_amount)).substring(0, 9) :\r\n                                        (String(item.trade_amount)).substring(0, 10)\r\n                                    )\r\n                                ) :\r\n                                null\r\n                            }\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  ) :\r\n                  null\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface ModalProps {\r\n  modalOpen: boolean;\r\n  setModalOpen: (open: boolean) => void;\r\n  toggleModal: () => void;\r\n}\r\n\r\ninterface CompleteModalProps {\r\n  completeModalOpen: boolean;\r\n  setCompleteModalOpen: (open: boolean) => void;\r\n  completeToggleModal: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  dialog: {\r\n    '& .MuiDialog-paper': {\r\n      width: '600px',\r\n      height: '200px'\r\n    },\r\n    '& .MuiDialogTitle-root .MuiTypography-root': {\r\n      marginTop: '10px',\r\n      marginLeft: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      marginTop: '-10px',\r\n      marginLeft: '10px',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      marginBottom: '10px',\r\n    },\r\n    '& .MuiDialogActions-root .MuiButton-root': {\r\n      fontWeight: 'bold',\r\n      fontSize: '14.5px',\r\n    }\r\n  },\r\n});\r\n\r\nconst ModalSumbit: React.FC<ModalProps> = ({ modalOpen, setModalOpen, toggleModal }) => {\r\n\r\n  const classes = useStyles();\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={modalOpen} onClose={toggleModal} className={classes.dialog} maxWidth={false}>\r\n        <DialogTitle>안내</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            // JSX에서는 +등으로 문자열을 묶을 수 없으므로 하나의 배열로 반환\r\n            sectionChange === '매수' ?\r\n              [\"매수 요청이 정상적으로 완료되었습니다.\", <br key=\"buy\" />,\r\n                \"요청하신 매수 가격과 일치하는 매수 요청이 발생하면 거래가 완료됩니다.\"] :\r\n              [\"매도 요청이 정상적으로 완료되었습니다.\", <br key=\"sell\" />,\r\n                \"요청하신 매도 가격과 일치하는 매도 요청이 발생하면 거래가 완료됩니다.\"]\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleModal} color=\"primary\">확인</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ModalComplete: React.FC<CompleteModalProps> = ({ completeModalOpen, setCompleteModalOpen, completeToggleModal }) => {\r\n\r\n  const classes = useStyles();\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={completeModalOpen} onClose={completeToggleModal} className={classes.dialog} maxWidth={false}>\r\n        <DialogTitle>안내</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            sectionChange === '매수' ?\r\n              \"성공적으로 화폐를 매수했습니다.\" :\r\n              \"성공적으로 화폐를 매도했습니다.\"\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={completeToggleModal} color=\"primary\">확인</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { PriceDetail };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}