{"ast":null,"code":"var _jsxFileName = \"C:\\\\VS_Project\\\\JeayBit\\\\client\\\\src\\\\components\\\\CryptoList.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilteredData, setStar, setCr_name_selected, setCr_market_selected, setSortedData, setCandle_per_date, setCandle_per_week, setCandle_per_month, setCandle_per_minute, setCr_name, setCr_price, setCr_market, setCr_change, setCr_change_rate, setCr_change_price, setCr_trade_price, setCr_trade_volume, setCr_open_price, setCr_high_price, setCr_low_price, setCandle_per_date_BTC, setClosed_data, setCr_selected, setFavoriteCrypto, setBuyingPrice, setLogInEmail, setLogInUser, setSellingPrice } from \"../store\";\nimport { useEffect, useState } from \"react\";\nimport img_sort from \"../assets/images/sort.png\";\nimport img_sort_up from \"../assets/images/sort-up.png\";\nimport img_sort_down from \"../assets/images/sort-down.png\";\nimport starOn from \"../assets/images/star-on.png\";\nimport starOff from \"../assets/images/star-off.png\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport axios from \"axios\";\nimport useFunction from \"./useFuction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CryptoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const cr_name = useSelector(state => state.cr_name);\n  const cr_price = useSelector(state => state.cr_price);\n  const cr_market = useSelector(state => state.cr_market);\n  const cr_change = useSelector(state => state.cr_change);\n  const cr_change_rate = useSelector(state => state.cr_change_rate);\n  const cr_change_price = useSelector(state => state.cr_change_price);\n  const cr_trade_price = useSelector(state => state.cr_trade_price);\n  const cr_trade_volume = useSelector(state => state.cr_trade_volume);\n  const cr_open_price = useSelector(state => state.cr_open_price);\n  const cr_high_price = useSelector(state => state.cr_high_price);\n  const cr_low_price = useSelector(state => state.cr_low_price);\n  const star = useSelector(state => state.star);\n  const filteredData = useSelector(state => state.filteredData);\n  const cr_market_selected = useSelector(state => state.cr_market_selected);\n\n  // 검색값을 관리하기 위한 state\n  const [search_cr, setSearch_cr] = useState(\"\");\n\n  // 차례로 화폐명, 현재가, 전일대비, 거래대금의 정렬 상태를 관리\n  const [sort_states, setSort_states] = useState([0, 0, 0, 0]);\n\n  // 정렬하려는 목적에 따라 이미지를 변경하기 위해 배열로 생성\n  const sort_images = [img_sort, img_sort_down, img_sort_up];\n  const selectedChartSort = useSelector(state => state.selectedChartSort);\n  const chartSortTime = useSelector(state => state.chartSortTime);\n  const chartSortDate = useSelector(state => state.chartSortDate);\n  const ownedCrypto = useSelector(state => state.ownedCrypto);\n  const isBuying = useSelector(state => state.isBuying);\n  const [selectedCrypto, setSelectedCrypto] = useState();\n  const [userSelectedCrypto, setUserSelectedCrypto] = useState();\n  const logInEmail = useSelector(state => state.logInEmail);\n  const favoriteCrypto = useSelector(state => state.favoriteCrypto);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const [listCategory, setListCategory] = useState(\"원화\");\n\n  // 화폐 가격을 업데이트 하기 전에 해당 state에 담음\n  const [prevData, setPrevData] = useState();\n\n  // 이전 화폐 가격과 현재 화폐 가격을 비교하여 변화가 발생한 화폐를 저장할 state\n  const [differences, setDifferences] = useState([]);\n  const {\n    getOwnedCrypto,\n    getTradeHistory,\n    selectAskingPrice,\n    getCryptoName,\n    selectAskingPrice_unSigned\n  } = useFunction();\n  const getAskingPrice_unSigned = () => {\n    // Object.entries = 객체를 [key, value]쌍의 배열로 변환 \n    let unSignedCrypto = Object.entries(isBuying).filter(([key, value]) => value === true).map(([key, value]) => key);\n\n    // 마켓명으로 요청을 보내야 하기 때문에, 화폐명을 마켓명으로 변경\n    let unSignedMarket = unSignedCrypto.map(name => {\n      let isCorresponed = filteredData.find(isCorresponed => isCorresponed.name === name);\n      return isCorresponed ? isCorresponed.market : null;\n    });\n    for (let i = 0; i < unSignedMarket.length; i++) {\n      if (unSignedMarket[i]) {\n        selectAskingPrice_unSigned(unSignedMarket[i]);\n      }\n    }\n    return unSignedMarket;\n  };\n  useEffect(() => {\n    // const 변수 = setInterval(() => { 콜백함수, 시간 })\n    // fetchData 함수를 1초마다 실행 - 서버에서 받아오는 값을 1초마다 갱신시킴\n    const interval = setInterval(() => {\n      fetchData();\n    }, 1000);\n    initialData();\n\n    // clearInterval(변수)\n    // setInterval이 반환하는 interval ID를 clearInterval 함수로 제거\n    return () => clearInterval(interval);\n  }, []);\n\n  // 별 이미지를 클릭할 때마다 서버로부터 관심 화폐에 대한 정보 받아옴\n  useEffect(() => {\n    if (logInEmail !== '') {\n      getFavoriteCrypto(logInEmail);\n    }\n  }, [isFavorited]);\n\n  // 화면에 보여질 초기 화폐의 차트(비트코인)\n  const initialData = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/get_data/\");\n      dispatch(setCandle_per_date_BTC(response.data.candle_btc_date));\n      dispatch(setCr_market_selected(response.data.market[0]));\n      dispatch(setCr_name_selected(response.data.name[0]));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // 비동기 함수 async를 이용하여 데이터를 받아오는 동안에도 다른 작업을 가능하게 함\n  // = async function () {}\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/get_data/\");\n      dispatch(setCr_name(response.data.name));\n      dispatch(setCr_price(response.data.price));\n      dispatch(setCr_market(response.data.market));\n      dispatch(setCr_change(response.data.change));\n      dispatch(setCr_change_rate(response.data.change_rate));\n      dispatch(setCr_change_price(response.data.change_price));\n      dispatch(setCr_trade_price(response.data.trade_price));\n      dispatch(setCr_trade_volume(response.data.trade_volume));\n      dispatch(setCr_open_price(response.data.open_price));\n      dispatch(setCr_high_price(response.data.high_price));\n      dispatch(setCr_low_price(response.data.low_price));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // 필터링 및 정렬된 데이터를 새로운 배열로 생성 -> setFilteredData로 상태를 업데이트\n  // price = 숫자형, f_price = 문자형 / 숫자형으로 정렬, 문자형으로 출력\n  const updatedData = cr_name.map((name, i) => ({\n    name,\n    price: cr_price[i],\n    market: cr_market[i],\n    change: cr_change[i],\n    change_rate: cr_change_rate[i],\n    change_price: cr_change_price[i],\n    trade_price: cr_trade_price[i],\n    trade_volume: cr_trade_volume[i],\n    open_price: cr_open_price[i],\n    high_price: cr_high_price[i],\n    low_price: cr_low_price[i],\n    star: star[i]\n    // 검색어에 해당하는 데이터를 비교하여 배열을 재생성\n  })).filter(item => item.name.toLowerCase().includes(search_cr.toLowerCase()));\n\n  // useEffect(() => {\n  //   if (filteredData.length === 0 && updatedData.length > 0) {\n  //     dispatch(setFilteredData(updatedData));\n  //   }\n  // });\n\n  console.log();\n\n  // 화폐 가격의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\n  useEffect(() => {\n    setPrevData(cr_price); // state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\n\n    let newDifferences = [];\n\n    // 화폐 리스트가 변할 때마다 변화 이전 값과 현재 값을 비교\n    if (prevData !== undefined) {\n      prevData.forEach((value, index) => {\n        if (value !== cr_price[index]) {\n          newDifferences.push({\n            index: index,\n            oldValue: value,\n            newValue: cr_price[index]\n          });\n        }\n      });\n    }\n    setDifferences(newDifferences);\n\n    // 별도로 선택한 화폐가 있을 때\n    if (selectedCrypto) {\n      const newSelectedCrypto = filteredData.find(crypto => crypto.name === selectedCrypto.name);\n      if (newSelectedCrypto) {\n        setSelectedCrypto(newSelectedCrypto);\n        setUserSelectedCrypto(newSelectedCrypto);\n        dispatch(setCr_selected(newSelectedCrypto));\n      }\n      // 호가 및 체결내역 호출\n      selectClosedPrice(selectedCrypto.market);\n      selectAskingPrice(selectedCrypto.market);\n      getAskingPrice_unSigned();\n    }\n    // 선택한 화폐가 없을 때(비트코인의 정보 출력)\n    else {\n      if (filteredData.length > 0) {\n        const initial_newSelectedCrypto = filteredData[0];\n        if (initial_newSelectedCrypto) {\n          setSelectedCrypto(initial_newSelectedCrypto); // 해당 코드 때문에 '비트코인'이 강제 선택됨. 즉, if문 조건 성립\n          dispatch(setCr_selected(initial_newSelectedCrypto));\n          dispatch(setBuyingPrice(initial_newSelectedCrypto.price));\n          dispatch(setSellingPrice(initial_newSelectedCrypto.price));\n        }\n      }\n    }\n    // 차트에 실시간 데이터를 전달(시간당)\n    if (filteredData.length > 0 && selectedCrypto) {\n      if (selectedCrypto.name && selectedCrypto.market === \"KRW-BTC\") {\n        selectMarket_time(cr_market_selected, chartSortTime);\n      } else {\n        selectMarket_time(cr_market_selected, chartSortTime);\n      }\n    }\n  }, [filteredData]);\n\n  // 리스트에 있는 화폐 검색시 업데이트\n  useEffect(() => {\n    // fetchData();\n    dispatch(setFilteredData(updatedData));\n  }, [search_cr, cr_price]);\n  useEffect(() => {\n    if (cr_market_selected) {\n      selectMarket_date(cr_market_selected);\n      // selectMarket_time(cr_market_selected, chartSortTime);\n    }\n  }, [cr_market_selected, chartSortDate, chartSortTime]);\n\n  // 화면이 첫 렌더링 될 때마다 \n  useEffect(() => {\n    const userItem = localStorage.getItem('user');\n    if (userItem !== null) {\n      const user = JSON.parse(userItem);\n      if (user) {\n        dispatch(setLogInUser(user.username));\n        dispatch(setLogInEmail(user.email));\n        getFavoriteCrypto(user.email);\n        getOwnedCrypto(user.email);\n        getTradeHistory(user.email);\n        getCryptoName(user.email);\n        getAskingPrice_unSigned();\n      }\n    }\n  }, []);\n\n  // 선택된 화폐에 대한 체결내역 호출\n  const selectClosedPrice = market => {\n    (async market => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/closed_price/\", {\n          market: market\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // console.log(\"체결내역 : \", response.data);\n        dispatch(setClosed_data(response.data));\n      } catch (error) {\n        console.error(\"Failed to send data to Django server\", error);\n      }\n    })(market);\n  };\n\n  // 리스트에서 화폐를 선택하면 해당 화폐에 대한 캔들 호출(차트의 분에 따라)\n  const selectMarket_time = (market, minute) => {\n    (async (market, minute) => {\n      if (minute !== '') {\n        try {\n          const response = await axios.post(\"http://127.0.0.1:8000/candle_per_minute/\", {\n            market: market,\n            minute: minute\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          // console.log(chartSortTime, \"당 요청값: \", response.data);\n          dispatch(setCandle_per_minute(response.data));\n        } catch (error) {\n          console.error(\"Failed to send data to Django server\", error);\n        }\n      }\n    })(market, minute);\n  };\n\n  // 리스트에서 화폐를 선택하면 해당 화폐에 대한 캔들 호출(차트의 일자에 따라)\n  const selectMarket_date = market => {\n    if (chartSortDate === \"1일\") {\n      (async market => {\n        try {\n          const response = await axios.post(\"http://127.0.0.1:8000/candle_per_date/\", {\n            market: market\n            // date: tempChartSort,\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n\n          // console.log(\"1일 요청된 값 : \", response.data)\n          dispatch(setCandle_per_date(response.data));\n        } catch (error) {\n          console.error(\"Failed to send data to Django server\", error);\n        }\n      })(market);\n    } else if (chartSortDate === \"1주\") {\n      void (async market => {\n        try {\n          const response = await axios.post(\"http://127.0.0.1:8000/candle_per_week/\", {\n            market: market\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n\n          // console.log(\"1주 요청된 값 : \", response.data)\n          dispatch(setCandle_per_week(response.data));\n        } catch (error) {\n          console.error(\"Failed to send data to Django server\", error);\n        }\n      })(market);\n    } else if (chartSortDate === \"1개월\") {\n      void (async market => {\n        try {\n          const response = await axios.post(\"http://127.0.0.1:8000/candle_per_month/\", {\n            market: market\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n\n          // console.log(\"1개월 요청된 값 : \", response.data)\n          dispatch(setCandle_per_month(response.data));\n        } catch (error) {\n          console.error(\"Failed to send data to Django server\", error);\n        }\n      })(market);\n    }\n  };\n\n  // 별 이미지를 클릭하면 on off\n  const starClick = index => {\n    dispatch(setStar(index));\n    setIsFavorited(!isFavorited);\n  };\n\n  // 로그인한 사용자에 대해 관심 화폐를 업데이트\n  const addCryptoToUser = (email, cryptoName) => {\n    if (logInEmail !== \"\") {\n      (async (email, cryptoName) => {\n        try {\n          axios.post(\"http://127.0.0.1:8000/add_favoriteCrypto_to_user/\", {\n            email: email,\n            crypto_name: cryptoName\n          });\n        } catch (error) {\n          console.log(\"관심 화폐 정보 전송 실패\");\n        }\n      })(email, cryptoName);\n    } else {\n      alert(\"사용자 존재X\");\n    }\n  };\n\n  // 로그인한 사용자에 대한 관심 화폐 정보를 받아옴\n  const getFavoriteCrypto = logInEmail => {\n    (async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/get_user_favoriteCrypto/${logInEmail}/`);\n        console.log(\"반환값-관심화폐 : \", response.data);\n        dispatch(setFavoriteCrypto(response.data));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n\n  // 정렬 이미지 클릭 이벤트\n  const sortClick = index => {\n    // 정렬 이미지 순환\n    setSort_states(prevStates => {\n      const states_copy = [...prevStates];\n      states_copy[index] = (states_copy[index] + 1) % sort_images.length;\n      let sortedData = [...filteredData];\n\n      // 화폐를 전일대비 상승/동결/하락 여부에 따라 구분\n      // 값 자체에 양수, 음수 구분이 되어있는 것이 아니기 때문에 정렬하기 전에 구분을 지어줘야 함\n      let rise_crypto = [];\n      let even_crypto = [];\n      let fall_crypto = [];\n\n      // 상승/동결/하락 여부에 따라 구분하여 새 배열 생성\n      sortedData.map(item => {\n        rise_crypto = sortedData.filter(item => item.change === \"RISE\");\n        even_crypto = sortedData.filter(item => item.change === \"EVEN\");\n        fall_crypto = sortedData.filter(item => item.change === \"FALL\");\n      });\n      switch (index) {\n        // 화폐 이름순 정렬\n        case 0:\n          if (states_copy[index] === 0) {\n            states_copy[index] = 1;\n          }\n          if (states_copy[index] === 1) {\n            sortedData.sort((a, b) => a.name.localeCompare(b.name));\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[1] = 0;\n            sort_states[2] = 0;\n            sort_states[3] = 0;\n          }\n          if (states_copy[index] === 2) {\n            sortedData.sort((a, b) => b.name.localeCompare(a.name));\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[1] = 0;\n            sort_states[2] = 0;\n            sort_states[3] = 0;\n          }\n          break;\n\n        // 화폐 가격순 정렬\n        case 1:\n          if (states_copy[index] === 0) {\n            states_copy[index] = 1;\n          }\n          if (states_copy[index] === 1) {\n            sortedData.sort((a, b) => b.price - a.price);\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[2] = 0;\n            sort_states[3] = 0;\n          }\n          if (states_copy[index] === 2) {\n            sortedData.sort((a, b) => a.price - b.price);\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[2] = 0;\n            sort_states[3] = 0;\n          }\n          break;\n\n        // 화폐 전일대비 변화순 정렬\n        case 2:\n          if (states_copy[index] === 0) {\n            states_copy[index] = 1;\n          }\n          if (states_copy[index] === 1) {\n            rise_crypto.sort((a, b) => b.change_rate - a.change_rate);\n            even_crypto.sort((a, b) => b.change_rate - a.change_rate);\n            fall_crypto.sort((a, b) => a.change_rate - b.change_rate);\n\n            // 새 배열을 원본 배열의 카피본에 병합 - 내림차순이기 때문에 상승, 동결, 하락순으로 병합\n            sortedData = [...rise_crypto, ...even_crypto, ...fall_crypto];\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[1] = 0;\n            sort_states[3] = 0;\n          }\n          if (states_copy[index] === 2) {\n            fall_crypto.sort((a, b) => b.change_rate - a.change_rate);\n            even_crypto.sort((a, b) => b.change_rate - a.change_rate);\n            rise_crypto.sort((a, b) => a.change_rate - b.change_rate);\n\n            // 새 배열을 원본 배열의 카피본에 병합 - 오름차순이기 때문에 하락, 동결, 상승순으로 병합\n            sortedData = [...fall_crypto, ...even_crypto, ...rise_crypto];\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[1] = 0;\n            sort_states[3] = 0;\n          }\n          break;\n\n        // 거래대금순 정렬\n        case 3:\n          if (states_copy[index] === 0) {\n            states_copy[index] = 1;\n          }\n          if (states_copy[index] === 1) {\n            sortedData.sort((a, b) => b.trade_price - a.trade_price);\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[1] = 0;\n            sort_states[2] = 0;\n          }\n          if (states_copy[index] === 2) {\n            sortedData.sort((a, b) => a.trade_price - b.trade_price);\n            // dispatch(setFilteredData(sortedData));\n\n            sort_states[0] = 0;\n            sort_states[1] = 0;\n            sort_states[2] = 0;\n          }\n          break;\n      }\n      dispatch(setFilteredData(sortedData));\n      dispatch(setSortedData(sortedData));\n      return states_copy;\n    });\n  };\n\n  // 각 값들을 테이블에서 클릭한 화폐의 정보로 변경\n  const nameSelect = value => {\n    dispatch(setCr_name_selected(value));\n  };\n  const marketSelect = value => {\n    dispatch(setCr_market_selected(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lightMode\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-search lightMode\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"img-search\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 18 18\",\n        width: \"30\",\n        height: \"30\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M3.5 8a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM8 2a6 6 0 1 0 3.65 10.76l3.58 3.58 1.06-1.06-3.57-3.57A6 6 0 0 0 8 2Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"crypto-search lightMode\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: search_cr,\n        onChange: e => setSearch_cr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${listCategory === \"원화\" ? \"list-category-clicked\" : \"\"}`,\n        onClick: () => setListCategory(\"원화\"),\n        children: \"\\uC6D0\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${listCategory === \"보유\" ? \"list-category-clicked\" : \"\"}`,\n        onClick: () => setListCategory(\"보유\"),\n        children: \"\\uBCF4\\uC720\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${listCategory === \"관심\" ? \"list-category-clicked\" : \"\"}`,\n        onClick: () => setListCategory(\"관심\"),\n        children: \"\\uAD00\\uC2EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"list-table\",\n      id: \"listHead\",\n      children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"col\", {\n          width: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          width: 90\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          width: 90\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          width: 90\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"list-thead lightMode\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"lightMode-title\",\n          children: listCategory !== '보유' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"name\",\n              onClick: () => sortClick(0),\n              children: [\"\\uD654\\uD3D0\\uBA85\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[0]],\n                alt: \"\\uD654\\uD3D0\\uBA85\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"price\",\n              onClick: () => sortClick(1),\n              children: [\"\\uD604\\uC7AC\\uAC00\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[1]],\n                alt: \"\\uD604\\uC7AC\\uAC00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"compare\",\n              onClick: () => sortClick(2),\n              children: [\"\\uC804\\uC77C\\uB300\\uBE44\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[2]],\n                alt: \"\\uC804\\uC77C\\uB300\\uBE44\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"volume\",\n              onClick: () => sortClick(3),\n              children: [\"\\uAC70\\uB798\\uB300\\uAE08\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[3]],\n                alt: \"\\uAC70\\uB798\\uB300\\uAE08\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"name\",\n              id: \"owned-name\",\n              onClick: () => sortClick(0),\n              children: [\"\\uD654\\uD3D0\\uBA85\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[0]],\n                alt: \"\\uD654\\uD3D0\\uBA85\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"price\",\n              id: \"owned-price\",\n              onClick: () => sortClick(1),\n              children: [\"\\uD604\\uC7AC\\uAC00\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[1]],\n                alt: \"\\uD604\\uC7AC\\uAC00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"compare\",\n              id: \"owned-compare\",\n              onClick: () => sortClick(2),\n              children: [\"\\uC804\\uC77C\\uB300\\uBE44\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[2]],\n                alt: \"\\uC804\\uC77C\\uB300\\uBE44\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"volume\",\n              id: \"owned-volume\",\n              onClick: () => sortClick(2),\n              children: [\"\\uBCF4\\uC720\\uC218\\uB7C9\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"sort\",\n                src: sort_images[sort_states[2]],\n                alt: \"\\uBCF4\\uC720\\uC218\\uB7C9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this), listCategory === \"원화\" ? /*#__PURE__*/_jsxDEV(SimpleBar, {\n      className: \"scrollBar-listTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"list-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"scrollable-tbody\",\n          children: filteredData.map((item, i) => {\n            // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\n            let isChanged = differences.some((diff, index) => {\n              return diff.index === i && diff.newValue === item.price;\n            });\n            let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\n            let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\n\n            // DB에서 가져온 관심화폐 목록과 일치하는 행을 찾음\n            let isFavorited = Array.isArray(favoriteCrypto) && favoriteCrypto.some((diff, index) => {\n              return item.name === diff.crypto_name;\n            });\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => {\n                dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\n                dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매도가격'이 업데이트 됨  \n\n                nameSelect(filteredData[i].name);\n                marketSelect(filteredData[i].market);\n                setSelectedCrypto(filteredData[i]);\n                selectMarket_date(filteredData[i].market);\n                selectMarket_time(filteredData[i].market, selectedChartSort);\n                selectAskingPrice(filteredData[i].market);\n                selectClosedPrice(filteredData[i].market);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-name lightMode\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span-star\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => {\n                      starClick(i);\n                      addCryptoToUser(logInEmail, filteredData[i].name);\n                    }\n                    // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\n                    // src={star[i] === 'starOn' ? starOn : starOff}\n                    ,\n                    src: isFavorited ? starOn : starOff,\n                    alt: \"star\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"div-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.market\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 23\n              }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `td-rise ${priceClass_rise}`,\n                  children: item.price.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 25\n              }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `td-fall ${priceClass_fall}`,\n                  children: item.price.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.price.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 25\n              }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"td-rise\",\n                  children: [\"+\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 69\n                  }, this), \" \", item.change_price.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 25\n              }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"td-fall\",\n                  children: [\"-\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 69\n                  }, this), \" \", item.change_price.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [(item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 68\n                  }, this), \" \", item.change_price.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"lightMode\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"td-volume\",\n                  children: [Number(String(Math.floor(item.trade_price)).slice(0, -6)).toLocaleString(), \"\\uBC31\\uB9CC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 11\n    }, this) : listCategory === \"보유\" ? logInEmail !== \"\" ?\n    /*#__PURE__*/\n    // 보유 화폐 영역\n    _jsxDEV(SimpleBar, {\n      className: \"scrollBar-listTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"list-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"scrollable-tbody\",\n          children: filteredData.map((item, i) => {\n            var _Number, _ownedCrypto$find;\n            // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\n            let isChanged = differences.some((diff, index) => {\n              return diff.index === i && diff.newValue === item.price;\n            });\n            let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\n            let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\n\n            // DB에서 가져온 보유화폐 목록과 일치하는 행을 찾음\n            let isOwned = Array.isArray(ownedCrypto) && ownedCrypto.some((diff, index) => {\n              return item.name === diff.crypto_name;\n            });\n\n            // 관심화폐는 시각화 해주기 위해 구분\n            let isFavorited = Array.isArray(favoriteCrypto) && favoriteCrypto.some((diff, index) => {\n              return item.name === diff.crypto_name;\n            });\n\n            // 인덱스 한 번당 소유화폐를 순회시켜서 일치하는 요소를 찾고, 찾지 못한다면 ?를 이용해서 undefined를 반환\n            let ownedQuantity = String((_Number = Number((_ownedCrypto$find = ownedCrypto.find(crypto => item.name === crypto.crypto_name)) === null || _ownedCrypto$find === void 0 ? void 0 : _ownedCrypto$find.quantity)) === null || _Number === void 0 ? void 0 : _Number.toFixed(2));\n            let ownedMarket = item.market.slice(4);\n            let userOwnedQuantity = ownedQuantity + ownedMarket;\n\n            // 전체 문자열의 길이가 12자리를 넘어갈 경우 12자리가 될 때 까지 마지막 인덱스 제거\n            while (userOwnedQuantity.length > 12) {\n              ownedQuantity = ownedQuantity.slice(0, -1);\n              userOwnedQuantity = ownedQuantity + ownedMarket;\n            }\n\n            // 마지막 인덱스가 '.'일 경우 제거\n            if (userOwnedQuantity.endsWith('.')) {\n              userOwnedQuantity = userOwnedQuantity.slice(0, -1);\n            }\n            return (\n              // 보유화폐만 출력\n              isOwned && /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => {\n                  dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\n                  dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매더가격'이 업데이트 됨\n                  nameSelect(filteredData[i].name);\n                  marketSelect(filteredData[i].market);\n                  setSelectedCrypto(filteredData[i]);\n                  selectMarket_date(filteredData[i].market);\n                  selectMarket_time(filteredData[i].market, selectedChartSort);\n                  selectAskingPrice(filteredData[i].market);\n                  selectClosedPrice(filteredData[i].market);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"td-name lightMode\",\n                  id: \"owned-td-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"span-star\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: () => {\n                        starClick(i);\n                        addCryptoToUser(logInEmail, filteredData[i].name);\n                      }\n                      // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\n                      // src={star[i] === 'starOn' ? starOn : starOff}\n                      ,\n                      src: isFavorited ? starOn : starOff,\n                      alt: \"star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 931,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"div-name\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.market\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 29\n                }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-price\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `td-rise ${priceClass_rise}`,\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 33\n                }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-price\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `td-fall ${priceClass_fall}`,\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 958,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-price\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 33\n                }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-changeRate\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-rise\",\n                    children: [\"+\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 77\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 33\n                }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-changeRate\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-fall\",\n                    children: [\"-\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 77\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 977,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-changeRate\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [(item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 985,\n                      columnNumber: 76\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  id: \"owned-td-quantity\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-volume\",\n                    children: userOwnedQuantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 29\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 27\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-notice\",\n      children: \"\\uBCF4\\uC720 \\uD654\\uD3D0\\uB97C \\uD655\\uC778\\uD558\\uC2DC\\uB824\\uBA74 \\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 13\n    }, this) : logInEmail !== \"\" ?\n    /*#__PURE__*/\n    // 관심 화폐 영역\n    _jsxDEV(SimpleBar, {\n      className: \"scrollBar-listTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"list-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"scrollable-tbody\",\n          children: filteredData.map((item, i) => {\n            // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\n            let isChanged = differences.some((diff, index) => {\n              return diff.index === i && diff.newValue === item.price;\n            });\n            let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\n            let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\n\n            // DB에서 가져온 관심화폐 목록과 일치하는 행을 찾음\n            let isFavorited = Array.isArray(favoriteCrypto) && favoriteCrypto.some((diff, index) => {\n              return item.name === diff.crypto_name;\n            });\n            return (\n              // 관심화폐만 출력\n              isFavorited && /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => {\n                  dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\n                  dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매도가격'이 업데이트 됨\n                  nameSelect(filteredData[i].name);\n                  marketSelect(filteredData[i].market);\n                  setSelectedCrypto(filteredData[i]);\n                  selectMarket_date(filteredData[i].market);\n                  selectMarket_time(filteredData[i].market, selectedChartSort);\n                  selectAskingPrice(filteredData[i].market);\n                  selectClosedPrice(filteredData[i].market);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"td-name lightMode\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"span-star\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: () => {\n                        starClick(i);\n                        addCryptoToUser(logInEmail, filteredData[i].name);\n                      }\n                      // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\n                      // src={star[i] === 'starOn' ? starOn : starOff}\n                      ,\n                      src: isFavorited ? starOn : starOff,\n                      alt: \"star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1057,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"div-name\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1069,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.market\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1070,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1068,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 25\n                }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `td-rise ${priceClass_rise}`,\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1077,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 27\n                }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `td-fall ${priceClass_fall}`,\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1083,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.price.toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1089,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1088,\n                  columnNumber: 27\n                }, this), item.change === \"RISE\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-rise\",\n                    children: [\"+\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1095,\n                      columnNumber: 71\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1094,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1093,\n                  columnNumber: 27\n                }, this) : item.change === \"FALL\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-fall\",\n                    children: [\"-\", (item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1102,\n                      columnNumber: 71\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1101,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1100,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [(item.change_rate * 100).toFixed(2), \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1109,\n                      columnNumber: 70\n                    }, this), \" \", item.change_price.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1108,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"lightMode\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"td-volume\",\n                    children: [Number(String(Math.floor(item.trade_price)).slice(0, -6)).toLocaleString(), \"\\uBC31\\uB9CC\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1115,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 23\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-notice\",\n      children: \"\\uAD00\\uC2EC \\uD654\\uD3D0\\uB97C \\uD655\\uC778\\uD558\\uC2DC\\uB824\\uBA74 \\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 601,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoList, \"FzG/ZqacaiNHN3WQzvp0+dMuf/4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFunction];\n});\n_c = CryptoList;\nexport { CryptoList };\nvar _c;\n$RefreshReg$(_c, \"CryptoList\");","map":{"version":3,"names":["useDispatch","useSelector","setFilteredData","setStar","setCr_name_selected","setCr_market_selected","setSortedData","setCandle_per_date","setCandle_per_week","setCandle_per_month","setCandle_per_minute","setCr_name","setCr_price","setCr_market","setCr_change","setCr_change_rate","setCr_change_price","setCr_trade_price","setCr_trade_volume","setCr_open_price","setCr_high_price","setCr_low_price","setCandle_per_date_BTC","setClosed_data","setCr_selected","setFavoriteCrypto","setBuyingPrice","setLogInEmail","setLogInUser","setSellingPrice","useEffect","useState","img_sort","img_sort_up","img_sort_down","starOn","starOff","SimpleBar","axios","useFunction","jsxDEV","_jsxDEV","Fragment","_Fragment","CryptoList","_s","dispatch","cr_name","state","cr_price","cr_market","cr_change","cr_change_rate","cr_change_price","cr_trade_price","cr_trade_volume","cr_open_price","cr_high_price","cr_low_price","star","filteredData","cr_market_selected","search_cr","setSearch_cr","sort_states","setSort_states","sort_images","selectedChartSort","chartSortTime","chartSortDate","ownedCrypto","isBuying","selectedCrypto","setSelectedCrypto","userSelectedCrypto","setUserSelectedCrypto","logInEmail","favoriteCrypto","isFavorited","setIsFavorited","listCategory","setListCategory","prevData","setPrevData","differences","setDifferences","getOwnedCrypto","getTradeHistory","selectAskingPrice","getCryptoName","selectAskingPrice_unSigned","getAskingPrice_unSigned","unSignedCrypto","Object","entries","filter","key","value","map","unSignedMarket","name","isCorresponed","find","market","i","length","interval","setInterval","fetchData","initialData","clearInterval","getFavoriteCrypto","response","get","data","candle_btc_date","error","console","price","change","change_rate","change_price","trade_price","trade_volume","open_price","high_price","low_price","updatedData","item","toLowerCase","includes","log","newDifferences","undefined","forEach","index","push","oldValue","newValue","newSelectedCrypto","crypto","selectClosedPrice","initial_newSelectedCrypto","selectMarket_time","selectMarket_date","userItem","localStorage","getItem","user","JSON","parse","username","email","post","headers","minute","starClick","addCryptoToUser","cryptoName","crypto_name","alert","sortClick","prevStates","states_copy","sortedData","rise_crypto","even_crypto","fall_crypto","sort","a","b","localeCompare","nameSelect","marketSelect","className","children","xmlns","viewBox","width","height","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","id","src","alt","isChanged","some","diff","priceClass_rise","priceClass_fall","Array","isArray","toLocaleString","toFixed","Number","String","Math","floor","slice","_Number","_ownedCrypto$find","isOwned","ownedQuantity","quantity","ownedMarket","userOwnedQuantity","endsWith","_c","$RefreshReg$"],"sources":["C:/VS_Project/JeayBit/client/src/components/CryptoList.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  RootState,\r\n  setFilteredData,\r\n  setStar,\r\n  Crypto,\r\n  setCr_name_selected,\r\n  setCr_market_selected,\r\n  setSortedData,\r\n  setCandle_per_date,\r\n  setCandle_per_week,\r\n  setCandle_per_month,\r\n  setCandle_per_minute,\r\n  setCr_name,\r\n  setCr_price,\r\n  setCr_market,\r\n  setCr_change,\r\n  setCr_change_rate,\r\n  setCr_change_price,\r\n  setCr_trade_price,\r\n  setCr_trade_volume,\r\n  setCr_open_price,\r\n  setCr_high_price,\r\n  setCr_low_price,\r\n  setCandle_per_date_BTC,\r\n  setClosed_data,\r\n  setCr_selected,\r\n  setFavoriteCrypto,\r\n  setBuyingPrice,\r\n  setLogInEmail,\r\n  setLogInUser,\r\n  setSellingPrice,\r\n} from \"../store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport img_sort from \"../assets/images/sort.png\";\r\nimport img_sort_up from \"../assets/images/sort-up.png\";\r\nimport img_sort_down from \"../assets/images/sort-down.png\";\r\nimport starOn from \"../assets/images/star-on.png\";\r\nimport starOff from \"../assets/images/star-off.png\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport axios from \"axios\";\r\nimport useFunction from \"./useFuction\";\r\n\r\nconst CryptoList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cr_name = useSelector((state: RootState) => state.cr_name);\r\n  const cr_price = useSelector((state: RootState) => state.cr_price);\r\n  const cr_market = useSelector((state: RootState) => state.cr_market);\r\n  const cr_change = useSelector((state: RootState) => state.cr_change);\r\n  const cr_change_rate = useSelector((state: RootState) => state.cr_change_rate);\r\n  const cr_change_price = useSelector((state: RootState) => state.cr_change_price);\r\n  const cr_trade_price = useSelector((state: RootState) => state.cr_trade_price);\r\n  const cr_trade_volume = useSelector((state: RootState) => state.cr_trade_volume);\r\n  const cr_open_price = useSelector((state: RootState) => state.cr_open_price);\r\n  const cr_high_price = useSelector((state: RootState) => state.cr_high_price);\r\n  const cr_low_price = useSelector((state: RootState) => state.cr_low_price);\r\n  const star = useSelector((state: RootState) => state.star);\r\n  const filteredData = useSelector((state: RootState) => state.filteredData);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n\r\n  // 검색값을 관리하기 위한 state\r\n  const [search_cr, setSearch_cr] = useState<string>(\"\");\r\n\r\n  // 차례로 화폐명, 현재가, 전일대비, 거래대금의 정렬 상태를 관리\r\n  const [sort_states, setSort_states] = useState<number[]>([0, 0, 0, 0]);\r\n\r\n  // 정렬하려는 목적에 따라 이미지를 변경하기 위해 배열로 생성\r\n  const sort_images = [img_sort, img_sort_down, img_sort_up];\r\n\r\n  const selectedChartSort = useSelector((state: RootState) => state.selectedChartSort);\r\n  const chartSortTime = useSelector((state: RootState) => state.chartSortTime);\r\n  const chartSortDate = useSelector((state: RootState) => state.chartSortDate);\r\n  const ownedCrypto = useSelector((state: RootState) => state.ownedCrypto);\r\n  const isBuying = useSelector((state: RootState) => state.isBuying);\r\n\r\n  const [selectedCrypto, setSelectedCrypto] = useState<any>();\r\n  const [userSelectedCrypto, setUserSelectedCrypto] = useState<any>();\r\n\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n\r\n  const favoriteCrypto = useSelector((state: RootState) => state.favoriteCrypto);\r\n  const [isFavorited, setIsFavorited] = useState<boolean>(false);\r\n  const [listCategory, setListCategory] = useState<string>(\"원화\");\r\n\r\n  // 화폐 가격을 업데이트 하기 전에 해당 state에 담음\r\n  const [prevData, setPrevData] = useState<number[]>();\r\n\r\n  // 이전 화폐 가격과 현재 화폐 가격을 비교하여 변화가 발생한 화폐를 저장할 state\r\n  const [differences, setDifferences] = useState<\r\n    {\r\n      index: number;\r\n      oldValue: number;\r\n      newValue: number;\r\n    }[]\r\n  >([]);\r\n\r\n  const { getOwnedCrypto, getTradeHistory, selectAskingPrice, getCryptoName, selectAskingPrice_unSigned } = useFunction();\r\n\r\n  const getAskingPrice_unSigned = () => {\r\n\r\n    // Object.entries = 객체를 [key, value]쌍의 배열로 변환 \r\n    let unSignedCrypto = Object.entries(isBuying)\r\n      .filter(([key, value]) => value === true)\r\n      .map(([key, value]) => key)\r\n\r\n    // 마켓명으로 요청을 보내야 하기 때문에, 화폐명을 마켓명으로 변경\r\n    let unSignedMarket: (string | null)[] = unSignedCrypto.map((name) => {\r\n      let isCorresponed = filteredData.find(isCorresponed => isCorresponed.name === name)\r\n      return isCorresponed ? isCorresponed.market : null\r\n    })\r\n\r\n    for (let i = 0; i < unSignedMarket.length; i++) {\r\n      if (unSignedMarket[i]) {\r\n        selectAskingPrice_unSigned(unSignedMarket[i] as string);\r\n      }\r\n    }\r\n\r\n    return unSignedMarket;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // const 변수 = setInterval(() => { 콜백함수, 시간 })\r\n    // fetchData 함수를 1초마다 실행 - 서버에서 받아오는 값을 1초마다 갱신시킴\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 1000);\r\n\r\n    initialData();\r\n\r\n    // clearInterval(변수)\r\n    // setInterval이 반환하는 interval ID를 clearInterval 함수로 제거\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // 별 이미지를 클릭할 때마다 서버로부터 관심 화폐에 대한 정보 받아옴\r\n  useEffect(() => {\r\n    if (logInEmail !== '') {\r\n      getFavoriteCrypto(logInEmail);\r\n    }\r\n  }, [isFavorited]);\r\n\r\n  // 화면에 보여질 초기 화폐의 차트(비트코인)\r\n  const initialData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:8000/get_data/\");\r\n      dispatch(setCandle_per_date_BTC(response.data.candle_btc_date));\r\n      dispatch(setCr_market_selected(response.data.market[0]));\r\n      dispatch(setCr_name_selected(response.data.name[0]));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 비동기 함수 async를 이용하여 데이터를 받아오는 동안에도 다른 작업을 가능하게 함\r\n  // = async function () {}\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:8000/get_data/\");\r\n      dispatch(setCr_name(response.data.name));\r\n      dispatch(setCr_price(response.data.price));\r\n      dispatch(setCr_market(response.data.market));\r\n      dispatch(setCr_change(response.data.change));\r\n      dispatch(setCr_change_rate(response.data.change_rate));\r\n      dispatch(setCr_change_price(response.data.change_price));\r\n      dispatch(setCr_trade_price(response.data.trade_price));\r\n      dispatch(setCr_trade_volume(response.data.trade_volume));\r\n      dispatch(setCr_open_price(response.data.open_price));\r\n      dispatch(setCr_high_price(response.data.high_price));\r\n      dispatch(setCr_low_price(response.data.low_price));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // 필터링 및 정렬된 데이터를 새로운 배열로 생성 -> setFilteredData로 상태를 업데이트\r\n  // price = 숫자형, f_price = 문자형 / 숫자형으로 정렬, 문자형으로 출력\r\n  const updatedData = cr_name.map((name, i) => ({\r\n    name,\r\n    price: cr_price[i],\r\n    market: cr_market[i],\r\n    change: cr_change[i],\r\n    change_rate: cr_change_rate[i],\r\n    change_price: cr_change_price[i],\r\n    trade_price: cr_trade_price[i],\r\n    trade_volume: cr_trade_volume[i],\r\n    open_price: cr_open_price[i],\r\n    high_price: cr_high_price[i],\r\n    low_price: cr_low_price[i],\r\n    star: star[i],\r\n    // 검색어에 해당하는 데이터를 비교하여 배열을 재생성\r\n  })).filter((item) =>\r\n    item.name.toLowerCase().includes(search_cr.toLowerCase())\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (filteredData.length === 0 && updatedData.length > 0) {\r\n  //     dispatch(setFilteredData(updatedData));\r\n  //   }\r\n  // });\r\n\r\n  console.log();\r\n\r\n  // 화폐 가격의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\r\n  useEffect(() => {\r\n    setPrevData(cr_price); // state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\r\n\r\n    let newDifferences: {\r\n      index: number;\r\n      oldValue: number;\r\n      newValue: number;\r\n    }[] = [];\r\n\r\n    // 화폐 리스트가 변할 때마다 변화 이전 값과 현재 값을 비교\r\n    if (prevData !== undefined) {\r\n      prevData.forEach((value, index) => {\r\n        if (value !== cr_price[index]) {\r\n          newDifferences.push({\r\n            index: index,\r\n            oldValue: value,\r\n            newValue: cr_price[index],\r\n          });\r\n        }\r\n      });\r\n    }\r\n    setDifferences(newDifferences);\r\n\r\n    // 별도로 선택한 화폐가 있을 때\r\n    if (selectedCrypto) {\r\n      const newSelectedCrypto = filteredData.find(\r\n        (crypto) => crypto.name === selectedCrypto.name\r\n      );\r\n      if (newSelectedCrypto) {\r\n        setSelectedCrypto(newSelectedCrypto);\r\n        setUserSelectedCrypto(newSelectedCrypto);\r\n        dispatch(setCr_selected(newSelectedCrypto));\r\n      }\r\n      // 호가 및 체결내역 호출\r\n      selectClosedPrice(selectedCrypto.market);\r\n      selectAskingPrice(selectedCrypto.market);\r\n\r\n      getAskingPrice_unSigned();\r\n\r\n    }\r\n    // 선택한 화폐가 없을 때(비트코인의 정보 출력)\r\n    else {\r\n      if (filteredData.length > 0) {\r\n        const initial_newSelectedCrypto = filteredData[0];\r\n        if (initial_newSelectedCrypto) {\r\n          setSelectedCrypto(initial_newSelectedCrypto); // 해당 코드 때문에 '비트코인'이 강제 선택됨. 즉, if문 조건 성립\r\n          dispatch(setCr_selected(initial_newSelectedCrypto));\r\n          dispatch(setBuyingPrice(initial_newSelectedCrypto.price));\r\n          dispatch(setSellingPrice(initial_newSelectedCrypto.price));\r\n        }\r\n      }\r\n    }\r\n    // 차트에 실시간 데이터를 전달(시간당)\r\n    if (filteredData.length > 0 && selectedCrypto) {\r\n      if (selectedCrypto.name && selectedCrypto.market === \"KRW-BTC\") {\r\n        selectMarket_time(cr_market_selected, chartSortTime);\r\n      } else {\r\n        selectMarket_time(cr_market_selected, chartSortTime);\r\n      }\r\n    }\r\n  }, [filteredData]);\r\n\r\n  // 리스트에 있는 화폐 검색시 업데이트\r\n  useEffect(() => {\r\n    // fetchData();\r\n    dispatch(setFilteredData(updatedData));\r\n  }, [search_cr, cr_price]);\r\n\r\n  useEffect(() => {\r\n    if (cr_market_selected) {\r\n      selectMarket_date(cr_market_selected);\r\n      // selectMarket_time(cr_market_selected, chartSortTime);\r\n    }\r\n  }, [cr_market_selected, chartSortDate, chartSortTime]);\r\n\r\n  // 화면이 첫 렌더링 될 때마다 \r\n  useEffect(() => {\r\n    const userItem = localStorage.getItem('user');\r\n    if (userItem !== null) {\r\n      const user = JSON.parse(userItem);\r\n      if (user) {\r\n        dispatch(setLogInUser(user.username));\r\n        dispatch(setLogInEmail(user.email));\r\n        getFavoriteCrypto(user.email);\r\n        getOwnedCrypto(user.email);\r\n        getTradeHistory(user.email);\r\n        getCryptoName(user.email);\r\n\r\n        getAskingPrice_unSigned()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // 선택된 화폐에 대한 체결내역 호출\r\n  const selectClosedPrice = (market: string) => {\r\n    (async (market) => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/closed_price/\",\r\n          {\r\n            market: market,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        // console.log(\"체결내역 : \", response.data);\r\n        dispatch(setClosed_data(response.data));\r\n      } catch (error) {\r\n        console.error(\"Failed to send data to Django server\", error);\r\n      }\r\n    })(market);\r\n  };\r\n\r\n\r\n\r\n  // 리스트에서 화폐를 선택하면 해당 화폐에 대한 캔들 호출(차트의 분에 따라)\r\n  const selectMarket_time = (market: string, minute: string) => {\r\n    (async (market, minute) => {\r\n      if (minute !== '') {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://127.0.0.1:8000/candle_per_minute/\",\r\n            {\r\n              market: market,\r\n              minute: minute,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          // console.log(chartSortTime, \"당 요청값: \", response.data);\r\n          dispatch(setCandle_per_minute(response.data));\r\n        } catch (error) {\r\n          console.error(\"Failed to send data to Django server\", error);\r\n        }\r\n      }\r\n    })(market, minute);\r\n  };\r\n\r\n  // 리스트에서 화폐를 선택하면 해당 화폐에 대한 캔들 호출(차트의 일자에 따라)\r\n  const selectMarket_date = (market: string) => {\r\n    if (chartSortDate === \"1일\") {\r\n      (async (market) => {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://127.0.0.1:8000/candle_per_date/\",\r\n            {\r\n              market: market,\r\n              // date: tempChartSort,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n\r\n          // console.log(\"1일 요청된 값 : \", response.data)\r\n          dispatch(setCandle_per_date(response.data));\r\n        } catch (error) {\r\n          console.error(\"Failed to send data to Django server\", error);\r\n        }\r\n      })(market);\r\n    } else if (chartSortDate === \"1주\") {\r\n      void (async (market) => {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://127.0.0.1:8000/candle_per_week/\",\r\n            {\r\n              market: market,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n\r\n          // console.log(\"1주 요청된 값 : \", response.data)\r\n          dispatch(setCandle_per_week(response.data));\r\n        } catch (error) {\r\n          console.error(\"Failed to send data to Django server\", error);\r\n        }\r\n      })(market);\r\n    } else if (chartSortDate === \"1개월\") {\r\n      void (async (market) => {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://127.0.0.1:8000/candle_per_month/\",\r\n            {\r\n              market: market,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n\r\n          // console.log(\"1개월 요청된 값 : \", response.data)\r\n          dispatch(setCandle_per_month(response.data));\r\n        } catch (error) {\r\n          console.error(\"Failed to send data to Django server\", error);\r\n        }\r\n      })(market);\r\n    }\r\n  };\r\n\r\n  // 별 이미지를 클릭하면 on off\r\n  const starClick = (index: number) => {\r\n    dispatch(setStar(index));\r\n    setIsFavorited(!isFavorited);\r\n  };\r\n\r\n  // 로그인한 사용자에 대해 관심 화폐를 업데이트\r\n  const addCryptoToUser = (email: string, cryptoName: string) => {\r\n    if (logInEmail !== \"\") {\r\n      (async (email, cryptoName) => {\r\n        try {\r\n          axios.post(\"http://127.0.0.1:8000/add_favoriteCrypto_to_user/\", {\r\n            email: email,\r\n            crypto_name: cryptoName,\r\n          });\r\n        } catch (error) {\r\n          console.log(\"관심 화폐 정보 전송 실패\");\r\n        }\r\n      })(email, cryptoName);\r\n    } else {\r\n      alert(\"사용자 존재X\");\r\n    }\r\n  };\r\n\r\n  // 로그인한 사용자에 대한 관심 화폐 정보를 받아옴\r\n  const getFavoriteCrypto = (logInEmail: string) => {\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/get_user_favoriteCrypto/${logInEmail}/`\r\n        );\r\n        console.log(\"반환값-관심화폐 : \", response.data);\r\n        dispatch(setFavoriteCrypto(response.data));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  };\r\n\r\n  // 정렬 이미지 클릭 이벤트\r\n  const sortClick = (index: number) => {\r\n    // 정렬 이미지 순환\r\n    setSort_states((prevStates) => {\r\n      const states_copy = [...prevStates];\r\n      states_copy[index] = (states_copy[index] + 1) % sort_images.length;\r\n\r\n      let sortedData = [...filteredData];\r\n\r\n      // 화폐를 전일대비 상승/동결/하락 여부에 따라 구분\r\n      // 값 자체에 양수, 음수 구분이 되어있는 것이 아니기 때문에 정렬하기 전에 구분을 지어줘야 함\r\n      let rise_crypto: Crypto[] = [];\r\n      let even_crypto: Crypto[] = [];\r\n      let fall_crypto: Crypto[] = [];\r\n\r\n      // 상승/동결/하락 여부에 따라 구분하여 새 배열 생성\r\n      sortedData.map((item) => {\r\n        rise_crypto = sortedData.filter((item) => item.change === \"RISE\");\r\n        even_crypto = sortedData.filter((item) => item.change === \"EVEN\");\r\n        fall_crypto = sortedData.filter((item) => item.change === \"FALL\");\r\n      });\r\n\r\n      switch (index) {\r\n        // 화폐 이름순 정렬\r\n        case 0:\r\n          if (states_copy[index] === 0) {\r\n            states_copy[index] = 1;\r\n          }\r\n          if (states_copy[index] === 1) {\r\n            sortedData.sort((a, b) => a.name.localeCompare(b.name));\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[1] = 0;\r\n            sort_states[2] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          if (states_copy[index] === 2) {\r\n            sortedData.sort((a, b) => b.name.localeCompare(a.name));\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[1] = 0;\r\n            sort_states[2] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          break;\r\n\r\n        // 화폐 가격순 정렬\r\n        case 1:\r\n          if (states_copy[index] === 0) {\r\n            states_copy[index] = 1;\r\n          }\r\n          if (states_copy[index] === 1) {\r\n            sortedData.sort((a, b) => b.price - a.price);\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[2] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          if (states_copy[index] === 2) {\r\n            sortedData.sort((a, b) => a.price - b.price);\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[2] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          break;\r\n\r\n        // 화폐 전일대비 변화순 정렬\r\n        case 2:\r\n          if (states_copy[index] === 0) {\r\n            states_copy[index] = 1;\r\n          }\r\n          if (states_copy[index] === 1) {\r\n            rise_crypto.sort((a, b) => b.change_rate - a.change_rate);\r\n            even_crypto.sort((a, b) => b.change_rate - a.change_rate);\r\n            fall_crypto.sort((a, b) => a.change_rate - b.change_rate);\r\n\r\n            // 새 배열을 원본 배열의 카피본에 병합 - 내림차순이기 때문에 상승, 동결, 하락순으로 병합\r\n            sortedData = [...rise_crypto, ...even_crypto, ...fall_crypto];\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[1] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          if (states_copy[index] === 2) {\r\n            fall_crypto.sort((a, b) => b.change_rate - a.change_rate);\r\n            even_crypto.sort((a, b) => b.change_rate - a.change_rate);\r\n            rise_crypto.sort((a, b) => a.change_rate - b.change_rate);\r\n\r\n            // 새 배열을 원본 배열의 카피본에 병합 - 오름차순이기 때문에 하락, 동결, 상승순으로 병합\r\n            sortedData = [...fall_crypto, ...even_crypto, ...rise_crypto];\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[1] = 0;\r\n            sort_states[3] = 0;\r\n          }\r\n          break;\r\n\r\n        // 거래대금순 정렬\r\n        case 3:\r\n          if (states_copy[index] === 0) {\r\n            states_copy[index] = 1;\r\n          }\r\n          if (states_copy[index] === 1) {\r\n            sortedData.sort((a, b) => b.trade_price - a.trade_price);\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[1] = 0;\r\n            sort_states[2] = 0;\r\n          }\r\n          if (states_copy[index] === 2) {\r\n            sortedData.sort((a, b) => a.trade_price - b.trade_price);\r\n            // dispatch(setFilteredData(sortedData));\r\n\r\n            sort_states[0] = 0;\r\n            sort_states[1] = 0;\r\n            sort_states[2] = 0;\r\n          }\r\n          break;\r\n      }\r\n      dispatch(setFilteredData(sortedData));\r\n      dispatch(setSortedData(sortedData));\r\n\r\n      return states_copy;\r\n    });\r\n  };\r\n\r\n  // 각 값들을 테이블에서 클릭한 화폐의 정보로 변경\r\n  const nameSelect = (value: string) => {\r\n    dispatch(setCr_name_selected(value));\r\n  };\r\n  const marketSelect = (value: string) => {\r\n    dispatch(setCr_market_selected(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"lightMode\">\r\n      {/* 검색 공간 */}\r\n      <div className=\"list-search lightMode\">\r\n        {/* <img className=\"img-search\" src={search}></img> */}\r\n        <svg\r\n          className=\"img-search\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 18 18\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M3.5 8a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM8 2a6 6 0 1 0 3.65 10.76l3.58 3.58 1.06-1.06-3.57-3.57A6 6 0 0 0 8 2Z\"\r\n          ></path>\r\n        </svg>\r\n        <input\r\n          type=\"text\"\r\n          className=\"crypto-search lightMode\"\r\n          placeholder=\"검색\"\r\n          value={search_cr}\r\n          onChange={(e) => setSearch_cr(e.target.value)}\r\n        ></input>\r\n      </div>\r\n\r\n      {/* 원화, 보유, 관심 선택란 */}\r\n      <div className=\"list-category\">\r\n        <span\r\n          className={`${listCategory === \"원화\" ? \"list-category-clicked\" : \"\"\r\n            }`}\r\n          onClick={() => setListCategory(\"원화\")}\r\n        >\r\n          원화\r\n        </span>\r\n        <span\r\n          className={`${listCategory === \"보유\" ? \"list-category-clicked\" : \"\"\r\n            }`}\r\n          onClick={() => setListCategory(\"보유\")}\r\n        >\r\n          보유\r\n        </span>\r\n        <span\r\n          className={`${listCategory === \"관심\" ? \"list-category-clicked\" : \"\"\r\n            }`}\r\n          onClick={() => setListCategory(\"관심\")}\r\n        >\r\n          관심\r\n        </span>\r\n      </div>\r\n\r\n      {/* 화폐 정보 테이블 */}\r\n      {/* 스크롤바를 넣기 위해 테이블을 두 개로 구성 */}\r\n      <table className=\"list-table\" id=\"listHead\">\r\n        <colgroup>\r\n          <col width={150} />\r\n          <col width={90} />\r\n          <col width={90} />\r\n          <col width={90} />\r\n        </colgroup>\r\n        <thead className=\"list-thead lightMode\">\r\n          <tr className=\"lightMode-title\">\r\n            {\r\n              listCategory !== '보유' ?\r\n                <>\r\n                  <th className=\"name\" onClick={() => sortClick(0)}>\r\n                    화폐명&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[0]]}\r\n                      alt=\"화폐명\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"price\" onClick={() => sortClick(1)}>\r\n                    현재가&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[1]]}\r\n                      alt=\"현재가\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"compare\" onClick={() => sortClick(2)}>\r\n                    전일대비&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[2]]}\r\n                      alt=\"전일대비\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"volume\" onClick={() => sortClick(3)}>\r\n                    거래대금&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[3]]}\r\n                      alt=\"거래대금\"\r\n                    ></img>\r\n                  </th>\r\n                </> :\r\n                <>\r\n                  <th className=\"name\" id=\"owned-name\" onClick={() => sortClick(0)}>\r\n                    화폐명&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[0]]}\r\n                      alt=\"화폐명\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"price\" id=\"owned-price\" onClick={() => sortClick(1)}>\r\n                    현재가&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[1]]}\r\n                      alt=\"현재가\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"compare\" id=\"owned-compare\" onClick={() => sortClick(2)}>\r\n                    전일대비&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[2]]}\r\n                      alt=\"전일대비\"\r\n                    ></img>\r\n                  </th>\r\n                  <th className=\"volume\" id=\"owned-volume\" onClick={() => sortClick(2)}>\r\n                    보유수량&nbsp;\r\n                    <img\r\n                      className=\"sort\"\r\n                      src={sort_images[sort_states[2]]}\r\n                      alt=\"보유수량\"\r\n                    ></img>\r\n                  </th>\r\n                </>\r\n            }\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      {\r\n        listCategory === \"원화\" ? (\r\n          <SimpleBar className=\"scrollBar-listTable\">\r\n            <table className=\"list-table\">\r\n              <colgroup>\r\n                <col width={150} />\r\n                <col width={90} />\r\n                <col width={90} />\r\n                <col width={90} />\r\n              </colgroup>\r\n              <tbody className=\"scrollable-tbody\">\r\n                {/* 검색값을 반환한 filteredData 함수를 다시 반복문을 이용하여 출력 */}\r\n                {filteredData.map((item, i) => {\r\n\r\n                  // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\r\n                  let isChanged = differences.some((diff, index) => {\r\n                    return diff.index === i && diff.newValue === item.price;\r\n                  });\r\n                  let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\r\n                  let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\r\n\r\n                  // DB에서 가져온 관심화폐 목록과 일치하는 행을 찾음\r\n                  let isFavorited =\r\n                    Array.isArray(favoriteCrypto) &&\r\n                    favoriteCrypto.some((diff, index) => {\r\n                      return item.name === diff.crypto_name;\r\n                    });\r\n\r\n                  return (\r\n                    <tr\r\n                      key={i}\r\n                      onClick={() => {\r\n                        dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\r\n                        dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매도가격'이 업데이트 됨  \r\n\r\n                        nameSelect(filteredData[i].name);\r\n                        marketSelect(filteredData[i].market);\r\n                        setSelectedCrypto(filteredData[i]);\r\n                        selectMarket_date(filteredData[i].market);\r\n                        selectMarket_time(\r\n                          filteredData[i].market,\r\n                          selectedChartSort\r\n                        );\r\n                        selectAskingPrice(filteredData[i].market);\r\n                        selectClosedPrice(filteredData[i].market);\r\n                      }}\r\n                    >\r\n                      <td className=\"td-name lightMode\">\r\n                        <span className=\"span-star\">\r\n                          <img\r\n                            onClick={() => {\r\n                              starClick(i);\r\n                              addCryptoToUser(logInEmail, filteredData[i].name);\r\n                            }}\r\n                            // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\r\n                            // src={star[i] === 'starOn' ? starOn : starOff}\r\n                            src={isFavorited ? starOn : starOff}\r\n                            alt=\"star\"\r\n                          />\r\n                        </span>\r\n                        <div className=\"div-name\">\r\n                          <div>{item.name}</div>\r\n                          <div>{item.market}</div>\r\n                        </div>\r\n                      </td>\r\n\r\n                      {/* 전일 대비 가격이 상승했다면 청색, 하락했다면 적색, 동일하다면 검정색 */}\r\n                      {item.change === \"RISE\" ? (\r\n                        <td className=\"lightMode\">\r\n                          <span className={`td-rise ${priceClass_rise}`}>\r\n                            {item.price.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                      ) : item.change === \"FALL\" ? (\r\n                        <td className=\"lightMode\">\r\n                          <span className={`td-fall ${priceClass_fall}`}>\r\n                            {item.price.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                      ) : (\r\n                        <td className=\"lightMode\">\r\n                          <span>{item.price.toLocaleString()}</span>\r\n                        </td>\r\n                      )}\r\n                      {item.change === \"RISE\" ? (\r\n                        <td className=\"lightMode\">\r\n                          <span className=\"td-rise\">\r\n                            +{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                            {item.change_price.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                      ) : item.change === \"FALL\" ? (\r\n                        <td className=\"lightMode\">\r\n                          <span className=\"td-fall\">\r\n                            -{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                            {item.change_price.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                      ) : (\r\n                        <td className=\"lightMode\">\r\n                          <span>\r\n                            {(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                            {item.change_price.toLocaleString()}\r\n                          </span>\r\n                        </td>\r\n                      )}\r\n                      <td className=\"lightMode\">\r\n                        <span className=\"td-volume\">\r\n                          {Number(\r\n                            String(Math.floor(item.trade_price)).slice(0, -6)\r\n                          ).toLocaleString()}\r\n                          백만\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </SimpleBar>\r\n        ) : listCategory === \"보유\" ? (\r\n          logInEmail !== \"\" ? (\r\n            // 보유 화폐 영역\r\n            <SimpleBar className=\"scrollBar-listTable\">\r\n              <table className=\"list-table\">\r\n                <colgroup>\r\n                  <col width={150} />\r\n                  <col width={90} />\r\n                  <col width={90} />\r\n                  <col width={90} />\r\n                </colgroup>\r\n                <tbody className=\"scrollable-tbody\">\r\n                  {/* 검색값을 반환한 filteredData 함수를 다시 반복문을 이용하여 출력 */}\r\n                  {\r\n                    filteredData.map((item, i) => {\r\n\r\n                      // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\r\n                      let isChanged = differences.some((diff, index) => {\r\n                        return diff.index === i && diff.newValue === item.price;\r\n                      });\r\n                      let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\r\n                      let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\r\n\r\n                      // DB에서 가져온 보유화폐 목록과 일치하는 행을 찾음\r\n                      let isOwned =\r\n                        Array.isArray(ownedCrypto) && ownedCrypto.some((diff, index) => {\r\n                          return item.name === diff.crypto_name;\r\n                        });\r\n\r\n                      // 관심화폐는 시각화 해주기 위해 구분\r\n                      let isFavorited =\r\n                        Array.isArray(favoriteCrypto) && favoriteCrypto.some((diff, index) => {\r\n                          return item.name === diff.crypto_name;\r\n                        });\r\n\r\n\r\n                      // 인덱스 한 번당 소유화폐를 순회시켜서 일치하는 요소를 찾고, 찾지 못한다면 ?를 이용해서 undefined를 반환\r\n                      let ownedQuantity = String(Number(ownedCrypto.find((crypto) => item.name === crypto.crypto_name)?.quantity)?.toFixed(2))\r\n\r\n                      let ownedMarket = (item.market).slice(4)\r\n\r\n                      let userOwnedQuantity = ownedQuantity + ownedMarket;\r\n\r\n                      // 전체 문자열의 길이가 12자리를 넘어갈 경우 12자리가 될 때 까지 마지막 인덱스 제거\r\n                      while (userOwnedQuantity.length > 12) {\r\n                        ownedQuantity = ownedQuantity.slice(0, -1);\r\n                        userOwnedQuantity = ownedQuantity + ownedMarket;\r\n                      }\r\n\r\n                      // 마지막 인덱스가 '.'일 경우 제거\r\n                      if (userOwnedQuantity.endsWith('.')) {\r\n                        userOwnedQuantity = userOwnedQuantity.slice(0, -1);\r\n                      }\r\n\r\n                      return (\r\n                        // 보유화폐만 출력\r\n                        isOwned && (\r\n                          <tr\r\n                            key={i}\r\n                            onClick={() => {\r\n                              dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\r\n                              dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매더가격'이 업데이트 됨\r\n                              nameSelect(filteredData[i].name);\r\n                              marketSelect(filteredData[i].market);\r\n                              setSelectedCrypto(filteredData[i]);\r\n                              selectMarket_date(filteredData[i].market);\r\n                              selectMarket_time(\r\n                                filteredData[i].market,\r\n                                selectedChartSort\r\n                              );\r\n                              selectAskingPrice(filteredData[i].market);\r\n                              selectClosedPrice(filteredData[i].market);\r\n                            }}>\r\n                            <td className=\"td-name lightMode\" id=\"owned-td-name\">\r\n                              <span className=\"span-star\">\r\n                                <img\r\n                                  onClick={() => {\r\n                                    starClick(i);\r\n                                    addCryptoToUser(logInEmail, filteredData[i].name);\r\n                                  }}\r\n                                  // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\r\n                                  // src={star[i] === 'starOn' ? starOn : starOff}\r\n                                  src={isFavorited ? starOn : starOff}\r\n                                  alt=\"star\"\r\n                                />\r\n                              </span>\r\n                              <div className=\"div-name\">\r\n                                <div>{item.name}</div>\r\n                                <div>{item.market}</div>\r\n                              </div>\r\n                            </td>\r\n\r\n                            {/* 전일 대비 가격이 상승했다면 청색, 하락했다면 적색, 동일하다면 검정색 */}\r\n                            {\r\n                              item.change === \"RISE\" ? (\r\n                                <td className=\"lightMode\" id=\"owned-td-price\">\r\n                                  <span className={`td-rise ${priceClass_rise}`}>\r\n                                    {item.price.toLocaleString()}\r\n                                  </span>\r\n                                </td>\r\n                              ) : item.change === \"FALL\" ? (\r\n                                <td className=\"lightMode\" id=\"owned-td-price\">\r\n                                  <span className={`td-fall ${priceClass_fall}`}>\r\n                                    {item.price.toLocaleString()}\r\n                                  </span>\r\n                                </td>\r\n                              ) : (\r\n                                <td className=\"lightMode\" id=\"owned-td-price\">\r\n                                  <span>{item.price.toLocaleString()}</span>\r\n                                </td>\r\n                              )}\r\n                            {\r\n                              item.change === \"RISE\" ? (\r\n                                <td className=\"lightMode\" id=\"owned-td-changeRate\">\r\n                                  <span className=\"td-rise\">\r\n                                    +{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                                    {item.change_price.toLocaleString()}\r\n                                  </span>\r\n                                </td>\r\n                              ) : item.change === \"FALL\" ? (\r\n                                <td className=\"lightMode\" id=\"owned-td-changeRate\">\r\n                                  <span className=\"td-fall\">\r\n                                    -{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                                    {item.change_price.toLocaleString()}\r\n                                  </span>\r\n                                </td>\r\n                              ) : (\r\n                                <td className=\"lightMode\" id=\"owned-td-changeRate\">\r\n                                  <span>\r\n                                    {(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                                    {item.change_price.toLocaleString()}\r\n                                  </span>\r\n                                </td>\r\n                              )}\r\n                            <td className=\"lightMode\" id=\"owned-td-quantity\">\r\n                              <span className=\"td-volume\">\r\n                                {userOwnedQuantity}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n            </SimpleBar>\r\n          ) : (\r\n            <div className=\"crypto-notice\">\r\n              보유 화폐를 확인하시려면 로그인 해주세요.\r\n            </div>\r\n          )\r\n        ) : logInEmail !== \"\" ? (\r\n          // 관심 화폐 영역\r\n          <SimpleBar className=\"scrollBar-listTable\">\r\n            <table className=\"list-table\">\r\n              <colgroup>\r\n                <col width={150} />\r\n                <col width={90} />\r\n                <col width={90} />\r\n                <col width={90} />\r\n              </colgroup>\r\n              <tbody className=\"scrollable-tbody\">\r\n                {/* 검색값을 반환한 filteredData 함수를 다시 반복문을 이용하여 출력 */}\r\n                {filteredData.map((item, i) => {\r\n\r\n                  // 가격의 변화가 생긴 state를 테이블에서 찾아 해당 td 시각화\r\n                  let isChanged = differences.some((diff, index) => {\r\n                    return diff.index === i && diff.newValue === item.price;\r\n                  });\r\n                  let priceClass_rise = isChanged ? \"change-price-rise\" : \"\";\r\n                  let priceClass_fall = isChanged ? \"change-price-fall\" : \"\";\r\n\r\n                  // DB에서 가져온 관심화폐 목록과 일치하는 행을 찾음\r\n                  let isFavorited =\r\n                    Array.isArray(favoriteCrypto) &&\r\n                    favoriteCrypto.some((diff, index) => {\r\n                      return item.name === diff.crypto_name;\r\n                    });\r\n\r\n                  return (\r\n                    // 관심화폐만 출력\r\n                    isFavorited && (\r\n                      <tr\r\n                        key={i}\r\n                        onClick={() => {\r\n                          dispatch(setBuyingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매수가격'이 업데이트 됨\r\n                          dispatch(setSellingPrice(filteredData[i].price)); // 특정 화폐를 클릭하면 해당 화폐의 값으로 '매도가격'이 업데이트 됨\r\n                          nameSelect(filteredData[i].name);\r\n                          marketSelect(filteredData[i].market);\r\n                          setSelectedCrypto(filteredData[i]);\r\n                          selectMarket_date(filteredData[i].market);\r\n                          selectMarket_time(\r\n                            filteredData[i].market,\r\n                            selectedChartSort\r\n                          );\r\n                          selectAskingPrice(filteredData[i].market);\r\n                          selectClosedPrice(filteredData[i].market);\r\n                        }}\r\n                      >\r\n                        <td className=\"td-name lightMode\">\r\n                          <span className=\"span-star\">\r\n                            <img\r\n                              onClick={() => {\r\n                                starClick(i);\r\n                                addCryptoToUser(logInEmail, filteredData[i].name);\r\n                              }}\r\n                              // 최초 star[i]의 상태는 'starOn'일 수가 없으므로 반드시 starOff 출력\r\n                              // src={star[i] === 'starOn' ? starOn : starOff}\r\n                              src={isFavorited ? starOn : starOff}\r\n                              alt=\"star\"\r\n                            />\r\n                          </span>\r\n                          <div className=\"div-name\">\r\n                            <div>{item.name}</div>\r\n                            <div>{item.market}</div>\r\n                          </div>\r\n                        </td>\r\n\r\n                        {/* 전일 대비 가격이 상승했다면 청색, 하락했다면 적색, 동일하다면 검정색 */}\r\n                        {item.change === \"RISE\" ? (\r\n                          <td className=\"lightMode\">\r\n                            <span className={`td-rise ${priceClass_rise}`}>\r\n                              {item.price.toLocaleString()}\r\n                            </span>\r\n                          </td>\r\n                        ) : item.change === \"FALL\" ? (\r\n                          <td className=\"lightMode\">\r\n                            <span className={`td-fall ${priceClass_fall}`}>\r\n                              {item.price.toLocaleString()}\r\n                            </span>\r\n                          </td>\r\n                        ) : (\r\n                          <td className=\"lightMode\">\r\n                            <span>{item.price.toLocaleString()}</span>\r\n                          </td>\r\n                        )}\r\n                        {item.change === \"RISE\" ? (\r\n                          <td className=\"lightMode\">\r\n                            <span className=\"td-rise\">\r\n                              +{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                              {item.change_price.toLocaleString()}\r\n                            </span>\r\n                          </td>\r\n                        ) : item.change === \"FALL\" ? (\r\n                          <td className=\"lightMode\">\r\n                            <span className=\"td-fall\">\r\n                              -{(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                              {item.change_price.toLocaleString()}\r\n                            </span>\r\n                          </td>\r\n                        ) : (\r\n                          <td className=\"lightMode\">\r\n                            <span>\r\n                              {(item.change_rate * 100).toFixed(2)}% <br />{\" \"}\r\n                              {item.change_price.toLocaleString()}\r\n                            </span>\r\n                          </td>\r\n                        )}\r\n                        <td className=\"lightMode\">\r\n                          <span className=\"td-volume\">\r\n                            {Number(\r\n                              String(Math.floor(item.trade_price)).slice(0, -6)\r\n                            ).toLocaleString()}\r\n                            백만\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </SimpleBar>\r\n        ) : (\r\n          <div className=\"crypto-notice\">\r\n            관심 화폐를 확인하시려면 로그인 해주세요.\r\n          </div>\r\n        )\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport { CryptoList };\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAEEC,eAAe,EACfC,OAAO,EAEPC,mBAAmB,EACnBC,qBAAqB,EACrBC,aAAa,EACbC,kBAAkB,EAClBC,kBAAkB,EAClBC,mBAAmB,EACnBC,oBAAoB,EACpBC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,iBAAiB,EACjBC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBC,gBAAgB,EAChBC,eAAe,EACfC,sBAAsB,EACtBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,aAAa,EACbC,YAAY,EACZC,eAAe,QACV,UAAU;AACjB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAMC,QAAQ,GAAG9C,WAAW,CAAC,CAAC;EAE9B,MAAM+C,OAAO,GAAG9C,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACD,OAAO,CAAC;EAChE,MAAME,QAAQ,GAAGhD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAClE,MAAMC,SAAS,GAAGjD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACE,SAAS,CAAC;EACpE,MAAMC,SAAS,GAAGlD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACG,SAAS,CAAC;EACpE,MAAMC,cAAc,GAAGnD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACI,cAAc,CAAC;EAC9E,MAAMC,eAAe,GAAGpD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACK,eAAe,CAAC;EAChF,MAAMC,cAAc,GAAGrD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACM,cAAc,CAAC;EAC9E,MAAMC,eAAe,GAAGtD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACO,eAAe,CAAC;EAChF,MAAMC,aAAa,GAAGvD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACQ,aAAa,CAAC;EAC5E,MAAMC,aAAa,GAAGxD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACS,aAAa,CAAC;EAC5E,MAAMC,YAAY,GAAGzD,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACU,YAAY,CAAC;EAC1E,MAAMC,IAAI,GAAG1D,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACW,IAAI,CAAC;EAC1D,MAAMC,YAAY,GAAG3D,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACY,YAAY,CAAC;EAC1E,MAAMC,kBAAkB,GAAG5D,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACa,kBAAkB,CAAC;;EAEtF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAS,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtE;EACA,MAAMmC,WAAW,GAAG,CAAClC,QAAQ,EAAEE,aAAa,EAAED,WAAW,CAAC;EAE1D,MAAMkC,iBAAiB,GAAGlE,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACmB,iBAAiB,CAAC;EACpF,MAAMC,aAAa,GAAGnE,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACoB,aAAa,CAAC;EAC5E,MAAMC,aAAa,GAAGpE,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACqB,aAAa,CAAC;EAC5E,MAAMC,WAAW,GAAGrE,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACsB,WAAW,CAAC;EACxE,MAAMC,QAAQ,GAAGtE,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAACuB,QAAQ,CAAC;EAElE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAM,CAAC;EAC3D,MAAM,CAAC2C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5C,QAAQ,CAAM,CAAC;EAEnE,MAAM6C,UAAU,GAAG3E,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAAC4B,UAAU,CAAC;EAEtE,MAAMC,cAAc,GAAG5E,WAAW,CAAE+C,KAAgB,IAAKA,KAAK,CAAC6B,cAAc,CAAC;EAC9E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAS,IAAI,CAAC;;EAE9D;EACA,MAAM,CAACmD,QAAQ,EAAEC,WAAW,CAAC,GAAGpD,QAAQ,CAAW,CAAC;;EAEpD;EACA,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAM5C,EAAE,CAAC;EAEL,MAAM;IAAEuD,cAAc;IAAEC,eAAe;IAAEC,iBAAiB;IAAEC,aAAa;IAAEC;EAA2B,CAAC,GAAGnD,WAAW,CAAC,CAAC;EAEvH,MAAMoD,uBAAuB,GAAGA,CAAA,KAAM;IAEpC;IACA,IAAIC,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACvB,QAAQ,CAAC,CAC1CwB,MAAM,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK,IAAI,CAAC,CACxCC,GAAG,CAAC,CAAC,CAACF,GAAG,EAAEC,KAAK,CAAC,KAAKD,GAAG,CAAC;;IAE7B;IACA,IAAIG,cAAiC,GAAGP,cAAc,CAACM,GAAG,CAAEE,IAAI,IAAK;MACnE,IAAIC,aAAa,GAAGzC,YAAY,CAAC0C,IAAI,CAACD,aAAa,IAAIA,aAAa,CAACD,IAAI,KAAKA,IAAI,CAAC;MACnF,OAAOC,aAAa,GAAGA,aAAa,CAACE,MAAM,GAAG,IAAI;IACpD,CAAC,CAAC;IAEF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAIL,cAAc,CAACK,CAAC,CAAC,EAAE;QACrBd,0BAA0B,CAACS,cAAc,CAACK,CAAC,CAAW,CAAC;MACzD;IACF;IAEA,OAAOL,cAAc;EACvB,CAAC;EAEDrE,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAM4E,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,IAAI,CAAC;IAERC,WAAW,CAAC,CAAC;;IAEb;IACA;IACA,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5E,SAAS,CAAC,MAAM;IACd,IAAI8C,UAAU,KAAK,EAAE,EAAE;MACrBmC,iBAAiB,CAACnC,UAAU,CAAC;IAC/B;EACF,CAAC,EAAE,CAACE,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAM+B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAM1E,KAAK,CAAC2E,GAAG,CAAC,iCAAiC,CAAC;MACnEnE,QAAQ,CAACxB,sBAAsB,CAAC0F,QAAQ,CAACE,IAAI,CAACC,eAAe,CAAC,CAAC;MAC/DrE,QAAQ,CAACzC,qBAAqB,CAAC2G,QAAQ,CAACE,IAAI,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACxDzD,QAAQ,CAAC1C,mBAAmB,CAAC4G,QAAQ,CAACE,IAAI,CAACd,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA;EACA,MAAMR,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAM1E,KAAK,CAAC2E,GAAG,CAAC,iCAAiC,CAAC;MACnEnE,QAAQ,CAACnC,UAAU,CAACqG,QAAQ,CAACE,IAAI,CAACd,IAAI,CAAC,CAAC;MACxCtD,QAAQ,CAAClC,WAAW,CAACoG,QAAQ,CAACE,IAAI,CAACI,KAAK,CAAC,CAAC;MAC1CxE,QAAQ,CAACjC,YAAY,CAACmG,QAAQ,CAACE,IAAI,CAACX,MAAM,CAAC,CAAC;MAC5CzD,QAAQ,CAAChC,YAAY,CAACkG,QAAQ,CAACE,IAAI,CAACK,MAAM,CAAC,CAAC;MAC5CzE,QAAQ,CAAC/B,iBAAiB,CAACiG,QAAQ,CAACE,IAAI,CAACM,WAAW,CAAC,CAAC;MACtD1E,QAAQ,CAAC9B,kBAAkB,CAACgG,QAAQ,CAACE,IAAI,CAACO,YAAY,CAAC,CAAC;MACxD3E,QAAQ,CAAC7B,iBAAiB,CAAC+F,QAAQ,CAACE,IAAI,CAACQ,WAAW,CAAC,CAAC;MACtD5E,QAAQ,CAAC5B,kBAAkB,CAAC8F,QAAQ,CAACE,IAAI,CAACS,YAAY,CAAC,CAAC;MACxD7E,QAAQ,CAAC3B,gBAAgB,CAAC6F,QAAQ,CAACE,IAAI,CAACU,UAAU,CAAC,CAAC;MACpD9E,QAAQ,CAAC1B,gBAAgB,CAAC4F,QAAQ,CAACE,IAAI,CAACW,UAAU,CAAC,CAAC;MACpD/E,QAAQ,CAACzB,eAAe,CAAC2F,QAAQ,CAACE,IAAI,CAACY,SAAS,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA;EACA,MAAMW,WAAW,GAAGhF,OAAO,CAACmD,GAAG,CAAC,CAACE,IAAI,EAAEI,CAAC,MAAM;IAC5CJ,IAAI;IACJkB,KAAK,EAAErE,QAAQ,CAACuD,CAAC,CAAC;IAClBD,MAAM,EAAErD,SAAS,CAACsD,CAAC,CAAC;IACpBe,MAAM,EAAEpE,SAAS,CAACqD,CAAC,CAAC;IACpBgB,WAAW,EAAEpE,cAAc,CAACoD,CAAC,CAAC;IAC9BiB,YAAY,EAAEpE,eAAe,CAACmD,CAAC,CAAC;IAChCkB,WAAW,EAAEpE,cAAc,CAACkD,CAAC,CAAC;IAC9BmB,YAAY,EAAEpE,eAAe,CAACiD,CAAC,CAAC;IAChCoB,UAAU,EAAEpE,aAAa,CAACgD,CAAC,CAAC;IAC5BqB,UAAU,EAAEpE,aAAa,CAAC+C,CAAC,CAAC;IAC5BsB,SAAS,EAAEpE,YAAY,CAAC8C,CAAC,CAAC;IAC1B7C,IAAI,EAAEA,IAAI,CAAC6C,CAAC;IACZ;EACF,CAAC,CAAC,CAAC,CAACT,MAAM,CAAEiC,IAAI,IACdA,IAAI,CAAC5B,IAAI,CAAC6B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpE,SAAS,CAACmE,WAAW,CAAC,CAAC,CAC1D,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEAZ,OAAO,CAACc,GAAG,CAAC,CAAC;;EAEb;EACArG,SAAS,CAAC,MAAM;IACdqD,WAAW,CAAClC,QAAQ,CAAC,CAAC,CAAC;;IAEvB,IAAImF,cAID,GAAG,EAAE;;IAER;IACA,IAAIlD,QAAQ,KAAKmD,SAAS,EAAE;MAC1BnD,QAAQ,CAACoD,OAAO,CAAC,CAACrC,KAAK,EAAEsC,KAAK,KAAK;QACjC,IAAItC,KAAK,KAAKhD,QAAQ,CAACsF,KAAK,CAAC,EAAE;UAC7BH,cAAc,CAACI,IAAI,CAAC;YAClBD,KAAK,EAAEA,KAAK;YACZE,QAAQ,EAAExC,KAAK;YACfyC,QAAQ,EAAEzF,QAAQ,CAACsF,KAAK;UAC1B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IACAlD,cAAc,CAAC+C,cAAc,CAAC;;IAE9B;IACA,IAAI5D,cAAc,EAAE;MAClB,MAAMmE,iBAAiB,GAAG/E,YAAY,CAAC0C,IAAI,CACxCsC,MAAM,IAAKA,MAAM,CAACxC,IAAI,KAAK5B,cAAc,CAAC4B,IAC7C,CAAC;MACD,IAAIuC,iBAAiB,EAAE;QACrBlE,iBAAiB,CAACkE,iBAAiB,CAAC;QACpChE,qBAAqB,CAACgE,iBAAiB,CAAC;QACxC7F,QAAQ,CAACtB,cAAc,CAACmH,iBAAiB,CAAC,CAAC;MAC7C;MACA;MACAE,iBAAiB,CAACrE,cAAc,CAAC+B,MAAM,CAAC;MACxCf,iBAAiB,CAAChB,cAAc,CAAC+B,MAAM,CAAC;MAExCZ,uBAAuB,CAAC,CAAC;IAE3B;IACA;IAAA,KACK;MACH,IAAI/B,YAAY,CAAC6C,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMqC,yBAAyB,GAAGlF,YAAY,CAAC,CAAC,CAAC;QACjD,IAAIkF,yBAAyB,EAAE;UAC7BrE,iBAAiB,CAACqE,yBAAyB,CAAC,CAAC,CAAC;UAC9ChG,QAAQ,CAACtB,cAAc,CAACsH,yBAAyB,CAAC,CAAC;UACnDhG,QAAQ,CAACpB,cAAc,CAACoH,yBAAyB,CAACxB,KAAK,CAAC,CAAC;UACzDxE,QAAQ,CAACjB,eAAe,CAACiH,yBAAyB,CAACxB,KAAK,CAAC,CAAC;QAC5D;MACF;IACF;IACA;IACA,IAAI1D,YAAY,CAAC6C,MAAM,GAAG,CAAC,IAAIjC,cAAc,EAAE;MAC7C,IAAIA,cAAc,CAAC4B,IAAI,IAAI5B,cAAc,CAAC+B,MAAM,KAAK,SAAS,EAAE;QAC9DwC,iBAAiB,CAAClF,kBAAkB,EAAEO,aAAa,CAAC;MACtD,CAAC,MAAM;QACL2E,iBAAiB,CAAClF,kBAAkB,EAAEO,aAAa,CAAC;MACtD;IACF;EACF,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;;EAElB;EACA9B,SAAS,CAAC,MAAM;IACd;IACAgB,QAAQ,CAAC5C,eAAe,CAAC6H,WAAW,CAAC,CAAC;EACxC,CAAC,EAAE,CAACjE,SAAS,EAAEb,QAAQ,CAAC,CAAC;EAEzBnB,SAAS,CAAC,MAAM;IACd,IAAI+B,kBAAkB,EAAE;MACtBmF,iBAAiB,CAACnF,kBAAkB,CAAC;MACrC;IACF;EACF,CAAC,EAAE,CAACA,kBAAkB,EAAEQ,aAAa,EAAED,aAAa,CAAC,CAAC;;EAEtD;EACAtC,SAAS,CAAC,MAAM;IACd,MAAMmH,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,KAAK,IAAI,EAAE;MACrB,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MACjC,IAAIG,IAAI,EAAE;QACRtG,QAAQ,CAAClB,YAAY,CAACwH,IAAI,CAACG,QAAQ,CAAC,CAAC;QACrCzG,QAAQ,CAACnB,aAAa,CAACyH,IAAI,CAACI,KAAK,CAAC,CAAC;QACnCzC,iBAAiB,CAACqC,IAAI,CAACI,KAAK,CAAC;QAC7BlE,cAAc,CAAC8D,IAAI,CAACI,KAAK,CAAC;QAC1BjE,eAAe,CAAC6D,IAAI,CAACI,KAAK,CAAC;QAC3B/D,aAAa,CAAC2D,IAAI,CAACI,KAAK,CAAC;QAEzB7D,uBAAuB,CAAC,CAAC;MAC3B;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkD,iBAAiB,GAAItC,MAAc,IAAK;IAC5C,CAAC,MAAOA,MAAM,IAAK;MACjB,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAM1E,KAAK,CAACmH,IAAI,CAC/B,qCAAqC,EACrC;UACElD,MAAM,EAAEA;QACV,CAAC,EACD;UACEmD,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;;QAED;QACA5G,QAAQ,CAACvB,cAAc,CAACyF,QAAQ,CAACE,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC,EAAEb,MAAM,CAAC;EACZ,CAAC;;EAID;EACA,MAAMwC,iBAAiB,GAAGA,CAACxC,MAAc,EAAEoD,MAAc,KAAK;IAC5D,CAAC,OAAOpD,MAAM,EAAEoD,MAAM,KAAK;MACzB,IAAIA,MAAM,KAAK,EAAE,EAAE;QACjB,IAAI;UACF,MAAM3C,QAAQ,GAAG,MAAM1E,KAAK,CAACmH,IAAI,CAC/B,0CAA0C,EAC1C;YACElD,MAAM,EAAEA,MAAM;YACdoD,MAAM,EAAEA;UACV,CAAC,EACD;YACED,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CACF,CAAC;UACD;UACA5G,QAAQ,CAACpC,oBAAoB,CAACsG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF;IACF,CAAC,EAAEb,MAAM,EAAEoD,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,MAAMX,iBAAiB,GAAIzC,MAAc,IAAK;IAC5C,IAAIlC,aAAa,KAAK,IAAI,EAAE;MAC1B,CAAC,MAAOkC,MAAM,IAAK;QACjB,IAAI;UACF,MAAMS,QAAQ,GAAG,MAAM1E,KAAK,CAACmH,IAAI,CAC/B,wCAAwC,EACxC;YACElD,MAAM,EAAEA;YACR;UACF,CAAC,EACD;YACEmD,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CACF,CAAC;;UAED;UACA5G,QAAQ,CAACvC,kBAAkB,CAACyG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,CAAC,EAAEb,MAAM,CAAC;IACZ,CAAC,MAAM,IAAIlC,aAAa,KAAK,IAAI,EAAE;MACjC,KAAK,CAAC,MAAOkC,MAAM,IAAK;QACtB,IAAI;UACF,MAAMS,QAAQ,GAAG,MAAM1E,KAAK,CAACmH,IAAI,CAC/B,wCAAwC,EACxC;YACElD,MAAM,EAAEA;UACV,CAAC,EACD;YACEmD,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CACF,CAAC;;UAED;UACA5G,QAAQ,CAACtC,kBAAkB,CAACwG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,CAAC,EAAEb,MAAM,CAAC;IACZ,CAAC,MAAM,IAAIlC,aAAa,KAAK,KAAK,EAAE;MAClC,KAAK,CAAC,MAAOkC,MAAM,IAAK;QACtB,IAAI;UACF,MAAMS,QAAQ,GAAG,MAAM1E,KAAK,CAACmH,IAAI,CAC/B,yCAAyC,EACzC;YACElD,MAAM,EAAEA;UACV,CAAC,EACD;YACEmD,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CACF,CAAC;;UAED;UACA5G,QAAQ,CAACrC,mBAAmB,CAACuG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC9D;MACF,CAAC,EAAEb,MAAM,CAAC;IACZ;EACF,CAAC;;EAED;EACA,MAAMqD,SAAS,GAAIrB,KAAa,IAAK;IACnCzF,QAAQ,CAAC3C,OAAO,CAACoI,KAAK,CAAC,CAAC;IACxBxD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM+E,eAAe,GAAGA,CAACL,KAAa,EAAEM,UAAkB,KAAK;IAC7D,IAAIlF,UAAU,KAAK,EAAE,EAAE;MACrB,CAAC,OAAO4E,KAAK,EAAEM,UAAU,KAAK;QAC5B,IAAI;UACFxH,KAAK,CAACmH,IAAI,CAAC,mDAAmD,EAAE;YAC9DD,KAAK,EAAEA,KAAK;YACZO,WAAW,EAAED;UACf,CAAC,CAAC;QACJ,CAAC,CAAC,OAAO1C,KAAK,EAAE;UACdC,OAAO,CAACc,GAAG,CAAC,gBAAgB,CAAC;QAC/B;MACF,CAAC,EAAEqB,KAAK,EAAEM,UAAU,CAAC;IACvB,CAAC,MAAM;MACLE,KAAK,CAAC,SAAS,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMjD,iBAAiB,GAAInC,UAAkB,IAAK;IAChD,CAAC,YAAY;MACX,IAAI;QACF,MAAMoC,QAAQ,GAAG,MAAM1E,KAAK,CAAC2E,GAAG,CAC7B,iDAAgDrC,UAAW,GAC9D,CAAC;QACDyC,OAAO,CAACc,GAAG,CAAC,aAAa,EAAEnB,QAAQ,CAACE,IAAI,CAAC;QACzCpE,QAAQ,CAACrB,iBAAiB,CAACuF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC5C,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACc,GAAG,CAACf,KAAK,CAAC;MACpB;IACF,CAAC,EAAE,CAAC;EACN,CAAC;;EAED;EACA,MAAM6C,SAAS,GAAI1B,KAAa,IAAK;IACnC;IACAtE,cAAc,CAAEiG,UAAU,IAAK;MAC7B,MAAMC,WAAW,GAAG,CAAC,GAAGD,UAAU,CAAC;MACnCC,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC4B,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC,IAAIrE,WAAW,CAACuC,MAAM;MAElE,IAAI2D,UAAU,GAAG,CAAC,GAAGxG,YAAY,CAAC;;MAElC;MACA;MACA,IAAIyG,WAAqB,GAAG,EAAE;MAC9B,IAAIC,WAAqB,GAAG,EAAE;MAC9B,IAAIC,WAAqB,GAAG,EAAE;;MAE9B;MACAH,UAAU,CAAClE,GAAG,CAAE8B,IAAI,IAAK;QACvBqC,WAAW,GAAGD,UAAU,CAACrE,MAAM,CAAEiC,IAAI,IAAKA,IAAI,CAACT,MAAM,KAAK,MAAM,CAAC;QACjE+C,WAAW,GAAGF,UAAU,CAACrE,MAAM,CAAEiC,IAAI,IAAKA,IAAI,CAACT,MAAM,KAAK,MAAM,CAAC;QACjEgD,WAAW,GAAGH,UAAU,CAACrE,MAAM,CAAEiC,IAAI,IAAKA,IAAI,CAACT,MAAM,KAAK,MAAM,CAAC;MACnE,CAAC,CAAC;MAEF,QAAQgB,KAAK;QACX;QACA,KAAK,CAAC;UACJ,IAAI4B,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B4B,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC;UACxB;UACA,IAAI4B,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACrE,IAAI,CAACuE,aAAa,CAACD,CAAC,CAACtE,IAAI,CAAC,CAAC;YACvD;;YAEApC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACtE,IAAI,CAACuE,aAAa,CAACF,CAAC,CAACrE,IAAI,CAAC,CAAC;YACvD;;YAEApC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA;;QAEF;QACA,KAAK,CAAC;UACJ,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B4B,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC;UACxB;UACA,IAAI4B,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpD,KAAK,GAAGmD,CAAC,CAACnD,KAAK,CAAC;YAC5C;;YAEAtD,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACnD,KAAK,GAAGoD,CAAC,CAACpD,KAAK,CAAC;YAC5C;;YAEAtD,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA;;QAEF;QACA,KAAK,CAAC;UACJ,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B4B,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC;UACxB;UACA,IAAI4B,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B8B,WAAW,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAClD,WAAW,GAAGiD,CAAC,CAACjD,WAAW,CAAC;YACzD8C,WAAW,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAClD,WAAW,GAAGiD,CAAC,CAACjD,WAAW,CAAC;YACzD+C,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACjD,WAAW,GAAGkD,CAAC,CAAClD,WAAW,CAAC;;YAEzD;YACA4C,UAAU,GAAG,CAAC,GAAGC,WAAW,EAAE,GAAGC,WAAW,EAAE,GAAGC,WAAW,CAAC;YAC7D;;YAEAvG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5BgC,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAClD,WAAW,GAAGiD,CAAC,CAACjD,WAAW,CAAC;YACzD8C,WAAW,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAClD,WAAW,GAAGiD,CAAC,CAACjD,WAAW,CAAC;YACzD6C,WAAW,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACjD,WAAW,GAAGkD,CAAC,CAAClD,WAAW,CAAC;;YAEzD;YACA4C,UAAU,GAAG,CAAC,GAAGG,WAAW,EAAE,GAAGD,WAAW,EAAE,GAAGD,WAAW,CAAC;YAC7D;;YAEArG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA;;QAEF;QACA,KAAK,CAAC;UACJ,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B4B,WAAW,CAAC5B,KAAK,CAAC,GAAG,CAAC;UACxB;UACA,IAAI4B,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAChD,WAAW,GAAG+C,CAAC,CAAC/C,WAAW,CAAC;YACxD;;YAEA1D,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA,IAAImG,WAAW,CAAC5B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B6B,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC/C,WAAW,GAAGgD,CAAC,CAAChD,WAAW,CAAC;YACxD;;YAEA1D,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;YAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;UACpB;UACA;MACJ;MACAlB,QAAQ,CAAC5C,eAAe,CAACkK,UAAU,CAAC,CAAC;MACrCtH,QAAQ,CAACxC,aAAa,CAAC8J,UAAU,CAAC,CAAC;MAEnC,OAAOD,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMS,UAAU,GAAI3E,KAAa,IAAK;IACpCnD,QAAQ,CAAC1C,mBAAmB,CAAC6F,KAAK,CAAC,CAAC;EACtC,CAAC;EACD,MAAM4E,YAAY,GAAI5E,KAAa,IAAK;IACtCnD,QAAQ,CAACzC,qBAAqB,CAAC4F,KAAK,CAAC,CAAC;EACxC,CAAC;EAED,oBACExD,OAAA;IAAKqI,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBtI,OAAA;MAAKqI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAEpCtI,OAAA;QACEqI,SAAS,EAAC,YAAY;QACtBE,KAAK,EAAC,4BAA4B;QAClCC,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC,IAAI;QAAAJ,QAAA,eAEXtI,OAAA;UACE2I,IAAI,EAAC,cAAc;UACnBC,CAAC,EAAC;QAAmH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNhJ,OAAA;QACEiJ,IAAI,EAAC,MAAM;QACXZ,SAAS,EAAC,yBAAyB;QACnCa,WAAW,EAAC,cAAI;QAChB1F,KAAK,EAAEnC,SAAU;QACjB8H,QAAQ,EAAGC,CAAC,IAAK9H,YAAY,CAAC8H,CAAC,CAACC,MAAM,CAAC7F,KAAK;MAAE;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNhJ,OAAA;MAAKqI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BtI,OAAA;QACEqI,SAAS,EAAG,GAAE9F,YAAY,KAAK,IAAI,GAAG,uBAAuB,GAAG,EAC7D,EAAE;QACL+G,OAAO,EAAEA,CAAA,KAAM9G,eAAe,CAAC,IAAI,CAAE;QAAA8F,QAAA,EACtC;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPhJ,OAAA;QACEqI,SAAS,EAAG,GAAE9F,YAAY,KAAK,IAAI,GAAG,uBAAuB,GAAG,EAC7D,EAAE;QACL+G,OAAO,EAAEA,CAAA,KAAM9G,eAAe,CAAC,IAAI,CAAE;QAAA8F,QAAA,EACtC;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPhJ,OAAA;QACEqI,SAAS,EAAG,GAAE9F,YAAY,KAAK,IAAI,GAAG,uBAAuB,GAAG,EAC7D,EAAE;QACL+G,OAAO,EAAEA,CAAA,KAAM9G,eAAe,CAAC,IAAI,CAAE;QAAA8F,QAAA,EACtC;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAINhJ,OAAA;MAAOqI,SAAS,EAAC,YAAY;MAACkB,EAAE,EAAC,UAAU;MAAAjB,QAAA,gBACzCtI,OAAA;QAAAsI,QAAA,gBACEtI,OAAA;UAAKyI,KAAK,EAAE;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnBhJ,OAAA;UAAKyI,KAAK,EAAE;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClBhJ,OAAA;UAAKyI,KAAK,EAAE;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClBhJ,OAAA;UAAKyI,KAAK,EAAE;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACXhJ,OAAA;QAAOqI,SAAS,EAAC,sBAAsB;QAAAC,QAAA,eACrCtI,OAAA;UAAIqI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAE3B/F,YAAY,KAAK,IAAI,gBACnBvC,OAAA,CAAAE,SAAA;YAAAoI,QAAA,gBACEtI,OAAA;cAAIqI,SAAS,EAAC,MAAM;cAACiB,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,wBAEhD,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,OAAO;cAACiB,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,wBAEjD,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,SAAS;cAACiB,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,8BAEnD,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,QAAQ;cAACiB,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,8BAElD,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,eACL,CAAC,gBACHhJ,OAAA,CAAAE,SAAA;YAAAoI,QAAA,gBACEtI,OAAA;cAAIqI,SAAS,EAAC,MAAM;cAACkB,EAAE,EAAC,YAAY;cAACD,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,wBAEhE,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,OAAO;cAACkB,EAAE,EAAC,aAAa;cAACD,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,wBAElE,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,SAAS;cAACkB,EAAE,EAAC,eAAe;cAACD,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,8BAEtE,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLhJ,OAAA;cAAIqI,SAAS,EAAC,QAAQ;cAACkB,EAAE,EAAC,cAAc;cAACD,OAAO,EAAEA,CAAA,KAAM9B,SAAS,CAAC,CAAC,CAAE;cAAAc,QAAA,GAAC,8BAEpE,eAAAtI,OAAA;gBACEqI,SAAS,EAAC,MAAM;gBAChBmB,GAAG,EAAE/H,WAAW,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE;gBACjCkI,GAAG,EAAC;cAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,eACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAENzG,YAAY,KAAK,IAAI,gBACnBvC,OAAA,CAACJ,SAAS;MAACyI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eACxCtI,OAAA;QAAOqI,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BtI,OAAA;UAAAsI,QAAA,gBACEtI,OAAA;YAAKyI,KAAK,EAAE;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACXhJ,OAAA;UAAOqI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAEhCnH,YAAY,CAACsC,GAAG,CAAC,CAAC8B,IAAI,EAAExB,CAAC,KAAK;YAE7B;YACA,IAAI2F,SAAS,GAAG/G,WAAW,CAACgH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cAChD,OAAO8D,IAAI,CAAC9D,KAAK,KAAK/B,CAAC,IAAI6F,IAAI,CAAC3D,QAAQ,KAAKV,IAAI,CAACV,KAAK;YACzD,CAAC,CAAC;YACF,IAAIgF,eAAe,GAAGH,SAAS,GAAG,mBAAmB,GAAG,EAAE;YAC1D,IAAII,eAAe,GAAGJ,SAAS,GAAG,mBAAmB,GAAG,EAAE;;YAE1D;YACA,IAAIrH,WAAW,GACb0H,KAAK,CAACC,OAAO,CAAC5H,cAAc,CAAC,IAC7BA,cAAc,CAACuH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cACnC,OAAOP,IAAI,CAAC5B,IAAI,KAAKiG,IAAI,CAACtC,WAAW;YACvC,CAAC,CAAC;YAEJ,oBACEtH,OAAA;cAEEsJ,OAAO,EAAEA,CAAA,KAAM;gBACbjJ,QAAQ,CAACpB,cAAc,CAACkC,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjDxE,QAAQ,CAACjB,eAAe,CAAC+B,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;;gBAElDsD,UAAU,CAAChH,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;gBAChCyE,YAAY,CAACjH,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;gBACpC9B,iBAAiB,CAACb,YAAY,CAAC4C,CAAC,CAAC,CAAC;gBAClCwC,iBAAiB,CAACpF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;gBACzCwC,iBAAiB,CACfnF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,EACtBpC,iBACF,CAAC;gBACDqB,iBAAiB,CAAC5B,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;gBACzCsC,iBAAiB,CAACjF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;cAC3C,CAAE;cAAAwE,QAAA,gBAEFtI,OAAA;gBAAIqI,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAC/BtI,OAAA;kBAAMqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACzBtI,OAAA;oBACEsJ,OAAO,EAAEA,CAAA,KAAM;sBACbnC,SAAS,CAACpD,CAAC,CAAC;sBACZqD,eAAe,CAACjF,UAAU,EAAEhB,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;oBACnD;oBACA;oBACA;oBAAA;oBACA6F,GAAG,EAAEnH,WAAW,GAAG3C,MAAM,GAAGC,OAAQ;oBACpC8J,GAAG,EAAC;kBAAM;oBAAAZ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACPhJ,OAAA;kBAAKqI,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBtI,OAAA;oBAAAsI,QAAA,EAAM/C,IAAI,CAAC5B;kBAAI;oBAAAkF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACtBhJ,OAAA;oBAAAsI,QAAA,EAAM/C,IAAI,CAACzB;kBAAM;oBAAA+E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,EAGJzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACrB9E,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAMqI,SAAS,EAAG,WAAUwB,eAAgB,EAAE;kBAAAvB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;gBAAC;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAMqI,SAAS,EAAG,WAAUyB,eAAgB,EAAE;kBAAAxB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;gBAAC;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,gBAELhJ,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAAsI,QAAA,EAAO/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;gBAAC;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CACL,EACAzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACrB9E,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAMqI,SAAS,EAAC,SAAS;kBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAMqI,SAAS,EAAC,SAAS;kBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,gBAELhJ,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAAsI,QAAA,GACG,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAAC,GAAG,EAChDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CACL,eACDhJ,OAAA;gBAAIqI,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBtI,OAAA;kBAAMqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,GACxB6B,MAAM,CACLC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC/E,IAAI,CAACN,WAAW,CAAC,CAAC,CAACsF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAClD,CAAC,CAACN,cAAc,CAAC,CAAC,EAAC,cAErB;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,GAnFAjF,CAAC;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoFJ,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,GACVzG,YAAY,KAAK,IAAI,GACvBJ,UAAU,KAAK,EAAE;IAAA;IACf;IACAnC,OAAA,CAACJ,SAAS;MAACyI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eACxCtI,OAAA;QAAOqI,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BtI,OAAA;UAAAsI,QAAA,gBACEtI,OAAA;YAAKyI,KAAK,EAAE;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACXhJ,OAAA;UAAOqI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAG/BnH,YAAY,CAACsC,GAAG,CAAC,CAAC8B,IAAI,EAAExB,CAAC,KAAK;YAAA,IAAAyG,OAAA,EAAAC,iBAAA;YAE5B;YACA,IAAIf,SAAS,GAAG/G,WAAW,CAACgH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cAChD,OAAO8D,IAAI,CAAC9D,KAAK,KAAK/B,CAAC,IAAI6F,IAAI,CAAC3D,QAAQ,KAAKV,IAAI,CAACV,KAAK;YACzD,CAAC,CAAC;YACF,IAAIgF,eAAe,GAAGH,SAAS,GAAG,mBAAmB,GAAG,EAAE;YAC1D,IAAII,eAAe,GAAGJ,SAAS,GAAG,mBAAmB,GAAG,EAAE;;YAE1D;YACA,IAAIgB,OAAO,GACTX,KAAK,CAACC,OAAO,CAACnI,WAAW,CAAC,IAAIA,WAAW,CAAC8H,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cAC9D,OAAOP,IAAI,CAAC5B,IAAI,KAAKiG,IAAI,CAACtC,WAAW;YACvC,CAAC,CAAC;;YAEJ;YACA,IAAIjF,WAAW,GACb0H,KAAK,CAACC,OAAO,CAAC5H,cAAc,CAAC,IAAIA,cAAc,CAACuH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cACpE,OAAOP,IAAI,CAAC5B,IAAI,KAAKiG,IAAI,CAACtC,WAAW;YACvC,CAAC,CAAC;;YAGJ;YACA,IAAIqD,aAAa,GAAGP,MAAM,EAAAI,OAAA,GAACL,MAAM,EAAAM,iBAAA,GAAC5I,WAAW,CAACgC,IAAI,CAAEsC,MAAM,IAAKZ,IAAI,CAAC5B,IAAI,KAAKwC,MAAM,CAACmB,WAAW,CAAC,cAAAmD,iBAAA,uBAA9DA,iBAAA,CAAgEG,QAAQ,CAAC,cAAAJ,OAAA,uBAAhFA,OAAA,CAAkFN,OAAO,CAAC,CAAC,CAAC,CAAC;YAExH,IAAIW,WAAW,GAAItF,IAAI,CAACzB,MAAM,CAAEyG,KAAK,CAAC,CAAC,CAAC;YAExC,IAAIO,iBAAiB,GAAGH,aAAa,GAAGE,WAAW;;YAEnD;YACA,OAAOC,iBAAiB,CAAC9G,MAAM,GAAG,EAAE,EAAE;cACpC2G,aAAa,GAAGA,aAAa,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAC1CO,iBAAiB,GAAGH,aAAa,GAAGE,WAAW;YACjD;;YAEA;YACA,IAAIC,iBAAiB,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;cACnCD,iBAAiB,GAAGA,iBAAiB,CAACP,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD;YAEA;cACE;cACAG,OAAO,iBACL1K,OAAA;gBAEEsJ,OAAO,EAAEA,CAAA,KAAM;kBACbjJ,QAAQ,CAACpB,cAAc,CAACkC,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;kBACjDxE,QAAQ,CAACjB,eAAe,CAAC+B,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;kBAClDsD,UAAU,CAAChH,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;kBAChCyE,YAAY,CAACjH,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACpC9B,iBAAiB,CAACb,YAAY,CAAC4C,CAAC,CAAC,CAAC;kBAClCwC,iBAAiB,CAACpF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACzCwC,iBAAiB,CACfnF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,EACtBpC,iBACF,CAAC;kBACDqB,iBAAiB,CAAC5B,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACzCsC,iBAAiB,CAACjF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;gBAC3C,CAAE;gBAAAwE,QAAA,gBACFtI,OAAA;kBAAIqI,SAAS,EAAC,mBAAmB;kBAACkB,EAAE,EAAC,eAAe;kBAAAjB,QAAA,gBAClDtI,OAAA;oBAAMqI,SAAS,EAAC,WAAW;oBAAAC,QAAA,eACzBtI,OAAA;sBACEsJ,OAAO,EAAEA,CAAA,KAAM;wBACbnC,SAAS,CAACpD,CAAC,CAAC;wBACZqD,eAAe,CAACjF,UAAU,EAAEhB,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;sBACnD;sBACA;sBACA;sBAAA;sBACA6F,GAAG,EAAEnH,WAAW,GAAG3C,MAAM,GAAGC,OAAQ;sBACpC8J,GAAG,EAAC;oBAAM;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eACPhJ,OAAA;oBAAKqI,SAAS,EAAC,UAAU;oBAAAC,QAAA,gBACvBtI,OAAA;sBAAAsI,QAAA,EAAM/C,IAAI,CAAC5B;oBAAI;sBAAAkF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACtBhJ,OAAA;sBAAAsI,QAAA,EAAM/C,IAAI,CAACzB;oBAAM;sBAAA+E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,EAIHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACpB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,gBAAgB;kBAAAjB,QAAA,eAC3CtI,OAAA;oBAAMqI,SAAS,EAAG,WAAUwB,eAAgB,EAAE;oBAAAvB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,gBAAgB;kBAAAjB,QAAA,eAC3CtI,OAAA;oBAAMqI,SAAS,EAAG,WAAUyB,eAAgB,EAAE;oBAAAxB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,gBAELhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,gBAAgB;kBAAAjB,QAAA,eAC3CtI,OAAA;oBAAAsI,QAAA,EAAO/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CACL,EAEDzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACpB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,qBAAqB;kBAAAjB,QAAA,eAChDtI,OAAA;oBAAMqI,SAAS,EAAC,SAAS;oBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,qBAAqB;kBAAAjB,QAAA,eAChDtI,OAAA;oBAAMqI,SAAS,EAAC,SAAS;oBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,gBAELhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,qBAAqB;kBAAAjB,QAAA,eAChDtI,OAAA;oBAAAsI,QAAA,GACG,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EAChDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CACL,eACHhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAACkB,EAAE,EAAC,mBAAmB;kBAAAjB,QAAA,eAC9CtI,OAAA;oBAAMqI,SAAS,EAAC,WAAW;oBAAAC,QAAA,EACxBwC;kBAAiB;oBAAAjC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC;cAAA,GAhFAjF,CAAC;gBAAA8E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAiFJ;YACL;UAEL,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEZhJ,OAAA;MAAKqI,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAE/B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,GACC7G,UAAU,KAAK,EAAE;IAAA;IACnB;IACAnC,OAAA,CAACJ,SAAS;MAACyI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eACxCtI,OAAA;QAAOqI,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BtI,OAAA;UAAAsI,QAAA,gBACEtI,OAAA;YAAKyI,KAAK,EAAE;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBhJ,OAAA;YAAKyI,KAAK,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACXhJ,OAAA;UAAOqI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAEhCnH,YAAY,CAACsC,GAAG,CAAC,CAAC8B,IAAI,EAAExB,CAAC,KAAK;YAE7B;YACA,IAAI2F,SAAS,GAAG/G,WAAW,CAACgH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cAChD,OAAO8D,IAAI,CAAC9D,KAAK,KAAK/B,CAAC,IAAI6F,IAAI,CAAC3D,QAAQ,KAAKV,IAAI,CAACV,KAAK;YACzD,CAAC,CAAC;YACF,IAAIgF,eAAe,GAAGH,SAAS,GAAG,mBAAmB,GAAG,EAAE;YAC1D,IAAII,eAAe,GAAGJ,SAAS,GAAG,mBAAmB,GAAG,EAAE;;YAE1D;YACA,IAAIrH,WAAW,GACb0H,KAAK,CAACC,OAAO,CAAC5H,cAAc,CAAC,IAC7BA,cAAc,CAACuH,IAAI,CAAC,CAACC,IAAI,EAAE9D,KAAK,KAAK;cACnC,OAAOP,IAAI,CAAC5B,IAAI,KAAKiG,IAAI,CAACtC,WAAW;YACvC,CAAC,CAAC;YAEJ;cACE;cACAjF,WAAW,iBACTrC,OAAA;gBAEEsJ,OAAO,EAAEA,CAAA,KAAM;kBACbjJ,QAAQ,CAACpB,cAAc,CAACkC,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;kBACjDxE,QAAQ,CAACjB,eAAe,CAAC+B,YAAY,CAAC4C,CAAC,CAAC,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;kBAClDsD,UAAU,CAAChH,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;kBAChCyE,YAAY,CAACjH,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACpC9B,iBAAiB,CAACb,YAAY,CAAC4C,CAAC,CAAC,CAAC;kBAClCwC,iBAAiB,CAACpF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACzCwC,iBAAiB,CACfnF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,EACtBpC,iBACF,CAAC;kBACDqB,iBAAiB,CAAC5B,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;kBACzCsC,iBAAiB,CAACjF,YAAY,CAAC4C,CAAC,CAAC,CAACD,MAAM,CAAC;gBAC3C,CAAE;gBAAAwE,QAAA,gBAEFtI,OAAA;kBAAIqI,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAC/BtI,OAAA;oBAAMqI,SAAS,EAAC,WAAW;oBAAAC,QAAA,eACzBtI,OAAA;sBACEsJ,OAAO,EAAEA,CAAA,KAAM;wBACbnC,SAAS,CAACpD,CAAC,CAAC;wBACZqD,eAAe,CAACjF,UAAU,EAAEhB,YAAY,CAAC4C,CAAC,CAAC,CAACJ,IAAI,CAAC;sBACnD;sBACA;sBACA;sBAAA;sBACA6F,GAAG,EAAEnH,WAAW,GAAG3C,MAAM,GAAGC,OAAQ;sBACpC8J,GAAG,EAAC;oBAAM;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eACPhJ,OAAA;oBAAKqI,SAAS,EAAC,UAAU;oBAAAC,QAAA,gBACvBtI,OAAA;sBAAAsI,QAAA,EAAM/C,IAAI,CAAC5B;oBAAI;sBAAAkF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACtBhJ,OAAA;sBAAAsI,QAAA,EAAM/C,IAAI,CAACzB;oBAAM;sBAAA+E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,EAGJzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACrB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAMqI,SAAS,EAAG,WAAUwB,eAAgB,EAAE;oBAAAvB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAMqI,SAAS,EAAG,WAAUyB,eAAgB,EAAE;oBAAAxB,QAAA,EAC3C/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,gBAELhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAAsI,QAAA,EAAO/C,IAAI,CAACV,KAAK,CAACoF,cAAc,CAAC;kBAAC;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CACL,EACAzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACrB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAMqI,SAAS,EAAC,SAAS;oBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,GACHzD,IAAI,CAACT,MAAM,KAAK,MAAM,gBACxB9E,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAMqI,SAAS,EAAC,SAAS;oBAAAC,QAAA,GAAC,GACvB,EAAC,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EACjDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,gBAELhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAAsI,QAAA,GACG,CAAC/C,IAAI,CAACR,WAAW,GAAG,GAAG,EAAEmF,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,eAAAlK,OAAA;sBAAA6I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,EAAC,GAAG,EAChDzD,IAAI,CAACP,YAAY,CAACiF,cAAc,CAAC,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CACL,eACDhJ,OAAA;kBAAIqI,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACvBtI,OAAA;oBAAMqI,SAAS,EAAC,WAAW;oBAAAC,QAAA,GACxB6B,MAAM,CACLC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC/E,IAAI,CAACN,WAAW,CAAC,CAAC,CAACsF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAClD,CAAC,CAACN,cAAc,CAAC,CAAC,EAAC,cAErB;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC;cAAA,GAlFAjF,CAAC;gBAAA8E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmFJ;YACL;UAEL,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEZhJ,OAAA;MAAKqI,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAE/B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEX,CAAC;AAAC5I,EAAA,CApkCID,UAAU;EAAA,QAEG5C,WAAW,EAEZC,WAAW,EACVA,WAAW,EACVA,WAAW,EACXA,WAAW,EACNA,WAAW,EACVA,WAAW,EACZA,WAAW,EACVA,WAAW,EACbA,WAAW,EACXA,WAAW,EACZA,WAAW,EACnBA,WAAW,EACHA,WAAW,EACLA,WAAW,EAWZA,WAAW,EACfA,WAAW,EACXA,WAAW,EACbA,WAAW,EACdA,WAAW,EAKTA,WAAW,EAEPA,WAAW,EAgBwEsC,WAAW;AAAA;AAAAkL,EAAA,GAvDjH7K,UAAU;AAskChB,SAASA,UAAU;AAAG,IAAA6K,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}