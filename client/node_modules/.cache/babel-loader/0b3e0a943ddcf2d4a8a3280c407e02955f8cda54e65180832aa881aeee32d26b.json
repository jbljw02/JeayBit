{"ast":null,"code":"var _jsxFileName = \"C:\\\\VS_Project\\\\JeayBit\\\\client\\\\src\\\\components\\\\PriceDetail.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAsking_dateTime, setBuyingPrice, setIsBuying, setIsSelling, setSectionChange, setSellingPrice } from \"../store\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport axios from \"axios\";\nimport useFunction from \"./useFuction\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PriceDetail = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    buyCrypto_unSigned,\n    sellCrypto_unSigned\n  } = useFunction();\n  const sectionChange = useSelector(state => state.sectionChange);\n  const askingData_unSigned = useSelector(state => state.askingData_unSigned);\n  const logInEmail = useSelector(state => state.logInEmail);\n  const [completeModalOpen, setCompleteModalOpen] = useState(false);\n  const completeToggleModal = () => {\n    setCompleteModalOpen(!completeModalOpen);\n  };\n\n  // 미체결 화폐 매수 - 구매 대기 상태에서 동작 \n  useEffect(() => {\n    let localStorageItem = [];\n\n    // 로컬 스토리지에 있는 key-value를 꺼냄\n    for (let i = 0; i < localStorage.length; i++) {\n      let tempKey = localStorage.key(i);\n      if (tempKey !== null) {\n        let valueItem = localStorage.getItem(tempKey);\n        if (valueItem !== null) {\n          let tempValue = JSON.parse(valueItem);\n          localStorageItem.push({\n            id: tempKey,\n            price: Number(tempValue.price),\n            name: tempValue.name,\n            trade_amount: tempValue.trade_amount,\n            trade_price: tempValue.trade_price\n          });\n        }\n      }\n    }\n\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\n    // console.log(\"미체결 : \", askingData_unSigned);\n\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\n    Object.keys(askingData_unSigned).forEach(cryptoName => {\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\n      let scheduledCrypto = [];\n      for (let i = 0; i < localStorageItem.length; i++) {\n        if (cryptoName === localStorageItem[i].name) {\n          scheduledCrypto.push(localStorageItem[i]);\n        }\n      }\n\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\n      for (let j = 0; j < scheduledCrypto.length; j++) {\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\n        for (let k = 0; k < askingData_unSigned[cryptoName].length; k++) {\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].ask_price);\n\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\n          if (scheduledCrypto[j].price === askingData_unSigned[cryptoName][k].ask_price) {\n            console.log(\"매수 - 일치\", scheduledCrypto[j].price);\n            buyCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\n            completeToggleModal();\n          }\n        }\n      }\n    });\n  }, [askingData_unSigned, buyCrypto_unSigned, completeToggleModal, logInEmail]);\n\n  // 미체결 화폐 매도 - 매도 대기 상태에서 동작 \n  useEffect(() => {\n    let localStorageItem = [];\n\n    // 로컬 스토리지에 있는 key-value를 꺼냄\n    for (let i = 0; i < localStorage.length; i++) {\n      let tempKey = localStorage.key(i);\n      if (tempKey !== null) {\n        let valueItem = localStorage.getItem(tempKey);\n        if (valueItem !== null) {\n          let tempValue = JSON.parse(valueItem);\n          localStorageItem.push({\n            id: tempKey,\n            price: Number(tempValue.price),\n            name: tempValue.name,\n            trade_amount: tempValue.trade_amount,\n            trade_price: tempValue.trade_price\n          });\n        }\n      }\n    }\n\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\n    // console.log(\"미체결 : \", askingData_unSigned);\n\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\n    Object.keys(askingData_unSigned).forEach(cryptoName => {\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\n      let scheduledCrypto = [];\n      for (let i = 0; i < localStorageItem.length; i++) {\n        if (cryptoName === localStorageItem[i].name) {\n          scheduledCrypto.push(localStorageItem[i]);\n        }\n      }\n\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\n      for (let j = 0; j < scheduledCrypto.length; j++) {\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\n        for (let k = 0; k < askingData_unSigned[cryptoName].length; k++) {\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].bid_price);\n\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\n          if (scheduledCrypto[j].price === askingData_unSigned[cryptoName][k].bid_price) {\n            console.log(\"매도 - 일치\", scheduledCrypto[j].price);\n            sellCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\n            completeToggleModal();\n          }\n        }\n      }\n    });\n  }, [askingData_unSigned, completeToggleModal, logInEmail, sellC]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalComplete, {\n      completeModalOpen: completeModalOpen,\n      setCompleteModalOpen: setCompleteModalOpen,\n      completeToggleModal: completeToggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightMode\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priceDetail-title askingTitle lightMode\",\n        children: \"\\uD638\\uAC00\\uB0B4\\uC5ED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AskingPrice, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priceDetail-title closedTitle lightMode\",\n        children: \"\\uCCB4\\uACB0\\uB0B4\\uC5ED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClosedPrice, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-section lightMode-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${sectionChange === '매수' ? 'buyingSection' : ''}`,\n          onClick: () => dispatch(setSectionChange('매수')),\n          children: \"\\uB9E4\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${sectionChange === '매도' ? 'sellingSection' : ''}`,\n          onClick: () => dispatch(setSectionChange('매도')),\n          children: \"\\uB9E4\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${sectionChange === '거래내역' ? 'tradingHistorySection' : ''}`,\n          onClick: () => dispatch(setSectionChange('거래내역')),\n          children: \"\\uAC70\\uB798\\uB0B4\\uC5ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), sectionChange === '매수' ? /*#__PURE__*/_jsxDEV(BuyingSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this) : sectionChange === '매도' ? /*#__PURE__*/_jsxDEV(SellingSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(TradeHistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// bid = 매수, ask = 매도\n_s(PriceDetail, \"i8QCHAADy5ntXATnZgRQm3mSLt0=\", false, function () {\n  return [useDispatch, useFunction, useSelector, useSelector, useSelector];\n});\n_c = PriceDetail;\nconst AskingPrice = () => {\n  _s2();\n  const dispatch = useDispatch();\n  const asking_data = useSelector(state => state.asking_data);\n  const cr_market_selected = useSelector(state => state.cr_market_selected);\n  const asking_dateTime = useSelector(state => state.asking_dateTime);\n  const asking_totalAskSize = useSelector(state => state.asking_totalAskSize);\n  const asking_totalBidSize = useSelector(state => state.asking_totalBidSize);\n  const [prevData, setPrevData] = useState();\n  const [differences_ask, setDifferences_ask] = useState([]);\n  const [differences_bid, setDifferences_bid] = useState([]);\n\n  // 호가 수량의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\n  useEffect(() => {\n    setPrevData(asking_data); // state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\n\n    let newDifferences_ask = [];\n    let newDifferences_bid = [];\n    if (prevData !== undefined) {\n      prevData.forEach((value, index) => {\n        if (value.ask_size !== asking_data[index].ask_size) {\n          newDifferences_ask.push({\n            new_ask_price: asking_data[index].ask_price,\n            new_ask_size: asking_data[index].ask_size\n          });\n        }\n        if (value.bid_size !== asking_data[index].bid_size) {\n          newDifferences_bid.push({\n            new_bid_price: asking_data[index].bid_price,\n            new_bid_size: asking_data[index].bid_size\n          });\n        }\n      });\n    }\n    setDifferences_ask(newDifferences_ask);\n    setDifferences_bid(newDifferences_bid);\n  }, [asking_data]);\n  if (asking_dateTime) {\n    const date = new Date(asking_dateTime);\n    if (!isNaN(date.getTime())) {\n      let newDateString = new Intl.DateTimeFormat('ko-KR', {\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false // 24시간 형식\n      }).format(date);\n      dispatch(setAsking_dateTime(newDateString.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\")));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"askingPrice-table lightMode\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"lightMode-title\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uB4F1\\uB85D\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD638\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"\\uC218\\uB7C9\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"(\", cr_market_selected.slice(4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleBar, {\n      className: \"scrollBar-askingPriceTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"askingPrice-table lightMode\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [asking_data.map((item, i) => {\n            // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\n            let isChanged_bid = differences_bid.some((value, index) => {\n              return value.new_bid_size === item.bid_size;\n            });\n            let bidClass = isChanged_bid ? 'change-bid' : '';\n            const percentage = item.bid_size / asking_totalBidSize * 100; // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\n\n            let str_bid_size;\n\n            // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\n            if (item.bid_size > 9999999999999) {\n              str_bid_size = String(Math.floor(item.bid_size));\n            }\n            // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\n            else {\n              str_bid_size = String(item.bid_size);\n              str_bid_size = str_bid_size.substring(0, 14);\n            }\n\n            // 문자열의 끝이 '.'로 끝난다면 .을 제거\n            if (str_bid_size.endsWith('.')) {\n              str_bid_size = str_bid_size.slice(0, -1);\n            }\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                background: `linear-gradient(270deg, rgba(34,171,148, .2) ${percentage}%, transparent ${percentage}%)`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: asking_dateTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.bid_price.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: bidClass,\n                children: str_bid_size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this);\n          }), asking_data.map((item, i) => {\n            // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\n            let isChange_ask = differences_ask.some((value, index) => {\n              return value.new_ask_size === item.ask_size;\n            });\n            let askClass = isChange_ask ? 'change-ask' : '';\n            const percentage = item.ask_size / asking_totalAskSize * 100; // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\n\n            let str_ask_size;\n            // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\n            if (item.ask_size > 9999999999999) {\n              str_ask_size = String(Math.floor(item.ask_size));\n            }\n            // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\n            else {\n              str_ask_size = String(item.ask_size);\n              str_ask_size = str_ask_size.substring(0, 14);\n            }\n\n            // 문자열의 끝이 '.'로 끝난다면 .을 제거\n            if (str_ask_size.endsWith('.')) {\n              str_ask_size = str_ask_size.slice(0, -1);\n            }\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                background: `linear-gradient(270deg, rgba(242,54,69, .2) ${percentage}%, transparent ${percentage}%)`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: asking_dateTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.ask_price.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: askClass,\n                children: str_ask_size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(AskingPrice, \"l6Rlr1tznifiURLxKbtVHntMGsg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c2 = AskingPrice;\nconst ClosedPrice = () => {\n  _s3();\n  const closed_data = useSelector(state => state.closed_data);\n  const cr_market_selected = useSelector(state => state.cr_market_selected);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"closedPrice-table lightMode-title\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCCB4\\uACB0\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCCB4\\uACB0\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"\\uCCB4\\uACB0\\uB7C9\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"(\", cr_market_selected.slice(4), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleBar, {\n      className: \"scrollBar-closedPriceTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"closedPrice-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: closed_data.map((item, i) => {\n            const date = new Date(item.timestamp);\n            let trade_time = new Intl.DateTimeFormat('ko-KR', {\n              month: '2-digit',\n              day: '2-digit',\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: false // 24시간 형식\n            }).format(date);\n            trade_time = trade_time.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\");\n            let str_trade_volume;\n\n            // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\n            if (item.trade_volume > 9999999999999) {\n              str_trade_volume = String(Math.floor(item.trade_volume));\n            }\n            // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\n            else {\n              str_trade_volume = String(item.trade_volume);\n              str_trade_volume = str_trade_volume.substring(0, 14);\n            }\n\n            // 문자열의 끝이 '.'로 끝난다면 .을 제거\n            if (str_trade_volume.endsWith('.')) {\n              str_trade_volume = str_trade_volume.slice(0, -1);\n            }\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade_time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.trade_price.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this), item.ask_bid === 'BID' ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-rise\",\n                children: str_trade_volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-fall\",\n                children: str_trade_volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 25\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s3(ClosedPrice, \"ukfcDDEmVe6joVK7Fzch4KW0F5o=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c3 = ClosedPrice;\nconst BuyingSection = () => {\n  _s4();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const cr_selected = useSelector(state => state.cr_selected);\n  const cr_name_selected = useSelector(state => state.cr_name_selected);\n  const logInEmail = useSelector(state => state.logInEmail);\n  const userWallet = useSelector(state => state.userWallet);\n  const asking_data = useSelector(state => state.asking_data); // bid = 매수, ask = 매도\n  const theme = useSelector(state => state.theme);\n  const buyingPrice = useSelector(state => state.buyingPrice);\n  const [selectedPercentage, setSelectedPercentage] = useState('');\n  const [bidSort, setBidSort] = useState('지정가');\n  const [buyTotal, setBuyTotal] = useState(0);\n  const [buyQuantity, setBuyQuantity] = useState(0);\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\n  const [totalInputValue, setTotalInputvalue] = useState('0');\n  const [buyingInputValue, setBuyingInputValue] = useState('0');\n\n  // 구매하려는 화폐의 가격과 호가 사이의 일치 여부\n  const [matchedItem, setMatchedItem] = useState(null);\n\n  // 화폐를 구매하기 위해 대기중인지 여부\n  const isBuying = useSelector(state => state.isBuying);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [completeModalOpen, setCompleteModalOpen] = useState(false);\n\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\n  const [tradeCategory, setTradeCategory] = useState('매수');\n\n  // 현재 시간을 저장하는 state\n  const [time, setTime] = useState(new Date());\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n  const completeToggleModal = () => {\n    setCompleteModalOpen(!completeModalOpen);\n  };\n  const {\n    getBalance,\n    getOwnedCrypto,\n    addTradeHistory,\n    getTradeHistory,\n    getCryptoName,\n    buyCrypto_unSigned\n  } = useFunction();\n\n  // 매수가가 바뀌면 그에 따라 입력값도 변경\n  useEffect(() => {\n    setBuyingInputValue(buyingPrice.toString());\n  }, [buyingPrice]);\n\n  // 선택 화폐가 바뀔 때마다 매수 가격을 해당 화폐의 가격으로 변경하고, 주문 수량 및 총액을 초기화\n  useEffect(() => {\n    // 주문 수량\n    setBuyQuantity(0);\n    setQuantityInputValue('0');\n\n    // 주문 총액\n    setBuyTotal(0);\n    setTotalInputvalue('0');\n  }, [cr_name_selected]);\n\n  // 호가와 구매가가 일치할 때\n  const buyCrypto = (email, cryptoName, cryptoQuantity, buyTotal) => {\n    (async (email, cryptoName, cryptoQuantity, buyTotal) => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/buy_crypto/\", {\n          email: email,\n          crypto_name: cryptoName,\n          crypto_quantity: cryptoQuantity,\n          buy_total: buyTotal\n        });\n        console.log(\"구매 화폐 전송 성공\", response.data);\n        getBalance(logInEmail); // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\n        getOwnedCrypto(logInEmail); // 소유 화폐가 새로 추가될 수 있으니 업데이트\n        getTradeHistory(logInEmail); // 매수에 성공했으니 거래내역 업데이트\n        completeToggleModal();\n      } catch (error) {\n        console.log(\"구매 화폐 전송 실패: \", error);\n      }\n    })(email, cryptoName, cryptoQuantity, buyTotal);\n  };\n  const selectPercentage = percentage => {\n    setSelectedPercentage(percentage);\n\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없으므로 \n    if (buyingInputValue !== '0') {\n      // 현재 잔고 기준 퍼센테이지를 '주문총액'에 할당하고, 주문총액이 구매하려는 화폐 가격에 대해 어느 정도의 비율을 가지는지 계산\n      if (percentage === '10%') {\n        let dividedTotal = userWallet * 0.1;\n        setBuyTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n        let dividedQuantity = dividedTotal / buyingPrice;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        setBuyQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n      }\n      if (percentage === '25%') {\n        let dividedTotal = userWallet * 0.25;\n        setBuyTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n        let dividedQuantity = dividedTotal / buyingPrice;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        setBuyQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n      }\n      if (percentage === '50%') {\n        let dividedTotal = userWallet * 0.50;\n        setBuyTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n        let dividedQuantity = dividedTotal / buyingPrice;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        setBuyQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n      }\n      if (percentage === '75%') {\n        let dividedTotal = userWallet * 0.75;\n        setBuyTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n        let dividedQuantity = dividedTotal / buyingPrice;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        setBuyQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n      }\n      if (percentage === '100%') {\n        let dividedTotal = userWallet;\n        setBuyTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n        let dividedQuantity = dividedTotal / buyingPrice;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        setBuyQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalSumbit, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      toggleModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComplete, {\n      completeModalOpen: completeModalOpen,\n      setCompleteModalOpen: setCompleteModalOpen,\n      completeToggleModal: completeToggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"trading-headTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"trading-choice\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `radio ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n            children: \"\\uC8FC\\uBB38\\uAD6C\\uBD84\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio\",\n              id: \"radio1\",\n              className: \"radio-input\",\n              onChange: () => setBidSort('지정가'),\n              checked: bidSort === '지정가'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `radio-designate radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n              htmlFor: \"radio1\",\n              children: \"\\uC9C0\\uC815\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio\",\n              id: \"radio2\",\n              className: \"radio-input\",\n              onChange: () => setBidSort('시장가'),\n              checked: bidSort === '시장가'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `radio-market radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n              htmlFor: \"radio2\",\n              children: \"\\uC2DC\\uC7A5\\uAC00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this),\n    // 매수 - 지정가 영역\n    bidSort === '지정가' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"trading-category\",\n              children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"trading-availableTrade\",\n              children: [Number(userWallet).toLocaleString(), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"KRW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"trading-category\",\n              children: \"\\uB9E4\\uC218\\uAC00\\uACA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-input\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: buyingInputValue,\n                  onChange: e => {\n                    let value = e.target.value;\n\n                    // 매수가격을 변경했음에도 구매 대기 여부가 true이면 의도치 않게 매수가 완료될 수 있으니, 매수가를 변경했을 때는 구매 대기 여부를 false로 처리\n                    // let updatedIsBuying = { ...isBuying };\n                    // updatedIsBuying[cr_name_selected] = false;\n                    // dispatch(setIsBuying(updatedIsBuying));\n\n                    // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                    if (value[0] === '0' && value.length > 1) {\n                      if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                        value = value.substring(1);\n                      }\n                    }\n\n                    // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\n                    value = value.replace(/(\\..*)\\./g, \"$1\");\n\n                    // 숫자와 \".\" 외의 문자를 제거\n                    value = value.replace(/[^0-9.]/g, \"\");\n\n                    // \".\"이 맨 처음에 오지 않도록 함\n                    if (value[0] === '.') {\n                      value = '0' + value;\n                    }\n\n                    // value값이 비게 되면 '0'으로 설정(NaN값 방지)\n                    if (value === '') {\n                      value = '0';\n                    }\n                    dispatch(setBuyingPrice(Number(value)));\n                    setBuyingInputValue(value);\n                    setBuyTotal(Math.floor(parseFloat(value) * buyQuantity));\n                    setTotalInputvalue(Math.floor(parseFloat(value) * buyQuantity).toString());\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"KRW\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"50000000\",\n                step: 1,\n                value: buyingPrice,\n                className: \"slider buy\",\n                onChange: e => dispatch(setBuyingPrice(Number(e.target.value)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"trading-category\",\n              children: \"\\uC8FC\\uBB38\\uC218\\uB7C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-input\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: quantityInputValue,\n                  onChange: e => {\n                    let value = e.target.value;\n\n                    // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                    if (value[0] === '0' && value.length > 1) {\n                      if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                        value = value.substring(1);\n                      }\n                    }\n\n                    // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\n                    value = value.replace(/(\\..*)\\./g, \"$1\");\n\n                    // 숫자와 \".\" 외의 문자를 제거\n                    value = value.replace(/[^0-9.]/g, \"\");\n\n                    // \".\"이 맨 처음에 오지 않도록 함\n                    if (value[0] === '.') {\n                      value = '0' + value;\n                    }\n\n                    // value값이 비게 되면 '0'으로 설정(NaN값 방지)\n                    if (value === '') {\n                      value = '0';\n                    }\n                    const decimalPart = (value.split('.')[1] || '').length;\n\n                    // 소수점 자릿수가 8자리 이하인 경우만\n                    if (decimalPart <= 8) {\n                      setQuantityInputValue(value);\n                      setBuyQuantity(parseFloat(value));\n                    }\n                    setBuyTotal(Math.floor(buyingPrice * parseFloat(value)));\n                    setTotalInputvalue(Math.floor(buyingPrice * parseFloat(value)).toString());\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"count-percentage\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: selectedPercentage === '10%' ? 'buy-percentage' : 'nonSelected-percentage',\n                onClick: () => selectPercentage('10%'),\n                children: \"10%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: selectedPercentage === '25%' ? 'buy-percentage' : 'nonSelected-percentage',\n                onClick: () => selectPercentage('25%'),\n                children: \"25%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: selectedPercentage === '50%' ? 'buy-percentage' : 'nonSelected-percentage',\n                onClick: () => selectPercentage('50%'),\n                children: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: selectedPercentage === '75%' ? 'buy-percentage' : 'nonSelected-percentage',\n                onClick: () => selectPercentage('75%'),\n                children: \"75%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: selectedPercentage === '100%' ? 'buy-percentage' : 'nonSelected-percentage',\n                onClick: () => selectPercentage('100%'),\n                children: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: `trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n              children: \"\\uC8FC\\uBB38\\uCD1D\\uC561\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td-input\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: `${theme ? 'darkMode-title' : 'lightMode-title'}`,\n                  value: totalInputValue,\n                  onChange: e => {\n                    let value = e.target.value;\n\n                    // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                    if (value[0] === '0' && value.length > 1) {\n                      if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                        value = value.substring(1);\n                      }\n                    }\n\n                    // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\n                    const isNumber = /^[0-9]*$/.test(value);\n                    if (value === '') {\n                      value = '0';\n                    }\n                    if (buyingInputValue !== '0') {\n                      if (isNumber) {\n                        setTotalInputvalue(value);\n                        setBuyTotal(parseFloat(value));\n                        let dividiedQuantity = Number(value) / buyingPrice;\n\n                        // 소수점 아래 8자리로 제한\n                        if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\n                          dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\n                        }\n                        setBuyQuantity(dividiedQuantity);\n                        setQuantityInputValue(dividiedQuantity.toString());\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"KRW\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-buy designate\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            // 호가와 구매가가 일치하는지 확인\n            let item = asking_data.find(item => item.ask_price === buyingPrice);\n            if (item !== undefined) {\n              // 일치한다면 바로 매수 요청을 전송\n              buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal);\n              addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\n              // getTradeHistory(logInEmail);\n            } else {\n              // 선택한 화폐에 대한 구매 대기 여부를 true로 설정\n              let temp = localStorage.getItem(`${logInEmail}_IsBuying`);\n              if (temp !== null) {\n                let localStorage_isBuying = JSON.parse(temp);\n                localStorage_isBuying[cr_name_selected] = true;\n                localStorage.setItem(`${logInEmail}_IsBuying`, JSON.stringify(localStorage_isBuying));\n                dispatch(setIsBuying(localStorage_isBuying));\n              }\n\n              // 일치하지 않는다면 대기 모달 팝업\n              toggleModal();\n              setModalOpen(!modalOpen);\n              addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, false);\n              // getTradeHistory(logInEmail);\n            }\n          },\n          children: \"\\uB9E4\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-buy designate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) :\n    // 매수 - 시장가 영역\n    bidSort === '시장가' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n            children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-availableTrade\",\n            children: [Number(userWallet).toLocaleString(), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`,\n            children: \"\\uC8FC\\uBB38\\uCD1D\\uC561\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: buyTotal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"KRW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"count-percentage\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '10%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('10%'),\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '25%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('25%'),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '50%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('50%'),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '75%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('75%'),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '100%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('100%'),\n              children: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 17\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-buy market\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick:\n          // 호가와의 일치 여부를 확인하지 않음\n          () => {\n            buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal);\n            addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\n          },\n          children: \"\\uB9E4\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-buy market\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // 매수 - 예약가 영역\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-availableTrade\",\n            children: [userWallet, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uAC10\\uC2DC\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => dispatch(setBuyingPrice(Number(e.target.value))),\n              value: buyingPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"50000000\",\n              step: 1,\n              value: buyingPrice,\n              className: \"slider buy\",\n              onChange: e => dispatch(setBuyingPrice(Number(e.target.value)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uB9E4\\uC218\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => dispatch(setBuyingPrice(Number(e.target.value))),\n              value: buyingPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"50000000\",\n              step: 1,\n              value: buyingPrice,\n              className: \"slider buy\",\n              onChange: e => dispatch(setBuyingPrice(Number(e.target.value)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"count-percentage\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '10%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('10%'),\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '25%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('25%'),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '50%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('50%'),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '75%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('75%'),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '100%' ? 'buy-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('100%'),\n              children: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uCD1D\\uC561\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 17\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-buy reserve\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC608\\uC57D\\uB9E4\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-buy reserve\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s4(BuyingSection, \"hUNCfYwzyF2ZWED3/izVx7Sm+2c=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFunction];\n});\n_c4 = BuyingSection;\nconst SellingSection = () => {\n  _s5();\n  var _ownedCrypto$find2, _ownedCrypto$find3;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const cr_selected = useSelector(state => state.cr_selected);\n  const cr_market_selected = useSelector(state => state.cr_market_selected);\n  const cr_name_selected = useSelector(state => state.cr_name_selected);\n  const logInEmail = useSelector(state => state.logInEmail);\n  const asking_data = useSelector(state => state.asking_data); // bid = 매수, ask = 매도\n  const ownedCrypto = useSelector(state => state.ownedCrypto);\n  const [selectedPercentage, setSelectedPercentage] = useState('');\n  const [bidSort, setBidSort] = useState('지정가');\n  const sellingPrice = useSelector(state => state.sellingPrice);\n  const [sellTotal, setSellTotal] = useState(0);\n  const [sellQuantity, setSellQuantity] = useState(0);\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\n  const [totalInputValue, setTotalInputvalue] = useState('0');\n  const [sellingInputValue, setSellingInputValue] = useState('0');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [completeModalOpen, setCompleteModalOpen] = useState(false);\n\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\n  const [tradeCategory, setTradeCategory] = useState('매도');\n\n  // 현재 시간을 저장하는 state\n  const [time, setTime] = useState(new Date());\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n  const completeToggleModal = () => {\n    setCompleteModalOpen(!completeModalOpen);\n  };\n  const {\n    getBalance,\n    getOwnedCrypto,\n    addTradeHistory,\n    getTradeHistory\n  } = useFunction();\n\n  // 매도가가 바뀌면 그에 따라 입력값도 변경\n  useEffect(() => {\n    setSellingInputValue(sellingPrice.toString());\n  }, [sellingPrice]);\n\n  // 선택 화폐가 바뀔 때마다 주문 가능한 보유 화폐량을 변경하고, 주문 수량 및 총액을 초기화\n  useEffect(() => {\n    // 주문 수량\n    setSellQuantity(0);\n    setQuantityInputValue('0');\n\n    // 주문 총액\n    setSellTotal(0);\n    setTotalInputvalue('0');\n  }, [cr_name_selected]);\n\n  // 호가와 매도가가 일치할 때\n  const sellCrypto = (email, cryptoName, cryptoQuantity, sellTotal) => {\n    (async (email, cryptoName, cryptoQuantity, sellTotal) => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/sell_crypto/\", {\n          email: email,\n          crypto_name: cryptoName,\n          crypto_quantity: cryptoQuantity,\n          sell_total: sellTotal\n        });\n        console.log(\"매도 화폐 전송 성공\", response.data);\n        getBalance(logInEmail); // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\n        getOwnedCrypto(logInEmail); // 소유 화폐가 새로 추가될 수 있으니 업데이트\n        getTradeHistory(logInEmail); // 매도했으니 업데이트 됐을 거래내역을 가져옴 \n        completeToggleModal();\n      } catch (error) {\n        console.log(\"매도 화폐 전송 실패: \", error);\n      }\n    })(email, cryptoName, cryptoQuantity, sellTotal);\n  };\n  const selectPercentage = percentage => {\n    var _ownedCrypto$find;\n    setSelectedPercentage(percentage);\n\n    // 선택된 화폐의 보유 수량\n    let availableQuantity = (_ownedCrypto$find = ownedCrypto.find(item => item.crypto_name === cr_name_selected)) === null || _ownedCrypto$find === void 0 ? void 0 : _ownedCrypto$find.quantity;\n\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없고, 보유 화폐량이 undefined이면 연산이 불가능 \n    if (sellingInputValue !== '0' && availableQuantity !== undefined) {\n      // 현재 화폐 보유량 기준 퍼센테이지를 '주문수량'에 할당하고, 주문수량이 매도 가격의 어느 정도 비율을 차지하는지를 계산하여 '주문총액'에 할당\n      if (percentage === '10%') {\n        let dividedQuantity = availableQuantity * 0.10;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        let dividedTotal = sellingPrice * dividedQuantity;\n        dividedTotal = Math.ceil(dividedTotal);\n\n        // 주문 수량\n        setSellQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n\n        // 주문 총액\n        setSellTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n      }\n      if (percentage === '25%') {\n        let dividedQuantity = availableQuantity * 0.25;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        let dividedTotal = sellingPrice * dividedQuantity;\n        dividedTotal = Math.ceil(dividedTotal);\n\n        // 주문 수량\n        setSellQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n\n        // 주문 총액\n        setSellTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n      }\n      if (percentage === '50%') {\n        let dividedQuantity = availableQuantity * 0.50;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        let dividedTotal = sellingPrice * dividedQuantity;\n        dividedTotal = Math.ceil(dividedTotal);\n\n        // 주문 수량\n        setSellQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n\n        // 주문 총액\n        setSellTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n      }\n      if (percentage === '75%') {\n        let dividedQuantity = availableQuantity * 0.75;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        let dividedTotal = sellingPrice * dividedQuantity;\n        dividedTotal = Math.ceil(dividedTotal);\n\n        // 주문 수량\n        setSellQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n\n        // 주문 총액\n        setSellTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n      }\n      if (percentage === '100%') {\n        let dividedQuantity = availableQuantity;\n\n        // 소수점 아래 8자리로 제한\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\n        }\n        let dividedTotal = sellingPrice * dividedQuantity;\n        dividedTotal = Math.ceil(dividedTotal);\n\n        // 주문 수량\n        setSellQuantity(dividedQuantity);\n        setQuantityInputValue(dividedQuantity.toString());\n\n        // 주문 총액\n        setSellTotal(Math.floor(dividedTotal));\n        setTotalInputvalue(Math.floor(dividedTotal).toString());\n      }\n    } else if (availableQuantity === undefined) {\n      // 주문 수량\n      setSellQuantity(0);\n      setQuantityInputValue('0');\n\n      // 주문 총액\n      setSellTotal(0);\n      setTotalInputvalue('0');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalSumbit, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      toggleModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComplete, {\n      completeModalOpen: completeModalOpen,\n      setCompleteModalOpen: setCompleteModalOpen,\n      completeToggleModal: completeToggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"trading-headTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"trading-choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"radio\",\n          children: \"\\uC8FC\\uBB38\\uAD6C\\uBD84\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"radio\",\n            id: \"radio1\",\n            className: \"radio-input\",\n            onClick: () => setBidSort('지정가'),\n            checked: bidSort === '지정가'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio-designate radio-label\",\n            htmlFor: \"radio1\",\n            children: \"\\uC9C0\\uC815\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"radio\",\n            id: \"radio2\",\n            className: \"radio-input\",\n            onClick: () => setBidSort('시장가'),\n            checked: bidSort === '시장가'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio-market radio-label\",\n            htmlFor: \"radio2\",\n            children: \"\\uC2DC\\uC7A5\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 7\n    }, this),\n    // 매도 - 지정가 영역\n    bidSort === '지정가' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-availableTrade\",\n            children: [\n            // 보유수량이 undefined 또는 null일 때 0 반환\n            Array.isArray(ownedCrypto) && ((_ownedCrypto$find2 = ownedCrypto.find(item => item.crypto_name === cr_name_selected)) === null || _ownedCrypto$find2 === void 0 ? void 0 : _ownedCrypto$find2.quantity) || '0', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cr_market_selected.slice(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uB9E4\\uB3C4\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: sellingInputValue,\n                onChange: e => {\n                  let value = e.target.value;\n\n                  // 매도가격을 변경했음에도 매도 대기 여부가 true이면 의도치 않게 매도가 완료될 수 있으니, 매도가를 변경했을 때는 매도 대기 여부를 false로 처리\n                  setIsSelling(false);\n\n                  // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                  if (value[0] === '0' && value.length > 1) {\n                    if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                      value = value.substring(1);\n                    }\n                  }\n\n                  // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\n                  value = value.replace(/(\\..*)\\./g, \"$1\");\n\n                  // 숫자와 \".\" 외의 문자를 제거\n                  value = value.replace(/[^0-9.]/g, \"\");\n\n                  // \".\"이 맨 처음에 오지 않도록 함\n                  if (value[0] === '.') {\n                    value = '0' + value;\n                  }\n\n                  // value값이 비게 되면 '0'으로 설정(NaN값 방지)\n                  if (value === '') {\n                    value = '0';\n                  }\n                  dispatch(setSellingPrice(Number(value)));\n                  setSellingInputValue(value);\n                  setSellTotal(Math.floor(parseFloat(value) * sellQuantity));\n                  setTotalInputvalue(Math.floor(parseFloat(value) * sellQuantity).toString());\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"KRW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1332,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"50000000\",\n              step: 1,\n              value: sellingPrice,\n              className: \"slider sell\",\n              onChange: e => dispatch(setSellingPrice(Number(e.target.value)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: quantityInputValue,\n                onChange: e => {\n                  let value = e.target.value;\n\n                  // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                  if (value[0] === '0' && value.length > 1) {\n                    if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                      value = value.substring(1);\n                    }\n                  }\n\n                  // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\n                  value = value.replace(/(\\..*)\\./g, \"$1\");\n\n                  // 숫자와 \".\" 외의 문자를 제거\n                  value = value.replace(/[^0-9.]/g, \"\");\n\n                  // \".\"이 맨 처음에 오지 않도록 함\n                  if (value[0] === '.') {\n                    value = '0' + value;\n                  }\n\n                  // value값이 비게 되면 '0'으로 설정(NaN값 방지)\n                  if (value === '') {\n                    value = '0';\n                  }\n                  const decimalPart = (value.split('.')[1] || '').length;\n\n                  // 소수점 자릿수가 8자리 이하인 경우만\n                  if (decimalPart <= 8) {\n                    setQuantityInputValue(value);\n                    setSellQuantity(parseFloat(value));\n                  }\n                  setSellTotal(Math.floor(sellingPrice * parseFloat(value)));\n                  setTotalInputvalue(Math.floor(sellingPrice * parseFloat(value)).toString());\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"count-percentage\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '10%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('10%'),\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1400,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '25%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('25%'),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1405,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '50%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('50%'),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1410,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '75%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('75%'),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '100%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('100%'),\n              children: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1420,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1397,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uCD1D\\uC561\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: totalInputValue,\n                onChange: e => {\n                  let value = e.target.value;\n\n                  // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                  if (value[0] === '0' && value.length > 1) {\n                    if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                      value = value.substring(1);\n                    }\n                  }\n\n                  // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\n                  const isNumber = /^[0-9]*$/.test(value);\n                  if (value === '') {\n                    value = '0';\n                  }\n                  if (sellingInputValue !== '0') {\n                    if (isNumber) {\n                      setTotalInputvalue(value);\n                      setSellTotal(parseFloat(value));\n                      let dividiedQuantity = Number(value) / sellingPrice;\n\n                      // 소수점 아래 8자리로 제한\n                      if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\n                        dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\n                      }\n                      setSellQuantity(dividiedQuantity);\n                      setQuantityInputValue(dividiedQuantity.toString());\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"KRW\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1430,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 13\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-sell designate\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            // 호가와 매도가가 일치하는지 확인\n            let item = asking_data.find(item => item.bid_price === sellingPrice);\n            if (item !== undefined) {\n              // 일치한다면 바로 매수 요청을 전송\n              sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal);\n              addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\n              // getTradeHistory(logInEmail);\n            } else {\n              // 선택한 화폐에 대한 매도 대기 여부를 true로 설정\n              let temp = localStorage.getItem(`${logInEmail}_IsSelling`);\n              if (temp !== null) {\n                let localStorage_isSelling = JSON.parse(temp);\n                localStorage_isSelling[cr_name_selected] = true;\n                localStorage.setItem(`${logInEmail}_IsSelling`, JSON.stringify(localStorage_isSelling));\n                dispatch(setIsSelling(localStorage_isSelling));\n              }\n\n              // 일치하지 않는다면 대기 모달 팝업\n              toggleModal();\n              setModalOpen(!modalOpen);\n              addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, false);\n              // getTradeHistory(logInEmail);\n            }\n          },\n          children: \"\\uB9E4\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1477,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-sell designate\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) :\n    // 매도 - 시장가 영역\n    bidSort === '시장가' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1519,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-availableTrade\",\n            children: [\n            // 보유수량이 undefined 또는 null일 때 0 반환\n            Array.isArray(ownedCrypto) && ((_ownedCrypto$find3 = ownedCrypto.find(item => item.crypto_name === cr_name_selected)) === null || _ownedCrypto$find3 === void 0 ? void 0 : _ownedCrypto$find3.quantity) || '0', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: quantityInputValue,\n                onChange: e => {\n                  let value = e.target.value;\n\n                  // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\n                  if (value[0] === '0' && value.length > 1) {\n                    if (value[1] === '0' || value[1] >= '1' && value[1] <= '9') {\n                      value = value.substring(1);\n                    }\n                  }\n\n                  // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\n                  value = value.replace(/(\\..*)\\./g, \"$1\");\n\n                  // 숫자와 \".\" 외의 문자를 제거\n                  value = value.replace(/[^0-9.]/g, \"\");\n\n                  // \".\"이 맨 처음에 오지 않도록 함\n                  if (value[0] === '.') {\n                    value = '0' + value;\n                  }\n\n                  // value값이 비게 되면 '0'으로 설정(NaN값 방지)\n                  if (value === '') {\n                    value = '0';\n                  }\n                  const decimalPart = (value.split('.')[1] || '').length;\n\n                  // 소수점 자릿수가 8자리 이하인 경우만\n                  if (decimalPart <= 8) {\n                    setQuantityInputValue(value);\n                    setSellQuantity(parseFloat(value));\n                  }\n                  setSellTotal(Math.floor(sellingPrice * parseFloat(value)));\n                  setTotalInputvalue(Math.floor(sellingPrice * parseFloat(value)).toString());\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1538,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1578,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1537,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1589,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"count-percentage\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '10%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('10%'),\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1591,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '25%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('25%'),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1596,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '50%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('50%'),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1601,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '75%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('75%'),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1606,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '100%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('100%'),\n              children: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1611,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1590,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 17\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-sell market\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick:\n          // 호가와의 일치 여부를 확인하지 않음\n          () => {\n            sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal);\n            addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\n          },\n          children: \"\\uB9E4\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-sell market\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1633,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // 매도 - 예약가 영역\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"trading-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uAC00\\uB2A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1641,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-availableTrade\",\n            children: [\"0\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1643,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1642,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1640,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uAC10\\uC2DC\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1652,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => dispatch(setSellingPrice(Number(e.target.value))),\n              value: sellingPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1654,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1656,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1651,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"50000000\",\n              step: 1,\n              value: sellingPrice,\n              className: \"slider sell\",\n              onChange: e => dispatch(setSellingPrice(Number(e.target.value)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1662,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1661,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1659,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uB9E4\\uB3C4\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => dispatch(setSellingPrice(Number(e.target.value))),\n              value: sellingPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1668,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1667,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1674,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"50000000\",\n              step: 1,\n              value: sellingPrice,\n              className: \"slider sell\",\n              onChange: e => dispatch(setSellingPrice(Number(e.target.value)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1676,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1673,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1680,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1682,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cr_selected && cr_selected.market ? cr_selected.market.slice(4) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1684,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1681,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"count-percentage\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '10%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('10%'),\n              children: \"10%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1695,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '25%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('25%'),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1700,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '50%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('50%'),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '75%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('75%'),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1710,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: selectedPercentage === '100%' ? 'sell-percentage' : 'nonSelected-percentage',\n              onClick: () => selectPercentage('100%'),\n              children: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"trading-category\",\n            children: \"\\uC8FC\\uBB38\\uCD1D\\uC561\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1723,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"KRW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1727,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1724,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 17\n      }, this), logInEmail !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-sell reserve\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC608\\uC57D\\uB9E4\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trading-submit-nonLogIn-sell reserve\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/logIn');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1737,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            navigate('/signUp');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1738,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s5(SellingSection, \"4gnp1pIQE6suD4TbqIQ1X9Gmm4k=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFunction];\n});\n_c5 = SellingSection;\nconst TradeHistory = () => {\n  _s6();\n  const {\n    getTradeHistory\n  } = useFunction();\n  const logInEmail = useSelector(state => state.logInEmail);\n  const userTradeHistory = useSelector(state => state.userTradeHistory);\n  const userTradeHistory_unSigned = useSelector(state => state.userTradeHistory_unSigned);\n  const [completeModalOpen, setCompleteModalOpen] = useState(false);\n  const [historySort, setHistorySort] = useState('체결');\n  const [scheduledCancel, setScheduledCancel] = useState([]);\n  const completeToggleModal = () => {\n    setCompleteModalOpen(!completeModalOpen);\n  };\n\n  // 주문을 취소할 화폐를 서버로 전송\n  const cancelOrder = (email, ids) => {\n    (async (email, ids) => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/cancel_order/\", {\n          ids: ids,\n          email: email\n        });\n        console.log(\"주문 취소 정보 전송 성공\", response.data);\n        getTradeHistory(logInEmail);\n        setScheduledCancel([]);\n        completeToggleModal();\n        let localStorageKeys = [];\n        for (let i = 0; i < localStorage.length; i++) {\n          let key = localStorage.key(i);\n          if (key !== null) {\n            console.log(\"dd \", key);\n            localStorageKeys.push(key);\n          }\n        }\n\n        // ids와 로컬 스토리지에 있는 값 사이 id가 겹치는 것\n        let intersection = ids.filter(item => localStorageKeys.includes(item));\n\n        // 교집합 배열의 특정 요소와 같은 로컬 스토리지의 키를 삭제(주문 취소 요청된 로컬 스토리지 삭제)\n        intersection.forEach(item => {\n          localStorage.removeItem(item);\n        });\n      } catch (error) {\n        console.log(\"주문 취소 정보 전송 실패\");\n      }\n    })(email, ids);\n  };\n  const clickUnSigned = (id, i) => {\n    // 기존 state에 인덱스가 일치하는 속성이 있는지 확인\n    if (scheduledCancel.some(item => item.index === i)) {\n      // 있다면, 인덱스가 다른 부분만을 구분하여 새 배열 생성(인덱스를 제거한다는 의미)\n      setScheduledCancel(scheduledCancel.filter(item => item.index !== i));\n    } else {\n      // 기존 state에 일치하는 인덱스가 없다면 할당\n      setScheduledCancel([...scheduledCancel, {\n        id: id,\n        index: i\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"trading-headTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"trading-choice\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"radio\",\n            children: \"\\uCCB4\\uACB0\\uAD6C\\uBD84\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio\",\n              id: \"radio1\",\n              className: \"radio-input\",\n              onChange: () => setHistorySort('체결'),\n              checked: historySort === '체결'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1827,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-designate radio-label\",\n              htmlFor: \"radio1\",\n              children: \"\\uCCB4\\uACB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1826,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio\",\n              id: \"radio2\",\n              className: \"radio-input\",\n              onChange: () => setHistorySort('미체결'),\n              checked: historySort === '미체결'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1833,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-market radio-label\",\n              htmlFor: \"radio2\",\n              children: \"\\uBBF8\\uCCB4\\uACB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1834,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1832,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            id: \"trading-history-cancel\",\n            style: {\n              visibility: historySort === '미체결' ? 'visible' : 'hidden'\n            },\n            onClick: () => {\n              let ids = scheduledCancel.map(item => item.id);\n              if (ids.length > 0) {\n                cancelOrder(logInEmail, ids);\n              }\n            },\n            children: \"\\uC8FC\\uBB38 \\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1838,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1822,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1821,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1820,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-tradingHistory historyHead\",\n      id: \"historyHead\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC8FC\\uBB38\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uB9C8\\uCF13\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1861,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uAD6C\\uBD84\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1862,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1860,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uCCB4\\uACB0\\uAC00\\uACA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1865,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\uCCB4\\uACB0\\uAE08\\uC561\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1866,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC218\\uB7C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1868,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1858,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1850,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleBar, {\n      className: \"scrollBar-tradingHistoryTable\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-tradingHistory\",\n        id: \"historyBody\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children:\n          // 체결된 화폐들의 거래내역\n          historySort === '체결' ? userTradeHistory.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.trade_time.slice(0, 10), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1888,\n                  columnNumber: 58\n                }, this), item.trade_time.slice(10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1887,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tradingHistory-market\",\n                  children: item.crypto_market\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1892,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1895,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`,\n                  children: item.trade_category === 'BUY' ? '매수' : '매도'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1896,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1891,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.crypto_price.toLocaleString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1906,\n                  columnNumber: 64\n                }, this), Number(item.trade_price).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1905,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.trade_amount.length <= 10 ? item.trade_amount : item.trade_amount[9] === '.' ? item.trade_amount.substring(0, 9) : item.trade_amount.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1909,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1886,\n              columnNumber: 21\n            }, this);\n          }) :\n          // 체결되지 않은 화폐들의 거래내역\n          userTradeHistory_unSigned !== undefined && Array.isArray(userTradeHistory_unSigned) ? userTradeHistory_unSigned.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `tr-unSigned ${scheduledCancel.some(item => item.index === i) ? 'unSigned-clicked' : ''}`,\n              onClick: () => clickUnSigned(item.id, i),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.trade_time !== undefined ? item.trade_time.slice(0, 10) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1939,\n                  columnNumber: 29\n                }, this), item.trade_time !== undefined ? item.trade_time.slice(10) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1933,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tradingHistory-market\",\n                  children: item.crypto_market !== undefined ? item.crypto_market : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1947,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1954,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`,\n                  children: item.trade_category !== undefined ? item.trade_category === 'BUY' ? '매수' : '매도' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1955,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1946,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.crypto_price !== undefined ? item.crypto_price.toLocaleString() : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1974,\n                  columnNumber: 29\n                }, this), item.trade_price !== undefined ? Number(item.trade_price).toLocaleString() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1968,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.trade_amount !== undefined ? String(item.trade_amount).length <= 10 ? item.trade_amount : String(item.trade_amount)[9] === '.' ? String(item.trade_amount).substring(0, 9) : String(item.trade_amount).substring(0, 10) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1981,\n                columnNumber: 27\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 25\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1880,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1873,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1872,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s6(TradeHistory, \"X/wJ92GKOdU0CK5EwJ0BO3bv9j0=\", false, function () {\n  return [useFunction, useSelector, useSelector, useSelector];\n});\n_c6 = TradeHistory;\nconst useStyles = makeStyles({\n  dialog: {\n    '& .MuiDialog-paper': {\n      width: '600px',\n      height: '200px'\n    },\n    '& .MuiDialogTitle-root .MuiTypography-root': {\n      marginTop: '10px',\n      marginLeft: '10px',\n      fontWeight: 'bold'\n    },\n    '& .MuiDialogContent-root': {\n      marginTop: '-10px',\n      marginLeft: '10px'\n    },\n    '& .MuiDialogActions-root': {\n      marginBottom: '10px'\n    },\n    '& .MuiDialogActions-root .MuiButton-root': {\n      fontWeight: 'bold',\n      fontSize: '14.5px'\n    }\n  }\n});\nconst ModalSumbit = ({\n  modalOpen,\n  toggleModal\n}) => {\n  _s7();\n  const classes = useStyles();\n  const sectionChange = useSelector(state => state.sectionChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modalOpen,\n      onClose: toggleModal,\n      className: classes.dialog,\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\uC548\\uB0B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children:\n        // JSX에서는 +등으로 문자열을 묶을 수 없으므로 하나의 배열로 반환\n        sectionChange === '매수' ? [\"매수 요청이 정상적으로 완료되었습니다.\", /*#__PURE__*/_jsxDEV(\"br\", {}, \"buy\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 2059,\n          columnNumber: 41\n        }, this), \"요청하신 매수 가격과 일치하는 매수 요청이 발생하면 거래가 완료됩니다.\"] : [\"매도 요청이 정상적으로 완료되었습니다.\", /*#__PURE__*/_jsxDEV(\"br\", {}, \"sell\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 2061,\n          columnNumber: 41\n        }, this), \"요청하신 매도 가격과 일치하는 매도 요청이 발생하면 거래가 완료됩니다.\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2055,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleModal,\n          color: \"primary\",\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2066,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2065,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2053,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2052,\n    columnNumber: 5\n  }, this);\n};\n_s7(ModalSumbit, \"4uB8zNoCmx0M4ypnz6vpQW2i1Y4=\", false, function () {\n  return [useStyles, useSelector];\n});\n_c7 = ModalSumbit;\nconst ModalComplete = ({\n  completeModalOpen,\n  completeToggleModal\n}) => {\n  _s8();\n  const classes = useStyles();\n  const sectionChange = useSelector(state => state.sectionChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: completeModalOpen,\n      onClose: completeToggleModal,\n      className: classes.dialog,\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\uC548\\uB0B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2081,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: sectionChange === '매수' ? \"성공적으로 화폐를 매수했습니다.\" : \"성공적으로 화폐를 매도했습니다.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2082,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: completeToggleModal,\n          color: \"primary\",\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2090,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2089,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2080,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2079,\n    columnNumber: 5\n  }, this);\n};\n_s8(ModalComplete, \"4uB8zNoCmx0M4ypnz6vpQW2i1Y4=\", false, function () {\n  return [useStyles, useSelector];\n});\n_c8 = ModalComplete;\nexport { PriceDetail };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PriceDetail\");\n$RefreshReg$(_c2, \"AskingPrice\");\n$RefreshReg$(_c3, \"ClosedPrice\");\n$RefreshReg$(_c4, \"BuyingSection\");\n$RefreshReg$(_c5, \"SellingSection\");\n$RefreshReg$(_c6, \"TradeHistory\");\n$RefreshReg$(_c7, \"ModalSumbit\");\n$RefreshReg$(_c8, \"ModalComplete\");","map":{"version":3,"names":["useDispatch","useSelector","setAsking_dateTime","setBuyingPrice","setIsBuying","setIsSelling","setSectionChange","setSellingPrice","useEffect","useState","useNavigate","SimpleBar","axios","useFunction","Dialog","DialogTitle","DialogContent","DialogActions","Button","makeStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","PriceDetail","_s","dispatch","buyCrypto_unSigned","sellCrypto_unSigned","sectionChange","state","askingData_unSigned","logInEmail","completeModalOpen","setCompleteModalOpen","completeToggleModal","localStorageItem","i","localStorage","length","tempKey","key","valueItem","getItem","tempValue","JSON","parse","push","id","price","Number","name","trade_amount","trade_price","Object","keys","forEach","cryptoName","scheduledCrypto","j","k","ask_price","console","log","bid_price","sellC","children","ModalComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","AskingPrice","ClosedPrice","onClick","BuyingSection","SellingSection","TradeHistory","_c","_s2","asking_data","cr_market_selected","asking_dateTime","asking_totalAskSize","asking_totalBidSize","prevData","setPrevData","differences_ask","setDifferences_ask","differences_bid","setDifferences_bid","newDifferences_ask","newDifferences_bid","undefined","value","index","ask_size","new_ask_price","new_ask_size","bid_size","new_bid_price","new_bid_size","date","Date","isNaN","getTime","newDateString","Intl","DateTimeFormat","month","day","hour","minute","hour12","format","replace","slice","map","item","isChanged_bid","some","bidClass","percentage","str_bid_size","String","Math","floor","substring","endsWith","style","background","toLocaleString","isChange_ask","askClass","str_ask_size","_c2","_s3","closed_data","timestamp","trade_time","str_trade_volume","trade_volume","ask_bid","_c3","_s4","navigate","cr_selected","cr_name_selected","userWallet","theme","buyingPrice","selectedPercentage","setSelectedPercentage","bidSort","setBidSort","buyTotal","setBuyTotal","buyQuantity","setBuyQuantity","quantityInputValue","setQuantityInputValue","totalInputValue","setTotalInputvalue","buyingInputValue","setBuyingInputValue","matchedItem","setMatchedItem","isBuying","modalOpen","setModalOpen","tradeCategory","setTradeCategory","time","setTime","toggleModal","getBalance","getOwnedCrypto","addTradeHistory","getTradeHistory","getCryptoName","toString","buyCrypto","email","cryptoQuantity","response","post","crypto_name","crypto_quantity","buy_total","data","error","selectPercentage","dividedTotal","dividedQuantity","split","parseFloat","toFixed","ModalSumbit","type","onChange","checked","htmlFor","e","target","min","max","step","decimalPart","market","isNumber","test","dividiedQuantity","find","temp","localStorage_isBuying","setItem","stringify","_c4","_s5","_ownedCrypto$find2","_ownedCrypto$find3","ownedCrypto","sellingPrice","sellTotal","setSellTotal","sellQuantity","setSellQuantity","sellingInputValue","setSellingInputValue","sellCrypto","sell_total","_ownedCrypto$find","availableQuantity","quantity","ceil","Array","isArray","localStorage_isSelling","_c5","_s6","userTradeHistory","userTradeHistory_unSigned","historySort","setHistorySort","scheduledCancel","setScheduledCancel","cancelOrder","ids","localStorageKeys","intersection","filter","includes","removeItem","clickUnSigned","visibility","crypto_market","trade_category","crypto_price","_c6","useStyles","dialog","width","height","marginTop","marginLeft","fontWeight","marginBottom","fontSize","_s7","classes","open","onClose","maxWidth","color","_c7","_s8","_c8","$RefreshReg$"],"sources":["C:/VS_Project/JeayBit/client/src/components/PriceDetail.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { AskingData, RootState, setAsking_dateTime, setBuyingPrice, setIsBuying, setIsSelling, setSectionChange, setSellingPrice } from \"../store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport axios from \"axios\";\r\nimport useFunction from \"./useFuction\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, makeStyles } from '@material-ui/core';\r\n\r\nconst PriceDetail = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { buyCrypto_unSigned, sellCrypto_unSigned } = useFunction();\r\n\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n  const askingData_unSigned = useSelector((state: RootState) => state.askingData_unSigned);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  // 미체결 화폐 매수 - 구매 대기 상태에서 동작 \r\n  useEffect(() => {\r\n\r\n    let localStorageItem: {\r\n      id: string,\r\n      price: number,\r\n      name: string,\r\n      trade_amount: number,\r\n      trade_price: number,\r\n    }[] = [];\r\n\r\n    // 로컬 스토리지에 있는 key-value를 꺼냄\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let tempKey = localStorage.key(i);\r\n\r\n      if (tempKey !== null) {\r\n        let valueItem = localStorage.getItem(tempKey);\r\n\r\n        if (valueItem !== null) {\r\n          let tempValue = JSON.parse(valueItem);\r\n          localStorageItem.push({\r\n            id: tempKey,\r\n            price: Number(tempValue.price),\r\n            name: tempValue.name,\r\n            trade_amount: tempValue.trade_amount,\r\n            trade_price: tempValue.trade_price,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\r\n    // console.log(\"미체결 : \", askingData_unSigned);\r\n\r\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\r\n    Object.keys(askingData_unSigned).forEach((cryptoName) => {\r\n\r\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\r\n      let scheduledCrypto = [];\r\n      for (let i = 0; i < localStorageItem.length; i++) {\r\n        if (cryptoName === localStorageItem[i].name) {\r\n          scheduledCrypto.push(localStorageItem[i]);\r\n        }\r\n      }\r\n\r\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\r\n      for (let j = 0; j < scheduledCrypto.length; j++) {\r\n\r\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\r\n        for (let k = 0; k < (askingData_unSigned[cryptoName]).length; k++) {\r\n\r\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].ask_price);\r\n\r\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\r\n          if (scheduledCrypto[j].price === (askingData_unSigned[cryptoName])[k].ask_price) {\r\n\r\n            console.log(\"매수 - 일치\", scheduledCrypto[j].price);\r\n            buyCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\r\n            completeToggleModal();\r\n          }\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }, [askingData_unSigned, buyCrypto_unSigned, completeToggleModal, logInEmail])\r\n\r\n  // 미체결 화폐 매도 - 매도 대기 상태에서 동작 \r\n  useEffect(() => {\r\n\r\n    let localStorageItem: {\r\n      id: string,\r\n      price: number,\r\n      name: string,\r\n      trade_amount: number,\r\n      trade_price: number,\r\n    }[] = [];\r\n\r\n    // 로컬 스토리지에 있는 key-value를 꺼냄\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let tempKey = localStorage.key(i);\r\n\r\n      if (tempKey !== null) {\r\n        let valueItem = localStorage.getItem(tempKey);\r\n\r\n        if (valueItem !== null) {\r\n          let tempValue = JSON.parse(valueItem);\r\n          localStorageItem.push({\r\n            id: tempKey,\r\n            price: Number(tempValue.price),\r\n            name: tempValue.name,\r\n            trade_amount: tempValue.trade_amount,\r\n            trade_price: tempValue.trade_price,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log(\"로컬 스토리지 : \", localStorageItem);\r\n    // console.log(\"미체결 : \", askingData_unSigned);\r\n\r\n    // 미체결 화폐 state의 키를 배열로 생성하고, 순차적으로 반복문 실행\r\n    Object.keys(askingData_unSigned).forEach((cryptoName) => {\r\n\r\n      // state의 키와 일치하는 화폐명을 가진 값을 로컬 스토리지에서 꺼내와서, 배열에 push\r\n      let scheduledCrypto = [];\r\n      for (let i = 0; i < localStorageItem.length; i++) {\r\n        if (cryptoName === localStorageItem[i].name) {\r\n          scheduledCrypto.push(localStorageItem[i]);\r\n        }\r\n      }\r\n\r\n      // 로컬 스토리지에서 가져온 값을 기준으로 반복문 동작 - 호가를 순회하면서 값을 비교하기 위함\r\n      for (let j = 0; j < scheduledCrypto.length; j++) {\r\n\r\n        // 이중 for문으로 로컬 스토리지 값 하나당 모든 호가를 비교하며 가격 비교\r\n        for (let k = 0; k < (askingData_unSigned[cryptoName]).length; k++) {\r\n\r\n          // console.log(\"호가 : \", askingData_unSigned[cryptoName][k].bid_price);\r\n\r\n          // 로컬 스토리지에서 가져온 값과 호가가 일치한다면 구매 요청\r\n          if (scheduledCrypto[j].price === (askingData_unSigned[cryptoName])[k].bid_price) {\r\n\r\n            console.log(\"매도 - 일치\", scheduledCrypto[j].price);\r\n            sellCrypto_unSigned(scheduledCrypto[j].id, logInEmail, scheduledCrypto[j].name, scheduledCrypto[j].trade_amount, scheduledCrypto[j].trade_price);\r\n            completeToggleModal();\r\n          }\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }, [askingData_unSigned, completeToggleModal, logInEmail, sellC])\r\n\r\n  return (\r\n    <>\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <div className=\"lightMode\">\r\n        <div className=\"priceDetail-title askingTitle lightMode\">호가내역</div>\r\n        <AskingPrice />\r\n        <div className=\"priceDetail-title closedTitle lightMode\">체결내역</div>\r\n        <ClosedPrice />\r\n        <div className=\"trading-section lightMode-title\">\r\n          <span className={`${sectionChange === '매수' ?\r\n            'buyingSection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('매수'))}>매수</span>\r\n          <span className={`${sectionChange === '매도' ?\r\n            'sellingSection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('매도'))}>매도</span>\r\n          <span className={`${sectionChange === '거래내역' ?\r\n            'tradingHistorySection' :\r\n            ''\r\n            }`} onClick={() => dispatch(setSectionChange('거래내역'))}>거래내역</span>\r\n        </div>\r\n        {\r\n          sectionChange === '매수' ?\r\n            <BuyingSection /> :\r\n            (\r\n              sectionChange === '매도' ?\r\n                <SellingSection /> :\r\n                <TradeHistory />\r\n            )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// bid = 매수, ask = 매도\r\nconst AskingPrice = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const asking_dateTime = useSelector((state: RootState) => state.asking_dateTime);\r\n  const asking_totalAskSize = useSelector((state: RootState) => state.asking_totalAskSize);\r\n  const asking_totalBidSize = useSelector((state: RootState) => state.asking_totalBidSize);\r\n\r\n  const [prevData, setPrevData] = useState<AskingData[]>();\r\n\r\n  const [differences_ask, setDifferences_ask] = useState<{\r\n    new_ask_price: number,\r\n    new_ask_size: number\r\n  }[]>([]);\r\n\r\n  const [differences_bid, setDifferences_bid] = useState<{\r\n    new_bid_price: number,\r\n    new_bid_size: number,\r\n  }[]>([]);\r\n\r\n  // 호가 수량의 변화를 감지하고 이전 값과 비교하여 변화가 생긴 값을 상태에 업데이트\r\n  useEffect(() => {\r\n    setPrevData(asking_data);  // state의 업데이트는 비동기적이기 때문에 값이 즉시 바뀌지 않음. 그러므로 이 useEffect() 안에서 prevData는 아직 이전의 값을 가지고 있기 때문에 cr_price와 prevData는 다른 값을 가짐. (cr_price = 현재값, prevData = 이전값)\r\n\r\n    let newDifferences_ask: {\r\n      new_ask_price: number,\r\n      new_ask_size: number,\r\n    }[] = [];\r\n    let newDifferences_bid: {\r\n      new_bid_price: number,\r\n      new_bid_size: number,\r\n    }[] = [];\r\n\r\n    if (prevData !== undefined) {\r\n      prevData.forEach((value, index) => {\r\n        if (value.ask_size !== asking_data[index].ask_size) {\r\n          newDifferences_ask.push({ new_ask_price: asking_data[index].ask_price, new_ask_size: asking_data[index].ask_size });\r\n        }\r\n        if (value.bid_size !== asking_data[index].bid_size) {\r\n          newDifferences_bid.push({ new_bid_price: asking_data[index].bid_price, new_bid_size: asking_data[index].bid_size });\r\n        }\r\n      })\r\n    }\r\n\r\n    setDifferences_ask(newDifferences_ask)\r\n    setDifferences_bid(newDifferences_bid);\r\n  }, [asking_data])\r\n\r\n  if (asking_dateTime) {\r\n    const date = new Date(asking_dateTime);\r\n    if (!isNaN(date.getTime())) {\r\n      let newDateString = new Intl.DateTimeFormat('ko-KR', {\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: false,  // 24시간 형식\r\n      }).format(date);\r\n\r\n      dispatch(setAsking_dateTime(\r\n        newDateString.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\")\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"askingPrice-table lightMode\">\r\n        <thead className=\"lightMode-title\">\r\n          <tr>\r\n            <th>등록시간</th>\r\n            <th>호가</th>\r\n            <th>\r\n              수량<span>({(cr_market_selected).slice(4)})</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-askingPriceTable\">\r\n        <table className=\"askingPrice-table lightMode\">\r\n          <tbody>\r\n            {\r\n              asking_data.map((item, i) => {\r\n                // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\r\n                let isChanged_bid = differences_bid.some((value, index) => {\r\n                  return value.new_bid_size === item.bid_size;\r\n                })\r\n                let bidClass = isChanged_bid ? 'change-bid' : '';\r\n                const percentage = (item.bid_size / asking_totalBidSize) * 100;  // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\r\n\r\n                let str_bid_size;\r\n\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.bid_size > 9999999999999) {\r\n                  str_bid_size = String(Math.floor(item.bid_size));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_bid_size = String(item.bid_size);\r\n                  str_bid_size = str_bid_size.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_bid_size.endsWith('.')) {\r\n                  str_bid_size = str_bid_size.slice(0, -1);\r\n                }\r\n\r\n                return (\r\n                  <tr\r\n                    key={i}\r\n                    style={{ background: `linear-gradient(270deg, rgba(34,171,148, .2) ${percentage}%, transparent ${percentage}%)` }}>\r\n                    <td>{asking_dateTime}</td>\r\n                    <td>{(item.bid_price).toLocaleString()}</td>\r\n                    <td className={bidClass}>{str_bid_size}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            {\r\n              asking_data.map((item, i) => {\r\n                // 이전 호가와 현재 호가를 비교한 값을 이용 - 변경된 호가가 현재 state를 순회하면서 일치하는 값에 대해서 스타일 지정\r\n                let isChange_ask = differences_ask.some((value, index) => {\r\n                  return value.new_ask_size === item.ask_size;\r\n                })\r\n                let askClass = isChange_ask ? 'change-ask' : '';\r\n                const percentage = (item.ask_size / asking_totalAskSize) * 100;  // 전체호가를 각각 호가로 나누어 비울을 환산한 후 해당 비율만큼 스타일 설정\r\n\r\n                let str_ask_size;\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.ask_size > 9999999999999) {\r\n                  str_ask_size = String(Math.floor(item.ask_size));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_ask_size = String(item.ask_size);\r\n                  str_ask_size = str_ask_size.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_ask_size.endsWith('.')) {\r\n                  str_ask_size = str_ask_size.slice(0, -1)\r\n                }\r\n\r\n                return (\r\n                  <tr\r\n                    key={i}\r\n                    style={{ background: `linear-gradient(270deg, rgba(242,54,69, .2) ${percentage}%, transparent ${percentage}%)` }}>\r\n                    <td>{asking_dateTime}</td>\r\n                    <td>{(item.ask_price).toLocaleString()}</td>\r\n                    <td className={askClass}>{str_ask_size}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ClosedPrice = () => {\r\n\r\n  const closed_data = useSelector((state: RootState) => state.closed_data);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n\r\n  return (\r\n    <>\r\n      {/* 스크롤바를 넣기 위해 테이블을 두 개로 구성 */}\r\n      <table className=\"closedPrice-table lightMode-title\">\r\n        <thead>\r\n          <tr>\r\n            <th>체결시간</th>\r\n            <th>체결가격</th>\r\n            <th>\r\n              체결량<span>({(cr_market_selected).slice(4)})</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-closedPriceTable\">\r\n        <table className=\"closedPrice-table\">\r\n          <tbody>\r\n            {\r\n              closed_data.map((item, i) => {\r\n                const date = new Date(item.timestamp);\r\n                let trade_time = new Intl.DateTimeFormat('ko-KR', {\r\n                  month: '2-digit',\r\n                  day: '2-digit',\r\n                  hour: '2-digit',\r\n                  minute: '2-digit',\r\n                  hour12: false,  // 24시간 형식\r\n                }).format(date);\r\n                trade_time = trade_time.replace(\". \", \"/\").replace(\".\", \"\").replace(\"오전 \", \"\").replace(\"오후 \", \"\")\r\n\r\n                let str_trade_volume;\r\n\r\n                // 14자리 이상의 정수인 경우, 14자리로 줄이고 문자열로 반환\r\n                if (item.trade_volume > 9999999999999) {\r\n                  str_trade_volume = String(Math.floor(item.trade_volume));\r\n                }\r\n                // 소수점을 포함하여 14자리를 넘어갈 수 있는 경우를 처리\r\n                else {\r\n                  str_trade_volume = String(item.trade_volume);\r\n                  str_trade_volume = str_trade_volume.substring(0, 14);\r\n                }\r\n\r\n                // 문자열의 끝이 '.'로 끝난다면 .을 제거\r\n                if (str_trade_volume.endsWith('.')) {\r\n                  str_trade_volume = str_trade_volume.slice(0, -1)\r\n                }\r\n\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{trade_time}</td>\r\n                    <td>{(item.trade_price).toLocaleString()}</td>\r\n                    {\r\n                      item.ask_bid === 'BID' ?\r\n                        <td className=\"td-rise\">{str_trade_volume}</td> :\r\n                        <td className=\"td-fall\">{str_trade_volume}</td>\r\n                    }\r\n                  </tr>\r\n                )\r\n              }\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BuyingSection = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n  const cr_name_selected = useSelector((state: RootState) => state.cr_name_selected);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const userWallet = useSelector((state: RootState) => state.userWallet);\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);  // bid = 매수, ask = 매도\r\n  const theme = useSelector((state: RootState) => state.theme);\r\n  const buyingPrice = useSelector((state: RootState) => state.buyingPrice);\r\n\r\n  const [selectedPercentage, setSelectedPercentage] = useState<string>('');\r\n  const [bidSort, setBidSort] = useState<string>('지정가');\r\n\r\n  const [buyTotal, setBuyTotal] = useState<number>(0);\r\n  const [buyQuantity, setBuyQuantity] = useState<number>(0);\r\n\r\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\r\n  const [totalInputValue, setTotalInputvalue] = useState('0');\r\n  const [buyingInputValue, setBuyingInputValue] = useState('0');\r\n\r\n  // 구매하려는 화폐의 가격과 호가 사이의 일치 여부\r\n  const [matchedItem, setMatchedItem] = useState<AskingData | null>(null);\r\n\r\n  // 화폐를 구매하기 위해 대기중인지 여부\r\n  const isBuying = useSelector((state: RootState) => state.isBuying);\r\n\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\r\n  const [tradeCategory, setTradeCategory] = useState<string>('매수');\r\n\r\n  // 현재 시간을 저장하는 state\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  const { getBalance, getOwnedCrypto, addTradeHistory, getTradeHistory, getCryptoName, buyCrypto_unSigned } = useFunction();\r\n\r\n  // 매수가가 바뀌면 그에 따라 입력값도 변경\r\n  useEffect(() => {\r\n    setBuyingInputValue(buyingPrice.toString())\r\n  }, [buyingPrice])\r\n\r\n  // 선택 화폐가 바뀔 때마다 매수 가격을 해당 화폐의 가격으로 변경하고, 주문 수량 및 총액을 초기화\r\n  useEffect(() => {\r\n    // 주문 수량\r\n    setBuyQuantity(0);\r\n    setQuantityInputValue('0');\r\n\r\n    // 주문 총액\r\n    setBuyTotal(0);\r\n    setTotalInputvalue('0');\r\n  }, [cr_name_selected])\r\n\r\n  // 호가와 구매가가 일치할 때\r\n  const buyCrypto = (email: string, cryptoName: string, cryptoQuantity: number, buyTotal: number) => {\r\n    (async (email, cryptoName, cryptoQuantity, buyTotal) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/buy_crypto/\", {\r\n          email: email,\r\n          crypto_name: cryptoName,\r\n          crypto_quantity: cryptoQuantity,\r\n          buy_total: buyTotal,\r\n        });\r\n        console.log(\"구매 화폐 전송 성공\", response.data);\r\n        getBalance(logInEmail);  // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\r\n        getOwnedCrypto(logInEmail);  // 소유 화폐가 새로 추가될 수 있으니 업데이트\r\n        getTradeHistory(logInEmail)  // 매수에 성공했으니 거래내역 업데이트\r\n        completeToggleModal();\r\n      } catch (error) {\r\n        console.log(\"구매 화폐 전송 실패: \", error)\r\n      }\r\n    })(email, cryptoName, cryptoQuantity, buyTotal);\r\n  }\r\n\r\n  const selectPercentage = (percentage: string) => {\r\n    setSelectedPercentage(percentage)\r\n\r\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없으므로 \r\n    if (buyingInputValue !== '0') {\r\n\r\n      // 현재 잔고 기준 퍼센테이지를 '주문총액'에 할당하고, 주문총액이 구매하려는 화폐 가격에 대해 어느 정도의 비율을 가지는지 계산\r\n      if (percentage === '10%') {\r\n        let dividedTotal = userWallet * 0.1;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '25%') {\r\n        let dividedTotal = userWallet * 0.25;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '50%') {\r\n        let dividedTotal = userWallet * 0.50;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '75%') {\r\n        let dividedTotal = userWallet * 0.75;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n      if (percentage === '100%') {\r\n        let dividedTotal = userWallet;\r\n        setBuyTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n        let dividedQuantity = dividedTotal / buyingPrice;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        setBuyQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSumbit modalOpen={modalOpen} setModalOpen={setModalOpen} toggleModal={toggleModal} />\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <table className=\"trading-headTable\">\r\n        <tbody>\r\n          <tr className=\"trading-choice\">\r\n            <td className={`radio ${theme ? 'darkMode-title' : 'lightMode-title'}`}>\r\n              주문구분\r\n            </td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onChange={() => (setBidSort('지정가'))} checked={bidSort === '지정가'}></input>\r\n              <label className={`radio-designate radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`} htmlFor=\"radio1\">\r\n                지정가\r\n              </label>\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onChange={() => (setBidSort('시장가'))} checked={bidSort === '시장가'}></input>\r\n              <label className={`radio-market radio-label ${theme ? 'darkMode-title' : 'lightMode-title'}`} htmlFor=\"radio2\">\r\n                시장가\r\n              </label>\r\n            </td>\r\n            {/* <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio3\" className=\"radio-input\" onChange={() => (setBidSort('예약가'))} checked={bidSort === '예약가'}></input>\r\n              <label className=\"radio-reserve radio-label\" htmlFor=\"radio3\">\r\n                예약/지정가\r\n              </label>\r\n            </td> */}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {\r\n        // 매수 - 지정가 영역\r\n        bidSort === '지정가' ?\r\n          <>\r\n            <table className=\"trading-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"trading-category\">주문가능</td>\r\n                  <td className=\"trading-availableTrade\">{(Number(userWallet).toLocaleString())}\r\n                    <span>KRW</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"trading-category\">매수가격</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={buyingInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 매수가격을 변경했음에도 구매 대기 여부가 true이면 의도치 않게 매수가 완료될 수 있으니, 매수가를 변경했을 때는 구매 대기 여부를 false로 처리\r\n                          // let updatedIsBuying = { ...isBuying };\r\n                          // updatedIsBuying[cr_name_selected] = false;\r\n                          // dispatch(setIsBuying(updatedIsBuying));\r\n\r\n                          // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                          value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                          // 숫자와 \".\" 외의 문자를 제거\r\n                          value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                          // \".\"이 맨 처음에 오지 않도록 함\r\n                          if (value[0] === '.') {\r\n                            value = '0' + value;\r\n                          }\r\n\r\n                          // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          dispatch(setBuyingPrice(Number(value)));\r\n                          setBuyingInputValue(value);\r\n                          setBuyTotal(Math.floor(parseFloat(value) * buyQuantity));\r\n                          setTotalInputvalue((Math.floor(parseFloat(value) * buyQuantity)).toString());\r\n                        }} />\r\n                      <span>KRW</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td>\r\n                    <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"trading-category\">주문수량</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={quantityInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                          value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                          // 숫자와 \".\" 외의 문자를 제거\r\n                          value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                          // \".\"이 맨 처음에 오지 않도록 함\r\n                          if (value[0] === '.') {\r\n                            value = '0' + value;\r\n                          }\r\n\r\n                          // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                          // 소수점 자릿수가 8자리 이하인 경우만\r\n                          if (decimalPart <= 8) {\r\n                            setQuantityInputValue(value);\r\n                            setBuyQuantity(parseFloat(value));\r\n                          }\r\n                          setBuyTotal(Math.floor(buyingPrice * parseFloat(value)));\r\n                          setTotalInputvalue((Math.floor(buyingPrice * parseFloat(value))).toString());\r\n                        }}\r\n                      />\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td className=\"count-percentage\">\r\n                    <span className={\r\n                      selectedPercentage === '10%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                    <span className={\r\n                      selectedPercentage === '25%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                    <span className={\r\n                      selectedPercentage === '50%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                    <span className={\r\n                      selectedPercentage === '75%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                    <span className={\r\n                      selectedPercentage === '100%' ?\r\n                        'buy-percentage' :\r\n                        'nonSelected-percentage'\r\n                    } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문총액</td>\r\n                  <td className=\"td-input\">\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`${theme ? 'darkMode-title' : 'lightMode-title'}`}\r\n                        value={totalInputValue}\r\n                        onChange={(e) => {\r\n                          let value = e.target.value;\r\n\r\n                          // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                          if (value[0] === '0' && value.length > 1) {\r\n                            if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                              value = value.substring(1);\r\n                            }\r\n                          }\r\n\r\n                          // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\r\n                          const isNumber = /^[0-9]*$/.test(value);\r\n\r\n                          if (value === '') {\r\n                            value = '0';\r\n                          }\r\n\r\n                          if (buyingInputValue !== '0') {\r\n\r\n                            if (isNumber) {\r\n                              setTotalInputvalue(value);\r\n                              setBuyTotal(parseFloat(value));\r\n\r\n                              let dividiedQuantity = Number(value) / buyingPrice;\r\n\r\n                              // 소수점 아래 8자리로 제한\r\n                              if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\r\n                                dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\r\n                              }\r\n\r\n                              setBuyQuantity(dividiedQuantity);\r\n                              setQuantityInputValue(dividiedQuantity.toString());\r\n                            }\r\n                          }\r\n                        }} />\r\n                      <span>KRW</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {\r\n              logInEmail !== '' ?\r\n                <div className=\"trading-submit-buy designate\">\r\n                  <span onClick={() => {\r\n                    // 호가와 구매가가 일치하는지 확인\r\n                    let item = asking_data.find(item => item.ask_price === buyingPrice);\r\n                    if (item !== undefined) {\r\n                      // 일치한다면 바로 매수 요청을 전송\r\n                      buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal);\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                    else {\r\n                      // 선택한 화폐에 대한 구매 대기 여부를 true로 설정\r\n                      let temp = localStorage.getItem(`${logInEmail}_IsBuying`)\r\n                      if (temp !== null) {\r\n                        let localStorage_isBuying = JSON.parse(temp);\r\n                        localStorage_isBuying[cr_name_selected] = true;\r\n                        localStorage.setItem(`${logInEmail}_IsBuying`, JSON.stringify(localStorage_isBuying));\r\n\r\n                        dispatch(setIsBuying(localStorage_isBuying))\r\n                      }\r\n\r\n                      // 일치하지 않는다면 대기 모달 팝업\r\n                      toggleModal();\r\n                      setModalOpen(!modalOpen);\r\n\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, false);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                  }}>매수</span>\r\n                </div> :\r\n                <div className=\"trading-submit-nonLogIn-buy designate\">\r\n                  <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                  <span onClick={() => { navigate('/signUp') }} >회원가입</span>\r\n                </div>\r\n            }\r\n          </> :\r\n          (\r\n            // 매수 - 시장가 영역\r\n            bidSort === '시장가' ?\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문가능</td>\r\n                    <td className=\"trading-availableTrade\">{(Number(userWallet).toLocaleString())}\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className={`trading-category ${theme ? 'darkMode-title' : 'lightMode-title'}`}>주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <div>\r\n                        <input value={buyTotal}>\r\n                        </input>\r\n                        <span>KRW</span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-buy market\">\r\n                      <span onClick={\r\n                        // 호가와의 일치 여부를 확인하지 않음\r\n                        () => {\r\n                          buyCrypto(logInEmail, cr_selected.name, buyQuantity, buyTotal)\r\n                          addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, buyingPrice, buyTotal, buyQuantity, true);\r\n                        }\r\n                      }>\r\n                        매수\r\n                      </span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-buy market\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </> :\r\n              // 매수 - 예약가 영역\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문가능</td>\r\n                    <td className=\"trading-availableTrade\">{userWallet}\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td className=\"trading-category\">감시가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} value={buyingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">매수가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} value={buyingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={buyingPrice} className=\"slider buy\" onChange={(e) => dispatch(setBuyingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'buy-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-buy reserve\">\r\n                      <span>예약매수</span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-buy reserve\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </>\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst SellingSection = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cr_selected = useSelector((state: RootState) => state.cr_selected);\r\n  const cr_market_selected = useSelector((state: RootState) => state.cr_market_selected);\r\n  const cr_name_selected = useSelector((state: RootState) => state.cr_name_selected);\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const asking_data = useSelector((state: RootState) => state.asking_data);  // bid = 매수, ask = 매도\r\n  const ownedCrypto = useSelector((state: RootState) => state.ownedCrypto);\r\n\r\n  const [selectedPercentage, setSelectedPercentage] = useState<string>('');\r\n  const [bidSort, setBidSort] = useState<string>('지정가');\r\n\r\n  const sellingPrice = useSelector((state: RootState) => state.sellingPrice);\r\n  const [sellTotal, setSellTotal] = useState<number>(0);\r\n  const [sellQuantity, setSellQuantity] = useState<number>(0);\r\n\r\n  const [quantityInputValue, setQuantityInputValue] = useState('0');\r\n  const [totalInputValue, setTotalInputvalue] = useState('0');\r\n  const [sellingInputValue, setSellingInputValue] = useState('0');\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  // 화폐 거래내역에 '매수'로 저장할지 '매도'로 저장할지를 지정\r\n  const [tradeCategory, setTradeCategory] = useState<string>('매도');\r\n\r\n  // 현재 시간을 저장하는 state\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  const { getBalance, getOwnedCrypto, addTradeHistory, getTradeHistory } = useFunction();\r\n\r\n  // 매도가가 바뀌면 그에 따라 입력값도 변경\r\n  useEffect(() => {\r\n    setSellingInputValue(sellingPrice.toString());\r\n  }, [sellingPrice])\r\n\r\n  // 선택 화폐가 바뀔 때마다 주문 가능한 보유 화폐량을 변경하고, 주문 수량 및 총액을 초기화\r\n  useEffect(() => {\r\n    // 주문 수량\r\n    setSellQuantity(0);\r\n    setQuantityInputValue('0');\r\n\r\n    // 주문 총액\r\n    setSellTotal(0);\r\n    setTotalInputvalue('0');\r\n  }, [cr_name_selected])\r\n\r\n  // 호가와 매도가가 일치할 때\r\n  const sellCrypto = (email: string, cryptoName: string, cryptoQuantity: number, sellTotal: number) => {\r\n    (async (email, cryptoName, cryptoQuantity, sellTotal) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/sell_crypto/\", {\r\n          email: email,\r\n          crypto_name: cryptoName,\r\n          crypto_quantity: cryptoQuantity,\r\n          sell_total: sellTotal,\r\n        });\r\n        console.log(\"매도 화폐 전송 성공\", response.data);\r\n        getBalance(logInEmail);  // 매수에 사용한 금액만큼 차감되기 때문에 잔고 업데이트\r\n        getOwnedCrypto(logInEmail);  // 소유 화폐가 새로 추가될 수 있으니 업데이트\r\n        getTradeHistory(logInEmail);  // 매도했으니 업데이트 됐을 거래내역을 가져옴 \r\n        completeToggleModal();\r\n      } catch (error) {\r\n        console.log(\"매도 화폐 전송 실패: \", error);\r\n      }\r\n    })(email, cryptoName, cryptoQuantity, sellTotal);\r\n  }\r\n\r\n  const selectPercentage = (percentage: string) => {\r\n    setSelectedPercentage(percentage)\r\n\r\n    // 선택된 화폐의 보유 수량\r\n    let availableQuantity = ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity\r\n\r\n    // 매수가격이 0이면 주문수량/주문총액은 의미가 없고, 보유 화폐량이 undefined이면 연산이 불가능 \r\n    if (sellingInputValue !== '0' && availableQuantity !== undefined) {\r\n\r\n      // 현재 화폐 보유량 기준 퍼센테이지를 '주문수량'에 할당하고, 주문수량이 매도 가격의 어느 정도 비율을 차지하는지를 계산하여 '주문총액'에 할당\r\n      if (percentage === '10%') {\r\n        let dividedQuantity = availableQuantity * 0.10;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '25%') {\r\n        let dividedQuantity = availableQuantity * 0.25;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '50%') {\r\n        let dividedQuantity = availableQuantity * 0.50;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '75%') {\r\n        let dividedQuantity = availableQuantity * 0.75;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n      if (percentage === '100%') {\r\n        let dividedQuantity = availableQuantity;\r\n\r\n        // 소수점 아래 8자리로 제한\r\n        if ((dividedQuantity.toString().split('.')[1] || '').length > 8) {\r\n          dividedQuantity = parseFloat(dividedQuantity.toFixed(8));\r\n        }\r\n\r\n        let dividedTotal = sellingPrice * dividedQuantity\r\n        dividedTotal = Math.ceil(dividedTotal);\r\n\r\n        // 주문 수량\r\n        setSellQuantity(dividedQuantity);\r\n        setQuantityInputValue(dividedQuantity.toString());\r\n\r\n        // 주문 총액\r\n        setSellTotal(Math.floor(dividedTotal));\r\n        setTotalInputvalue((Math.floor(dividedTotal)).toString());\r\n      }\r\n    }\r\n    else if (availableQuantity === undefined) {\r\n      // 주문 수량\r\n      setSellQuantity(0);\r\n      setQuantityInputValue('0');\r\n\r\n      // 주문 총액\r\n      setSellTotal(0);\r\n      setTotalInputvalue('0');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalSumbit modalOpen={modalOpen} setModalOpen={setModalOpen} toggleModal={toggleModal} />\r\n      <ModalComplete completeModalOpen={completeModalOpen} setCompleteModalOpen={setCompleteModalOpen} completeToggleModal={completeToggleModal} />\r\n      <table className=\"trading-headTable\">\r\n        <tr className=\"trading-choice\">\r\n          <td className='radio'>\r\n            주문구분\r\n          </td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onClick={() => (setBidSort('지정가'))} checked={bidSort === '지정가'}></input>\r\n            <label className='radio-designate radio-label' htmlFor=\"radio1\">\r\n              지정가\r\n            </label>\r\n          </td>\r\n          <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onClick={() => (setBidSort('시장가'))} checked={bidSort === '시장가'}></input>\r\n            <label className='radio-market radio-label' htmlFor=\"radio2\">\r\n              시장가\r\n            </label>\r\n          </td>\r\n          {/* <td className=\"radio\">\r\n            <input type=\"radio\" name=\"radio\" id=\"radio3\" className=\"radio-input\" onClick={() => (setBidSort('예약가'))} checked={bidSort === '예약가'}></input>\r\n            <label className=\"radio-reserve radio-label\" htmlFor=\"radio3\">\r\n              예약/지정가\r\n            </label>\r\n          </td> */}\r\n        </tr>\r\n      </table>\r\n      {\r\n        // 매도 - 지정가 영역\r\n        bidSort === '지정가' ?\r\n          <>\r\n            <table className=\"trading-table\">\r\n              <tr>\r\n                <td className='trading-category'>주문가능</td>\r\n                <td className=\"trading-availableTrade\">\r\n                  {\r\n                    // 보유수량이 undefined 또는 null일 때 0 반환\r\n                    (Array.isArray(ownedCrypto) && ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity) || '0'\r\n                  }\r\n                  <span>{(cr_market_selected).slice(4)}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>매도가격</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={sellingInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 매도가격을 변경했음에도 매도 대기 여부가 true이면 의도치 않게 매도가 완료될 수 있으니, 매도가를 변경했을 때는 매도 대기 여부를 false로 처리\r\n                        setIsSelling(false);\r\n\r\n                        // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                        value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                        // 숫자와 \".\" 외의 문자를 제거\r\n                        value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                        // \".\"이 맨 처음에 오지 않도록 함\r\n                        if (value[0] === '.') {\r\n                          value = '0' + value;\r\n                        }\r\n\r\n                        // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        dispatch(setSellingPrice(Number(value)));\r\n                        setSellingInputValue(value);\r\n                        setSellTotal(Math.floor(parseFloat(value) * sellQuantity));\r\n                        setTotalInputvalue((Math.floor(parseFloat(value) * sellQuantity)).toString());\r\n                      }}\r\n                    />\r\n                    <span>KRW</span>\r\n                  </div>\r\n\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>주문수량</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={quantityInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                        value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                        // 숫자와 \".\" 외의 문자를 제거\r\n                        value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                        // \".\"이 맨 처음에 오지 않도록 함\r\n                        if (value[0] === '.') {\r\n                          value = '0' + value;\r\n                        }\r\n\r\n                        // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                        // 소수점 자릿수가 8자리 이하인 경우만\r\n                        if (decimalPart <= 8) {\r\n                          setQuantityInputValue(value);\r\n                          setSellQuantity(parseFloat(value));\r\n                        }\r\n\r\n                        setSellTotal(Math.floor(sellingPrice * parseFloat(value)))\r\n                        setTotalInputvalue((Math.floor(sellingPrice * parseFloat(value))).toString())\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      {\r\n                        cr_selected && cr_selected.market ?\r\n                          (cr_selected.market).slice(4) :\r\n                          null\r\n                      }\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td className=\"count-percentage\">\r\n                  <span className={\r\n                    selectedPercentage === '10%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                  <span className={\r\n                    selectedPercentage === '25%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                  <span className={\r\n                    selectedPercentage === '50%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                  <span className={\r\n                    selectedPercentage === '75%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                  <span className={\r\n                    selectedPercentage === '100%' ?\r\n                      'sell-percentage' :\r\n                      'nonSelected-percentage'\r\n                  } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='trading-category'>주문총액</td>\r\n                <td className=\"td-input\">\r\n                  <div>\r\n                    <input type=\"text\"\r\n                      value={totalInputValue}\r\n                      onChange={(e) => {\r\n                        let value = e.target.value;\r\n\r\n                        // 첫 번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                        if (value[0] === '0' && value.length > 1) {\r\n                          if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                            value = value.substring(1);\r\n                          }\r\n                        }\r\n\r\n                        // 입력값이 숫자인지 확인하고, 숫자 이외의 문자가 포함되어 있는지 확인\r\n                        const isNumber = /^[0-9]*$/.test(value);\r\n\r\n                        if (value === '') {\r\n                          value = '0';\r\n                        }\r\n\r\n                        if (sellingInputValue !== '0') {\r\n\r\n                          if (isNumber) {\r\n                            setTotalInputvalue(value);\r\n                            setSellTotal(parseFloat(value));\r\n\r\n                            let dividiedQuantity = Number(value) / sellingPrice;\r\n\r\n                            // 소수점 아래 8자리로 제한\r\n                            if ((dividiedQuantity.toString().split('.')[1] || '').length > 8) {\r\n                              dividiedQuantity = parseFloat(dividiedQuantity.toFixed(8));\r\n                            }\r\n\r\n                            setSellQuantity(dividiedQuantity);\r\n                            setQuantityInputValue(dividiedQuantity.toString());\r\n                          }\r\n                        }\r\n\r\n                      }}\r\n                    />\r\n                    <span>KRW</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n            {\r\n              logInEmail !== '' ?\r\n                <div className=\"trading-submit-sell designate\">\r\n                  <span onClick={() => {\r\n                    // 호가와 매도가가 일치하는지 확인\r\n                    let item = asking_data.find(item => item.bid_price === sellingPrice);\r\n                    if (item !== undefined) {\r\n                      // 일치한다면 바로 매수 요청을 전송\r\n                      sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal);\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                    else {\r\n                      // 선택한 화폐에 대한 매도 대기 여부를 true로 설정\r\n                      let temp = localStorage.getItem(`${logInEmail}_IsSelling`)\r\n                      if (temp !== null) {\r\n                        let localStorage_isSelling = JSON.parse(temp);\r\n                        localStorage_isSelling[cr_name_selected] = true;\r\n                        localStorage.setItem(`${logInEmail}_IsSelling`, JSON.stringify(localStorage_isSelling));\r\n\r\n                        dispatch(setIsSelling(localStorage_isSelling))\r\n                      }\r\n\r\n                      // 일치하지 않는다면 대기 모달 팝업\r\n                      toggleModal();\r\n                      setModalOpen(!modalOpen);\r\n\r\n                      addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, false);\r\n                      // getTradeHistory(logInEmail);\r\n                    }\r\n                  }}>매도</span>\r\n                </div> :\r\n                <div className=\"trading-submit-nonLogIn-sell designate\">\r\n                  <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                  <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                </div>\r\n            }\r\n          </> :\r\n          (\r\n            // 매도 - 시장가 영역\r\n            bidSort === '시장가' ?\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className='trading-category'>주문가능</td>\r\n                    <td className=\"trading-availableTrade\">\r\n                      {\r\n                        // 보유수량이 undefined 또는 null일 때 0 반환\r\n                        (Array.isArray(ownedCrypto) && ownedCrypto.find((item) => item.crypto_name === cr_name_selected)?.quantity) || '0'\r\n                      }\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className='trading-category'>주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <div>\r\n                        <input type=\"text\"\r\n                          value={quantityInputValue}\r\n                          onChange={(e) => {\r\n                            let value = e.target.value;\r\n\r\n                            // 00, 01, 02, ... 등등 첫번째 숫자가 0인데 그 뒤에 수가 온다면, 그 수로 0을 대체하거나 삭제\r\n                            if (value[0] === '0' && value.length > 1) {\r\n                              if (value[1] === '0' || (value[1] >= '1' && value[1] <= '9')) {\r\n                                value = value.substring(1);\r\n                              }\r\n                            }\r\n\r\n                            // 0..2, 0..4, ... 등등 \".\"이 두 번 이상 나오지 않도록 함\r\n                            value = value.replace(/(\\..*)\\./g, \"$1\");\r\n\r\n                            // 숫자와 \".\" 외의 문자를 제거\r\n                            value = value.replace(/[^0-9.]/g, \"\");\r\n\r\n                            // \".\"이 맨 처음에 오지 않도록 함\r\n                            if (value[0] === '.') {\r\n                              value = '0' + value;\r\n                            }\r\n\r\n                            // value값이 비게 되면 '0'으로 설정(NaN값 방지)\r\n                            if (value === '') {\r\n                              value = '0';\r\n                            }\r\n\r\n                            const decimalPart = (value.split('.')[1] || '').length;\r\n\r\n                            // 소수점 자릿수가 8자리 이하인 경우만\r\n                            if (decimalPart <= 8) {\r\n                              setQuantityInputValue(value);\r\n                              setSellQuantity(parseFloat(value));\r\n                            }\r\n\r\n                            setSellTotal(Math.floor(sellingPrice * parseFloat(value)))\r\n                            setTotalInputvalue((Math.floor(sellingPrice * parseFloat(value))).toString())\r\n                          }}\r\n                        />\r\n                        <span>\r\n                          {\r\n                            cr_selected && cr_selected.market ?\r\n                              (cr_selected.market).slice(4) :\r\n                              null\r\n                          }\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-sell market\">\r\n                      <span onClick={\r\n                        // 호가와의 일치 여부를 확인하지 않음\r\n                        () => {\r\n                          sellCrypto(logInEmail, cr_selected.name, sellQuantity, sellTotal)\r\n                          addTradeHistory(logInEmail, cr_selected.name, tradeCategory, time, cr_selected.market, sellingPrice, sellTotal, sellQuantity, true);\r\n                        }}>\r\n                        매도\r\n                      </span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-sell market\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </> :\r\n              // 매도 - 예약가 영역\r\n              <>\r\n                <table className=\"trading-table\">\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문가능</td>\r\n                    <td className=\"trading-availableTrade\">0\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">감시가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} value={sellingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">매도가격</td>\r\n                    <td className=\"td-input\">\r\n                      <input onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} value={sellingPrice}>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td>\r\n                      <input type=\"range\" min=\"0\" max=\"50000000\" step={1} value={sellingPrice} className=\"slider sell\" onChange={(e) => dispatch(setSellingPrice(Number(e.target.value)))} />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문수량</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>\r\n                        {\r\n                          cr_selected && cr_selected.market ?\r\n                            (cr_selected.market).slice(4) :\r\n                            null\r\n                        }</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                    <td className=\"count-percentage\">\r\n                      <span className={\r\n                        selectedPercentage === '10%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('10%'))}>10%</span>\r\n                      <span className={\r\n                        selectedPercentage === '25%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('25%'))}>25%</span>\r\n                      <span className={\r\n                        selectedPercentage === '50%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('50%'))}>50%</span>\r\n                      <span className={\r\n                        selectedPercentage === '75%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('75%'))}>75%</span>\r\n                      <span className={\r\n                        selectedPercentage === '100%' ?\r\n                          'sell-percentage' :\r\n                          'nonSelected-percentage'\r\n                      } onClick={() => (selectPercentage('100%'))}>100%</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"trading-category\">주문총액</td>\r\n                    <td className=\"td-input\">\r\n                      <input>\r\n                      </input>\r\n                      <span>KRW</span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                {\r\n                  logInEmail !== '' ?\r\n                    <div className=\"trading-submit-sell reserve\">\r\n                      <span>예약매도</span>\r\n                    </div> :\r\n                    <div className=\"trading-submit-nonLogIn-sell reserve\">\r\n                      <span onClick={() => { navigate('/logIn') }}>로그인</span>\r\n                      <span onClick={() => { navigate('/signUp') }}>회원가입</span>\r\n                    </div>\r\n                }\r\n              </>\r\n\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst TradeHistory = () => {\r\n\r\n  const { getTradeHistory } = useFunction();\r\n\r\n  const logInEmail = useSelector((state: RootState) => state.logInEmail);\r\n  const userTradeHistory = useSelector((state: RootState) => state.userTradeHistory)\r\n  const userTradeHistory_unSigned = useSelector((state: RootState) => state.userTradeHistory_unSigned)\r\n\r\n  const [completeModalOpen, setCompleteModalOpen] = useState<boolean>(false);\r\n\r\n  const [historySort, setHistorySort] = useState<string>('체결');\r\n  const [scheduledCancel, setScheduledCancel] = useState<\r\n    {\r\n      id: string,\r\n      index: number,\r\n    }[]>([]);\r\n\r\n  const completeToggleModal = () => {\r\n    setCompleteModalOpen(!completeModalOpen);\r\n  }\r\n\r\n  // 주문을 취소할 화폐를 서버로 전송\r\n  const cancelOrder = (email: string, ids: string[]) => {\r\n    (async (email, ids) => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/cancel_order/\", {\r\n          ids: ids,\r\n          email: email,\r\n        });\r\n        console.log(\"주문 취소 정보 전송 성공\", response.data);\r\n        getTradeHistory(logInEmail);\r\n        setScheduledCancel([]);\r\n        completeToggleModal();\r\n\r\n        let localStorageKeys: string[] = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          let key = localStorage.key(i);\r\n          if (key !== null) {\r\n            console.log(\"dd \", key);\r\n            localStorageKeys.push(key);\r\n          }\r\n        }\r\n\r\n        // ids와 로컬 스토리지에 있는 값 사이 id가 겹치는 것\r\n        let intersection = ids.filter(item => localStorageKeys.includes(item));\r\n\r\n        // 교집합 배열의 특정 요소와 같은 로컬 스토리지의 키를 삭제(주문 취소 요청된 로컬 스토리지 삭제)\r\n        intersection.forEach((item) => {\r\n          localStorage.removeItem(item);\r\n        })\r\n\r\n      } catch (error) {\r\n        console.log(\"주문 취소 정보 전송 실패\");\r\n      }\r\n    })(email, ids);\r\n  }\r\n\r\n  const clickUnSigned = (id: string, i: number) => {\r\n    // 기존 state에 인덱스가 일치하는 속성이 있는지 확인\r\n    if (scheduledCancel.some(item => item.index === i)) {\r\n      // 있다면, 인덱스가 다른 부분만을 구분하여 새 배열 생성(인덱스를 제거한다는 의미)\r\n      setScheduledCancel(scheduledCancel.filter(item => item.index !== i));\r\n    }\r\n    else {\r\n      // 기존 state에 일치하는 인덱스가 없다면 할당\r\n      setScheduledCancel([...scheduledCancel, { id: id, index: i }]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"trading-headTable\">\r\n        <tbody>\r\n          <tr className=\"trading-choice\">\r\n            <td className=\"radio\">\r\n              체결구분\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio1\" className=\"radio-input\" onChange={() => (setHistorySort('체결'))} checked={historySort === '체결'}></input>\r\n              <label className=\"radio-designate radio-label\" htmlFor=\"radio1\">\r\n                체결\r\n              </label>\r\n            </td>\r\n            <td className=\"radio\">\r\n              <input type=\"radio\" name=\"radio\" id=\"radio2\" className=\"radio-input\" onChange={() => (setHistorySort('미체결'))} checked={historySort === '미체결'}></input>\r\n              <label className=\"radio-market radio-label\" htmlFor=\"radio2\">\r\n                미체결\r\n              </label>\r\n            </td>\r\n            <td id=\"trading-history-cancel\" style={{ visibility: historySort === '미체결' ? 'visible' : 'hidden' }} onClick={() => {\r\n              let ids: string[] = scheduledCancel.map(item => item.id);\r\n              if (ids.length > 0) {\r\n                cancelOrder(logInEmail, ids);\r\n              }\r\n            }}>\r\n              주문 취소\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <table className=\"table-tradingHistory historyHead\" id=\"historyHead\">\r\n        {/* <colgroup>\r\n          <col width={75} />\r\n          <col width={75} />\r\n          <col width={80} />\r\n          <col width={85} />\r\n        </colgroup> */}\r\n        <thead>\r\n          <tr>\r\n            <th>주문시간</th>\r\n            <th>\r\n              <div>마켓</div>\r\n              <div>구분</div>\r\n            </th>\r\n            <th>\r\n              <div>체결가격</div>\r\n              <div>체결금액</div>\r\n            </th>\r\n            <th>수량</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <SimpleBar className=\"scrollBar-tradingHistoryTable\">\r\n        <table className=\"table-tradingHistory\" id=\"historyBody\">\r\n          {/* <colgroup>\r\n            <col width={75} />\r\n            <col width={75} />\r\n            <col width={80} />\r\n            <col width={85} />\r\n          </colgroup> */}\r\n          <tbody>\r\n            {\r\n              // 체결된 화폐들의 거래내역\r\n              historySort === '체결' ?\r\n                userTradeHistory.map((item, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <td>\r\n                        {(item.trade_time).slice(0, 10)} <br />\r\n                        {(item.trade_time).slice(10)}\r\n                      </td>\r\n                      <td>\r\n                        <span className=\"tradingHistory-market\">\r\n                          {item.crypto_market}\r\n                        </span>\r\n                        <br />\r\n                        <span className={`tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`}>\r\n\r\n                          {\r\n                            item.trade_category === 'BUY' ?\r\n                              '매수' :\r\n                              '매도'\r\n                          }\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        {(item.crypto_price).toLocaleString()} <br />\r\n                        {(Number(item.trade_price)).toLocaleString()}\r\n                      </td>\r\n                      <td>\r\n                        {\r\n                          (item.trade_amount).length <= 10 ?\r\n                            item.trade_amount :\r\n                            (\r\n                              item.trade_amount[9] === '.' ?\r\n                                (item.trade_amount).substring(0, 9) :\r\n                                (item.trade_amount).substring(0, 10)\r\n                            )\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }) :\r\n                // 체결되지 않은 화폐들의 거래내역\r\n                userTradeHistory_unSigned !== undefined && Array.isArray(userTradeHistory_unSigned) ?\r\n                  (\r\n                    userTradeHistory_unSigned.map((item, i) => {\r\n                      return (\r\n                        <tr className={`tr-unSigned ${scheduledCancel.some(item => item.index === i) ?\r\n                          'unSigned-clicked' : ''\r\n                          }`}\r\n                          key={i}\r\n                          onClick={() => clickUnSigned(item.id, i)}>\r\n                          <td>\r\n                            {\r\n                              item.trade_time !== undefined ?\r\n                                (item.trade_time).slice(0, 10) :\r\n                                null\r\n                            }\r\n                            <br />\r\n                            {\r\n                              item.trade_time !== undefined ?\r\n                                (item.trade_time).slice(10) :\r\n                                null\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            <span className=\"tradingHistory-market\">\r\n                              {\r\n                                item.crypto_market !== undefined ?\r\n                                  item.crypto_market :\r\n                                  null\r\n                              }\r\n                            </span>\r\n                            <br />\r\n                            <span className={`tradingHistory-category ${item.trade_category === 'BUY' ? 'asking-buy' : 'asking-sell'}`}>\r\n\r\n                              {\r\n                                item.trade_category !== undefined ? (\r\n\r\n                                  item.trade_category === 'BUY' ?\r\n                                    '매수' :\r\n                                    '매도'\r\n                                ) :\r\n                                  null\r\n                              }\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            {\r\n                              item.crypto_price !== undefined ?\r\n                                (item.crypto_price).toLocaleString() :\r\n                                null\r\n                            }\r\n                            <br />\r\n                            {\r\n                              item.trade_price !== undefined ?\r\n                                (Number(item.trade_price)).toLocaleString() :\r\n                                null\r\n                            }\r\n                          </td>\r\n                          <td>\r\n                            {\r\n                              item.trade_amount !== undefined ?\r\n                                (\r\n                                  (String(item.trade_amount)).length <= 10 ?\r\n                                    item.trade_amount :\r\n                                    (\r\n                                      String(item.trade_amount)[9] === '.' ?\r\n                                        (String(item.trade_amount)).substring(0, 9) :\r\n                                        (String(item.trade_amount)).substring(0, 10)\r\n                                    )\r\n                                ) :\r\n                                null\r\n                            }\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  ) :\r\n                  null\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </SimpleBar>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface ModalProps {\r\n  modalOpen: boolean;\r\n  setModalOpen: (open: boolean) => void;\r\n  toggleModal: () => void;\r\n}\r\n\r\ninterface CompleteModalProps {\r\n  completeModalOpen: boolean;\r\n  setCompleteModalOpen: (open: boolean) => void;\r\n  completeToggleModal: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  dialog: {\r\n    '& .MuiDialog-paper': {\r\n      width: '600px',\r\n      height: '200px'\r\n    },\r\n    '& .MuiDialogTitle-root .MuiTypography-root': {\r\n      marginTop: '10px',\r\n      marginLeft: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      marginTop: '-10px',\r\n      marginLeft: '10px',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      marginBottom: '10px',\r\n    },\r\n    '& .MuiDialogActions-root .MuiButton-root': {\r\n      fontWeight: 'bold',\r\n      fontSize: '14.5px',\r\n    }\r\n  },\r\n});\r\n\r\nconst ModalSumbit: React.FC<ModalProps> = ({ modalOpen, toggleModal }) => {\r\n\r\n  const classes = useStyles();\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={modalOpen} onClose={toggleModal} className={classes.dialog} maxWidth={false}>\r\n        <DialogTitle>안내</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            // JSX에서는 +등으로 문자열을 묶을 수 없으므로 하나의 배열로 반환\r\n            sectionChange === '매수' ?\r\n              [\"매수 요청이 정상적으로 완료되었습니다.\", <br key=\"buy\" />,\r\n                \"요청하신 매수 가격과 일치하는 매수 요청이 발생하면 거래가 완료됩니다.\"] :\r\n              [\"매도 요청이 정상적으로 완료되었습니다.\", <br key=\"sell\" />,\r\n                \"요청하신 매도 가격과 일치하는 매도 요청이 발생하면 거래가 완료됩니다.\"]\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleModal} color=\"primary\">확인</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ModalComplete: React.FC<CompleteModalProps> = ({ completeModalOpen, completeToggleModal }) => {\r\n\r\n  const classes = useStyles();\r\n  const sectionChange = useSelector((state: RootState) => state.sectionChange);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={completeModalOpen} onClose={completeToggleModal} className={classes.dialog} maxWidth={false}>\r\n        <DialogTitle>안내</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            sectionChange === '매수' ?\r\n              \"성공적으로 화폐를 매수했습니다.\" :\r\n              \"성공적으로 화폐를 매도했습니다.\"\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={completeToggleModal} color=\"primary\">확인</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { PriceDetail };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}